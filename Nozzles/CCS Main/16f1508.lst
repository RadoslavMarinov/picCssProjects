CCS PCM C Compiler, Version 5.025, 5967               30-септ-14 20:32

               Filename:   D:\Projects\Nozzles\CCS Main\16f1508.lst

               ROM used:   2433 words (59%)
                           Largest free fragment is 1204
               RAM used:   19 (7%) at main() level
                           181 (71%) worst case
               Stack used: 6 locations (5 in main + 1 for interrupts)
               Stack size: 16

*
0000:  MOVLP  00
0001:  GOTO   569
0002:  NOP
*
0004:  CLRF   03
0005:  MOVLP  00
0006:  MOVLB  00
0007:  MOVF   77,W
0008:  MOVWF  20
0009:  MOVF   78,W
000A:  MOVWF  21
000B:  MOVF   79,W
000C:  MOVWF  22
000D:  MOVF   7A,W
000E:  MOVWF  23
000F:  MOVLB  03
0010:  MOVF   11,W
0011:  MOVLB  00
0012:  MOVWF  24
0013:  MOVLB  03
0014:  MOVF   12,W
0015:  MOVLB  00
0016:  MOVWF  25
0017:  MOVLB  03
0018:  MOVF   13,W
0019:  MOVLB  00
001A:  MOVWF  26
001B:  MOVLB  03
001C:  MOVF   14,W
001D:  MOVLB  00
001E:  MOVWF  27
001F:  BTFSS  0B.3
0020:  GOTO   023
0021:  BTFSC  0B.0
0022:  GOTO   03C
0023:  MOVF   20,W
0024:  MOVWF  77
0025:  MOVF   21,W
0026:  MOVWF  78
0027:  MOVF   22,W
0028:  MOVWF  79
0029:  MOVF   23,W
002A:  MOVWF  7A
002B:  MOVF   24,W
002C:  MOVLB  03
002D:  MOVWF  11
002E:  MOVLB  00
002F:  MOVF   25,W
0030:  MOVLB  03
0031:  MOVWF  12
0032:  MOVLB  00
0033:  MOVF   26,W
0034:  MOVLB  03
0035:  MOVWF  13
0036:  MOVLB  00
0037:  MOVF   27,W
0038:  MOVLB  03
0039:  MOVWF  14
003A:  RETFIE
003B:  MOVLB  00
003C:  MOVLP  00
003D:  GOTO   043
.................... #include <16f1508.h> 
.................... //////////// Standard Header file for the PIC16F1508 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F1508 
003E:  BRW
003F:  RETLW  28
0040:  RETLW  0C
0041:  RETLW  01
0042:  RETLW  06
*
0093:  MOVF   0B,W
0094:  MOVLB  02
0095:  MOVWF  24
0096:  BCF    0B.7
0097:  MOVLW  E0
0098:  MOVLB  03
0099:  ANDWF  11,F
009A:  BSF    15.7
009B:  BSF    15.2
009C:  BSF    15.5
009D:  MOVLW  20
009E:  MOVWF  05
009F:  MOVLW  64
00A0:  MOVWF  04
00A1:  MOVLW  20
00A2:  MOVWF  77
00A3:  BSF    15.0
00A4:  NOP
00A5:  NOP
00A6:  MOVF   11,W
00A7:  SUBWF  7A,W
00A8:  BTFSC  03.2
00A9:  GOTO   0B1
00AA:  MOVF   13,W
00AB:  MOVWF  00
00AC:  INCF   04,F
00AD:  MOVF   14,W
00AE:  MOVWF  00
00AF:  INCF   04,F
00B0:  GOTO   0B7
00B1:  MOVF   78,W
00B2:  MOVWF  00
00B3:  INCF   04,F
00B4:  MOVF   79,W
00B5:  MOVWF  00
00B6:  INCF   04,F
00B7:  INCF   11,F
00B8:  DECFSZ 77,F
00B9:  GOTO   0A3
00BA:  DECF   11,F
00BB:  MOVLW  E0
00BC:  ANDWF  11,F
00BD:  BSF    15.4
00BE:  MOVLW  55
00BF:  MOVWF  16
00C0:  MOVLW  AA
00C1:  MOVWF  16
00C2:  BSF    15.1
00C3:  NOP
00C4:  NOP
00C5:  BCF    15.4
00C6:  MOVLW  20
00C7:  MOVWF  05
00C8:  MOVLW  64
00C9:  MOVWF  04
00CA:  MOVLW  20
00CB:  MOVWF  77
00CC:  MOVF   00,W
00CD:  MOVWF  13
00CE:  INCF   04,F
00CF:  MOVF   00,W
00D0:  MOVWF  14
00D1:  INCF   04,F
00D2:  MOVLW  55
00D3:  MOVWF  16
00D4:  MOVLW  AA
00D5:  MOVWF  16
00D6:  BSF    15.1
00D7:  NOP
00D8:  NOP
00D9:  INCF   11,F
00DA:  DECFSZ 77,F
00DB:  GOTO   0CC
00DC:  DECF   11,F
00DD:  BCF    15.5
00DE:  MOVLW  55
00DF:  MOVWF  16
00E0:  MOVLW  AA
00E1:  MOVWF  16
00E2:  BSF    15.1
00E3:  NOP
00E4:  NOP
00E5:  BCF    15.2
00E6:  MOVLB  02
00E7:  MOVF   24,W
00E8:  IORWF  0B,F
*
00F0:  DATA 8C,16
00F1:  DATA BE,29
00F2:  DATA F4,30
00F3:  DATA 72,3A
00F4:  DATA A0,29
00F5:  DATA E5,39
00F6:  DATA F3,34
00F7:  DATA 6E,00
00F8:  DATA 0A,10
00F9:  DATA 20,26
00FA:  DATA E1,39
00FB:  DATA 74,10
00FC:  DATA D3,32
00FD:  DATA F3,39
00FE:  DATA E9,37
00FF:  DATA 6E,00
0100:  DATA 0C,10
0101:  DATA A0,29
0102:  DATA F4,30
0103:  DATA 72,3A
0104:  DATA A0,29
0105:  DATA E5,39
0106:  DATA F3,34
0107:  DATA 6E,00
0108:  DATA 8A,16
0109:  DATA 3E,26
010A:  DATA E1,39
010B:  DATA 74,10
010C:  DATA D3,32
010D:  DATA F3,39
010E:  DATA E9,37
010F:  DATA 6E,00
0110:  DATA 8C,16
0111:  DATA BE,29
0112:  DATA F4,30
0113:  DATA 72,3A
0114:  DATA A0,29
0115:  DATA E5,39
0116:  DATA F3,34
0117:  DATA 6E,00
0118:  DATA 0A,10
0119:  DATA 20,26
011A:  DATA E1,39
011B:  DATA 74,10
011C:  DATA D3,32
011D:  DATA F3,39
011E:  DATA E9,37
011F:  DATA 6E,00
0120:  DATA 0C,29
0121:  DATA D0,26
0122:  DATA A0,12
0123:  DATA EC,3A
0124:  DATA 00,00
0125:  DATA 0C,29
0126:  DATA D0,26
0127:  DATA A0,12
0128:  DATA EC,3A
0129:  DATA 00,01
012A:  DATA 0C,29
012B:  DATA D0,26
012C:  DATA A0,12
012D:  DATA EC,3A
012E:  DATA 00,01
012F:  DATA 0C,29
0130:  DATA D0,26
0131:  DATA A0,12
0132:  DATA EC,3A
0133:  DATA 00,01
0134:  DATA 0C,29
0135:  DATA D0,26
0136:  DATA A0,12
0137:  DATA EC,3A
0138:  DATA 00,01
0139:  DATA 0C,29
013A:  DATA D0,26
013B:  DATA A0,12
013C:  DATA EC,3A
013D:  DATA 00,01
013E:  DATA 0C,29
013F:  DATA D0,26
0140:  DATA A0,12
0141:  DATA EC,3A
0142:  DATA 00,01
0143:  DATA 0C,29
0144:  DATA D0,26
0145:  DATA A0,12
0146:  DATA EC,3A
0147:  DATA 00,01
0148:  DATA 0C,29
0149:  DATA D0,26
014A:  DATA A0,12
014B:  DATA EC,3A
014C:  DATA 00,01
014D:  DATA 0C,29
014E:  DATA D0,26
014F:  DATA A0,12
0150:  DATA EC,3A
0151:  DATA 00,01
0152:  DATA 0C,29
0153:  DATA D0,26
0154:  DATA A0,12
0155:  DATA EC,3A
0156:  DATA 00,01
0157:  DATA 0C,29
0158:  DATA D0,26
0159:  DATA A0,12
015A:  DATA EC,3A
015B:  DATA 00,01
015C:  DATA 0C,29
015D:  DATA D0,26
015E:  DATA A0,12
015F:  DATA EC,3A
0160:  DATA 00,01
0161:  DATA 0C,29
0162:  DATA D0,26
0163:  DATA A0,12
0164:  DATA EC,3A
0165:  DATA 00,01
0166:  DATA 0C,29
0167:  DATA D0,26
0168:  DATA A0,12
0169:  DATA EC,3A
016A:  DATA 00,01
016B:  DATA 0C,29
016C:  DATA D0,26
016D:  DATA A0,12
016E:  DATA EC,3A
016F:  DATA 00,01
0170:  DATA 0C,29
0171:  DATA D0,26
0172:  DATA A0,12
0173:  DATA EC,3A
0174:  DATA 00,01
0175:  DATA 0C,29
0176:  DATA D0,26
0177:  DATA A0,12
0178:  DATA EC,3A
0179:  DATA 00,01
017A:  DATA 0C,29
017B:  DATA D0,26
017C:  DATA A0,12
017D:  DATA EC,3A
017E:  DATA 00,01
017F:  DATA 0C,29
0180:  DATA D0,26
0181:  DATA A0,12
0182:  DATA EC,3A
0183:  DATA 00,01
0184:  DATA 0C,29
0185:  DATA D0,26
0186:  DATA A0,12
0187:  DATA EC,3A
0188:  DATA 00,01
0189:  DATA 0C,29
018A:  DATA D0,26
018B:  DATA A0,12
018C:  DATA EC,3A
018D:  DATA 00,01
018E:  DATA 0C,29
018F:  DATA D0,26
0190:  DATA A0,12
0191:  DATA EC,3A
0192:  DATA 00,01
0193:  DATA 0C,29
0194:  DATA D0,26
0195:  DATA A0,12
0196:  DATA EC,3A
0197:  DATA 00,00
*
03D6:  MOVF   0B,W
03D7:  BCF    0B.7
03D8:  MOVLB  03
03D9:  BSF    15.7
03DA:  BSF    15.0
03DB:  NOP
03DC:  NOP
03DD:  BTFSC  09.7
03DE:  BSF    0B.7
03DF:  MOVF   13,W
03E0:  ANDLW  7F
03E1:  BTFSC  03.2
03E2:  GOTO   422
03E3:  MOVLB  00
03E4:  MOVWF  2E
03E5:  MOVLB  03
03E6:  MOVF   11,W
03E7:  MOVLB  00
03E8:  MOVWF  2F
03E9:  MOVLB  03
03EA:  MOVF   12,W
03EB:  MOVLB  00
03EC:  MOVWF  30
03ED:  MOVF   2E,W
03EE:  MOVLB  01
03EF:  MOVWF  28
03F0:  MOVLB  00
03F1:  CALL   298
03F2:  MOVF   2F,W
03F3:  MOVLB  03
03F4:  MOVWF  11
03F5:  MOVLB  00
03F6:  MOVF   30,W
03F7:  MOVLB  03
03F8:  MOVWF  12
03F9:  MOVF   0B,W
03FA:  BCF    0B.7
03FB:  BSF    15.7
03FC:  BSF    15.0
03FD:  NOP
03FE:  NOP
03FF:  BTFSC  09.7
0400:  BSF    0B.7
0401:  RLF    13,W
0402:  RLF    14,W
0403:  ANDLW  7F
0404:  BTFSC  03.2
0405:  GOTO   422
0406:  MOVLB  00
0407:  MOVWF  2E
0408:  MOVLB  03
0409:  MOVF   11,W
040A:  MOVLB  00
040B:  MOVWF  2F
040C:  MOVLB  03
040D:  MOVF   12,W
040E:  MOVLB  00
040F:  MOVWF  30
0410:  MOVF   2E,W
0411:  MOVLB  01
0412:  MOVWF  28
0413:  MOVLB  00
0414:  CALL   298
0415:  MOVF   2F,W
0416:  MOVLB  03
0417:  MOVWF  11
0418:  MOVLB  00
0419:  MOVF   30,W
041A:  MOVLB  03
041B:  MOVWF  12
041C:  INCF   11,F
041D:  BTFSC  03.2
041E:  INCF   12,F
041F:  MOVLB  00
0420:  GOTO   3D6
0421:  MOVLB  03
0422:  MOVLB  00
0423:  RETURN
*
049E:  MOVF   0B,W
049F:  BCF    0B.7
04A0:  MOVLB  03
04A1:  BSF    15.7
04A2:  BSF    15.0
04A3:  NOP
04A4:  NOP
04A5:  BTFSC  09.7
04A6:  BSF    0B.7
04A7:  BTFSC  03.0
04A8:  GOTO   4D1
04A9:  MOVF   13,W
04AA:  ANDLW  7F
04AB:  MOVLB  00
04AC:  MOVWF  2E
04AD:  MOVLB  03
04AE:  MOVF   11,W
04AF:  MOVLB  00
04B0:  MOVWF  2F
04B1:  MOVLB  03
04B2:  MOVF   12,W
04B3:  MOVLB  00
04B4:  MOVWF  30
04B5:  MOVF   2E,W
04B6:  MOVLB  01
04B7:  MOVWF  28
04B8:  MOVLB  00
04B9:  CALL   298
04BA:  MOVF   2F,W
04BB:  MOVLB  03
04BC:  MOVWF  11
04BD:  MOVLB  00
04BE:  MOVF   30,W
04BF:  MOVLB  03
04C0:  MOVWF  12
04C1:  MOVF   0B,W
04C2:  BCF    0B.7
04C3:  BSF    15.7
04C4:  BSF    15.0
04C5:  NOP
04C6:  NOP
04C7:  BTFSC  09.7
04C8:  BSF    0B.7
04C9:  MOVLB  00
04CA:  DECFSZ 2D,F
04CB:  GOTO   4CD
04CC:  GOTO   4CF
04CD:  MOVLB  03
04CE:  GOTO   4D1
04CF:  GOTO   4F1
04D0:  MOVLB  03
04D1:  RLF    13,W
04D2:  RLF    14,W
04D3:  ANDLW  7F
04D4:  MOVLB  00
04D5:  MOVWF  2E
04D6:  MOVLB  03
04D7:  MOVF   11,W
04D8:  MOVLB  00
04D9:  MOVWF  2F
04DA:  MOVLB  03
04DB:  MOVF   12,W
04DC:  MOVLB  00
04DD:  MOVWF  30
04DE:  MOVF   2E,W
04DF:  MOVLB  01
04E0:  MOVWF  28
04E1:  MOVLB  00
04E2:  CALL   298
04E3:  MOVF   2F,W
04E4:  MOVLB  03
04E5:  MOVWF  11
04E6:  MOVLB  00
04E7:  MOVF   30,W
04E8:  MOVLB  03
04E9:  MOVWF  12
04EA:  INCF   11,F
04EB:  BTFSC  03.2
04EC:  INCF   12,F
04ED:  BCF    03.0
04EE:  MOVLB  00
04EF:  DECFSZ 2D,F
04F0:  GOTO   49E
04F1:  RETURN
04F2:  MOVF   05,W
04F3:  MOVWF  37
04F4:  MOVF   04,W
04F5:  MOVWF  36
04F6:  SWAPF  2E,W
04F7:  IORLW  F0
04F8:  MOVWF  32
04F9:  ADDWF  32,F
04FA:  ADDLW  E2
04FB:  MOVWF  33
04FC:  ADDLW  32
04FD:  MOVWF  35
04FE:  MOVF   2E,W
04FF:  ANDLW  0F
0500:  ADDWF  33,F
0501:  ADDWF  33,F
0502:  ADDWF  35,F
0503:  ADDLW  E9
0504:  MOVWF  34
0505:  ADDWF  34,F
0506:  ADDWF  34,F
0507:  SWAPF  2D,W
0508:  ANDLW  0F
0509:  ADDWF  34,F
050A:  ADDWF  35,F
050B:  RLF    34,F
050C:  RLF    35,F
050D:  COMF   35,F
050E:  RLF    35,F
050F:  MOVF   2D,W
0510:  ANDLW  0F
0511:  ADDWF  35,F
0512:  RLF    32,F
0513:  MOVLW  07
0514:  MOVWF  31
0515:  MOVLW  0A
0516:  ADDWF  35,F
0517:  DECF   34,F
0518:  BTFSS  03.0
0519:  GOTO   516
051A:  ADDWF  34,F
051B:  DECF   33,F
051C:  BTFSS  03.0
051D:  GOTO   51A
051E:  ADDWF  33,F
051F:  DECF   32,F
0520:  BTFSS  03.0
0521:  GOTO   51E
0522:  ADDWF  32,F
0523:  DECF   31,F
0524:  BTFSS  03.0
0525:  GOTO   522
0526:  MOVLW  20
0527:  MOVWF  05
0528:  MOVLW  11
0529:  MOVWF  04
052A:  MOVLW  07
052B:  ANDWF  36,W
052C:  BCF    36.6
052D:  ADDWF  04,F
052E:  MOVLW  00
052F:  ADDWFC 05,F
0530:  MOVF   04,W
0531:  SUBLW  15
0532:  BTFSS  03.2
0533:  GOTO   538
0534:  MOVF   05,W
0535:  SUBLW  20
0536:  BTFSC  03.2
0537:  BSF    36.6
0538:  MOVF   00,W
0539:  MOVWF  77
053A:  BTFSS  03.2
053B:  GOTO   544
053C:  BTFSC  36.6
053D:  GOTO   544
053E:  BTFSC  36.4
053F:  GOTO   555
0540:  BTFSC  36.3
0541:  GOTO   544
0542:  MOVLW  20
0543:  GOTO   547
0544:  BSF    36.3
0545:  BCF    36.4
0546:  MOVLW  30
0547:  ADDWF  77,F
0548:  MOVF   05,W
0549:  MOVWF  2E
054A:  MOVF   04,W
054B:  MOVWF  2D
054C:  MOVF   77,W
054D:  MOVLB  01
054E:  MOVWF  28
054F:  MOVLB  00
0550:  CALL   298
0551:  MOVF   2E,W
0552:  MOVWF  05
0553:  MOVF   2D,W
0554:  MOVWF  04
0555:  ADDFSR 01,FSR0
0556:  BTFSS  36.6
0557:  GOTO   530
0558:  RETURN
....................  
.................... #list 
....................  
.................... #fuses INTRC_IO,NOMCLR,NOWDT 
.................... #use delay(clock=16M) 
*
0198:  MOVLW  20
0199:  MOVWF  05
019A:  MOVLW  59
019B:  MOVWF  04
019C:  MOVF   00,W
019D:  BTFSC  03.2
019E:  GOTO   1AD
019F:  MOVLW  05
01A0:  MOVWF  78
01A1:  CLRF   77
01A2:  DECFSZ 77,F
01A3:  GOTO   1A2
01A4:  DECFSZ 78,F
01A5:  GOTO   1A1
01A6:  MOVLW  2E
01A7:  MOVWF  77
01A8:  DECFSZ 77,F
01A9:  GOTO   1A8
01AA:  GOTO   1AB
01AB:  DECFSZ 00,F
01AC:  GOTO   19F
01AD:  RETURN
*
0559:  MOVLW  03
055A:  SUBWF  2E,F
055B:  BTFSS  03.0
055C:  GOTO   568
055D:  MOVLW  20
055E:  MOVWF  05
055F:  MOVLW  0E
0560:  MOVWF  04
0561:  MOVF   00,W
0562:  BTFSC  03.2
0563:  GOTO   568
0564:  GOTO   566
0565:  NOP
0566:  DECFSZ 00,F
0567:  GOTO   565
0568:  RETURN
....................  
.................... #define inc_butt pin_a5 
.................... #define dec_butt pin_a4 
.................... #define confirm_butt pin_c5 
.................... #define led_r pin_c3 
.................... #define led_w pin_c4 
.................... #define relay_SB pin_c6 
.................... #define T1 pin_c7 
.................... #define T2 pin_b7 
.................... #include <flex_lcd.c> 
.................... // flex_lcd.c  
....................  
.................... // These pins are for the Microchip PicDem2-Plus board,  
.................... // which is what I used to test the driver.  Change these  
.................... // pins to fit your own board. s 
....................  
.................... #define LCD_DB4   PIN_B7 
.................... #define LCD_DB5   PIN_C7 
.................... #define LCD_DB6   PIN_C6  
.................... #define LCD_DB7   PIN_C3  
.................... #define LCD_E     PIN_B4  
.................... #define LCD_RS    PIN_B6 
.................... #define LCD_RW    PIN_B5   
....................  
.................... // If you only want a 6-pin interface to your LCD, then  
.................... // connect the R/W pin on the LCD to ground, and comment  
.................... // out the following line.  
....................  
.................... #define USE_LCD_RW   1       
....................  
.................... //========================================  
....................  
.................... #define lcd_type 2        // 0=5x7, 1=5x10, 2=2 lines  
.................... #define lcd_line_two 0x40 // LCD RAM address for the 2nd line  
....................  
....................  
.................... int8 const LCD_INIT_STRING[4] =  
.................... {  
....................  0x20 | (lcd_type << 2), // Func set: 4-bit, 2 lines, 5x8 dots  
....................  0xc,                    // Display on  
....................  1,                      // Clear display  
....................  6                       // Increment cursor  
....................  };  
....................                                
....................  
.................... //-------------------------------------  
.................... void lcd_send_nibble(int8 nibble)  
.................... {  
.................... // Note:  !! converts an integer expression  
.................... // to a boolean (1 or 0).  
....................  output_bit(LCD_DB4, !!(nibble & 1));  
*
01AE:  MOVLB  01
01AF:  BTFSC  30.0
01B0:  GOTO   1B5
01B1:  MOVLB  02
01B2:  BCF    0D.7
01B3:  GOTO   1B7
01B4:  MOVLB  01
01B5:  MOVLB  02
01B6:  BSF    0D.7
01B7:  MOVLB  01
01B8:  BCF    0D.7
....................  output_bit(LCD_DB5, !!(nibble & 2));   
01B9:  BTFSC  30.1
01BA:  GOTO   1BF
01BB:  MOVLB  02
01BC:  BCF    0E.7
01BD:  GOTO   1C1
01BE:  MOVLB  01
01BF:  MOVLB  02
01C0:  BSF    0E.7
01C1:  MOVLB  01
01C2:  BCF    0E.7
....................  output_bit(LCD_DB6, !!(nibble & 4));     
01C3:  BTFSC  30.2
01C4:  GOTO   1C9
01C5:  MOVLB  02
01C6:  BCF    0E.6
01C7:  GOTO   1CB
01C8:  MOVLB  01
01C9:  MOVLB  02
01CA:  BSF    0E.6
01CB:  MOVLB  01
01CC:  BCF    0E.6
....................  output_bit(LCD_DB7, !!(nibble & 8));     
01CD:  BTFSC  30.3
01CE:  GOTO   1D3
01CF:  MOVLB  02
01D0:  BCF    0E.3
01D1:  GOTO   1D5
01D2:  MOVLB  01
01D3:  MOVLB  02
01D4:  BSF    0E.3
01D5:  MOVLB  01
01D6:  BCF    0E.3
....................  
....................  delay_cycles(1);  
01D7:  NOP
....................  output_high(LCD_E);  
01D8:  BCF    0D.4
01D9:  MOVLB  02
01DA:  BSF    0D.4
....................  delay_us(2);  
01DB:  MOVLW  02
01DC:  MOVWF  77
01DD:  DECFSZ 77,F
01DE:  GOTO   1DD
01DF:  NOP
....................  output_low(LCD_E);  
01E0:  MOVLB  01
01E1:  BCF    0D.4
01E2:  MOVLB  02
01E3:  BCF    0D.4
01E4:  MOVLB  00
01E5:  RETURN
.................... }  
....................  
.................... //-----------------------------------  
.................... // This sub-routine is only called by lcd_read_byte().  
.................... // It's not a stand-alone routine.  For example, the  
.................... // R/W signal is set high by lcd_read_byte() before  
.................... // this routine is called.       
....................  
.................... #ifdef USE_LCD_RW  
.................... int8 lcd_read_nibble(void)  
.................... {  
.................... int8 retval;  
.................... // Create bit variables so that we can easily set  
.................... // individual bits in the retval variable.  
.................... #bit retval_0 = retval.0  
.................... #bit retval_1 = retval.1  
.................... #bit retval_2 = retval.2  
.................... #bit retval_3 = retval.3  
....................  
.................... retval = 0;  
01E6:  MOVLB  01
01E7:  CLRF   31
....................      
.................... output_high(LCD_E);  
01E8:  BCF    0D.4
01E9:  MOVLB  02
01EA:  BSF    0D.4
.................... delay_cycles(1);  
01EB:  NOP
....................  
.................... retval_0 = input(LCD_DB4);  
01EC:  MOVLB  01
01ED:  BSF    0D.7
01EE:  BCF    31.0
01EF:  MOVLB  00
01F0:  BTFSS  0D.7
01F1:  GOTO   1F5
01F2:  MOVLB  01
01F3:  BSF    31.0
01F4:  MOVLB  00
.................... retval_1 = input(LCD_DB5);  
01F5:  MOVLB  01
01F6:  BSF    0E.7
01F7:  BCF    31.1
01F8:  MOVLB  00
01F9:  BTFSS  0E.7
01FA:  GOTO   1FE
01FB:  MOVLB  01
01FC:  BSF    31.1
01FD:  MOVLB  00
.................... retval_2 = input(LCD_DB6);  
01FE:  MOVLB  01
01FF:  BSF    0E.6
0200:  BCF    31.2
0201:  MOVLB  00
0202:  BTFSS  0E.6
0203:  GOTO   207
0204:  MOVLB  01
0205:  BSF    31.2
0206:  MOVLB  00
.................... retval_3 = input(LCD_DB7);  
0207:  MOVLB  01
0208:  BSF    0E.3
0209:  BCF    31.3
020A:  MOVLB  00
020B:  BTFSS  0E.3
020C:  GOTO   210
020D:  MOVLB  01
020E:  BSF    31.3
020F:  MOVLB  00
....................    
.................... output_low(LCD_E);  
0210:  MOVLB  01
0211:  BCF    0D.4
0212:  MOVLB  02
0213:  BCF    0D.4
....................      
.................... return(retval);     
0214:  MOVLB  01
0215:  MOVF   31,W
0216:  MOVWF  78
0217:  MOVLB  00
0218:  RETURN
.................... }     
.................... #endif  
....................  
.................... //---------------------------------------  
.................... // Read a byte from the LCD and return it.  
....................  
.................... #ifdef USE_LCD_RW  
.................... int8 lcd_read_byte(void)  
.................... {  
.................... int8 low;  
.................... int8 high;  
....................  
.................... output_high(LCD_RW);  
*
021D:  MOVLB  01
021E:  BCF    0D.5
021F:  MOVLB  02
0220:  BSF    0D.5
.................... delay_cycles(1);  
0221:  NOP
....................  
.................... high = lcd_read_nibble();  
0222:  MOVLB  00
0223:  CALL   1E6
0224:  MOVF   78,W
0225:  MOVLB  01
0226:  MOVWF  30
....................  
.................... low = lcd_read_nibble();  
0227:  MOVLB  00
0228:  CALL   1E6
0229:  MOVF   78,W
022A:  MOVLB  01
022B:  MOVWF  2F
....................  
.................... return( (high<<4) | low);  
022C:  SWAPF  30,W
022D:  MOVWF  77
022E:  MOVLW  F0
022F:  ANDWF  77,F
0230:  MOVF   77,W
0231:  IORWF  2F,W
0232:  MOVWF  78
.................... }  
.................... #endif  
....................  
.................... //----------------------------------------  
.................... // Send a byte to the LCD.  
.................... void lcd_send_byte(int8 address, int8 n)  
.................... {  
.................... output_low(LCD_RS);  
*
0219:  MOVLB  01
021A:  BCF    0D.6
021B:  MOVLB  02
021C:  BCF    0D.6
....................  
.................... #ifdef USE_LCD_RW  
.................... while(bit_test(lcd_read_byte(),7)) ;  
*
0233:  MOVF   78,W
0234:  MOVWF  2F
0235:  BTFSC  2F.7
0236:  GOTO   21E
.................... #else  
.................... delay_us(60);   
.................... #endif  
....................  
.................... if(address)  
0237:  MOVF   2D,F
0238:  BTFSC  03.2
0239:  GOTO   23F
....................    output_high(LCD_RS);  
023A:  BCF    0D.6
023B:  MOVLB  02
023C:  BSF    0D.6
023D:  GOTO   242
023E:  MOVLB  01
.................... else  
....................    output_low(LCD_RS);  
023F:  BCF    0D.6
0240:  MOVLB  02
0241:  BCF    0D.6
....................        
....................  delay_cycles(1);  
0242:  NOP
....................  
.................... #ifdef USE_LCD_RW  
.................... output_low(LCD_RW);  
0243:  MOVLB  01
0244:  BCF    0D.5
0245:  MOVLB  02
0246:  BCF    0D.5
.................... delay_cycles(1);  
0247:  NOP
.................... #endif  
....................  
.................... output_low(LCD_E);  
0248:  MOVLB  01
0249:  BCF    0D.4
024A:  MOVLB  02
024B:  BCF    0D.4
....................  
.................... lcd_send_nibble(n >> 4);  
024C:  MOVLB  01
024D:  SWAPF  2E,W
024E:  MOVWF  2F
024F:  MOVLW  0F
0250:  ANDWF  2F,F
0251:  MOVF   2F,W
0252:  MOVWF  30
0253:  MOVLB  00
0254:  CALL   1AE
.................... lcd_send_nibble(n & 0xf);  
0255:  MOVLB  01
0256:  MOVF   2E,W
0257:  ANDLW  0F
0258:  MOVWF  2F
0259:  MOVWF  30
025A:  MOVLB  00
025B:  CALL   1AE
025C:  RETURN
.................... }  
....................  
.................... //----------------------------  
.................... void lcd_init(void)  
.................... {  
.................... int8 i;  
....................  
.................... output_low(LCD_RS);  
025D:  MOVLB  01
025E:  BCF    0D.6
025F:  MOVLB  02
0260:  BCF    0D.6
....................  
.................... #ifdef USE_LCD_RW  
.................... output_low(LCD_RW);  
0261:  MOVLB  01
0262:  BCF    0D.5
0263:  MOVLB  02
0264:  BCF    0D.5
.................... #endif  
....................  
.................... output_low(LCD_E);  
0265:  MOVLB  01
0266:  BCF    0D.4
0267:  MOVLB  02
0268:  BCF    0D.4
....................  
.................... delay_ms(15);  
0269:  MOVLW  0F
026A:  MOVLB  01
026B:  MOVWF  29
026C:  MOVLB  00
026D:  CALL   198
....................  
.................... for(i=0 ;i < 3; i++)  
026E:  CLRF   2D
026F:  MOVF   2D,W
0270:  SUBLW  02
0271:  BTFSS  03.0
0272:  GOTO   27F
....................    {  
....................     lcd_send_nibble(0x03);  
0273:  MOVLW  03
0274:  MOVLB  01
0275:  MOVWF  30
0276:  MOVLB  00
0277:  CALL   1AE
....................     delay_ms(5);  
0278:  MOVLW  05
0279:  MOVLB  01
027A:  MOVWF  29
027B:  MOVLB  00
027C:  CALL   198
027D:  INCF   2D,F
027E:  GOTO   26F
....................    }  
....................  
.................... lcd_send_nibble(0x02);  
027F:  MOVLW  02
0280:  MOVLB  01
0281:  MOVWF  30
0282:  MOVLB  00
0283:  CALL   1AE
....................  
.................... for(i=0; i < sizeof(LCD_INIT_STRING); i++)  
0284:  CLRF   2D
0285:  MOVF   2D,W
0286:  SUBLW  03
0287:  BTFSS  03.0
0288:  GOTO   296
....................    {  
....................     lcd_send_byte(0, LCD_INIT_STRING[i]);  
0289:  MOVF   2D,W
028A:  CALL   03E
028B:  MOVWF  2E
028C:  MOVLB  01
028D:  CLRF   2D
028E:  MOVLB  00
028F:  MOVF   2E,W
0290:  MOVLB  01
0291:  MOVWF  2E
0292:  MOVLB  00
0293:  CALL   219
....................      
....................     // If the R/W signal is not used, then  
....................     // the busy bit can't be polled.  One of  
....................     // the init commands takes longer than  
....................     // the hard-coded delay of 60 us, so in  
....................     // that case, lets just do a 5 ms delay  
....................     // after all four of them.  
....................     #ifndef USE_LCD_RW  
0294:  INCF   2D,F
0295:  GOTO   285
....................     delay_ms(5);  
....................     #endif  
....................    }  
0296:  MOVLP  00
0297:  GOTO   590 (RETURN)
....................  
.................... }  
....................  
.................... //----------------------------  
....................  
.................... void lcd_gotoxy(int8 x, int8 y)  
.................... {  
.................... int8 address;  
....................  
.................... if(y != 1)  
*
02B6:  DECFSZ 2A,W
02B7:  GOTO   2B9
02B8:  GOTO   2BC
....................    address = lcd_line_two;  
02B9:  MOVLW  40
02BA:  MOVWF  2B
02BB:  GOTO   2BD
.................... else  
....................    address=0;  
02BC:  CLRF   2B
....................  
.................... address += x-1;  
02BD:  MOVLW  01
02BE:  SUBWF  29,W
02BF:  ADDWF  2B,F
.................... lcd_send_byte(0, 0x80 | address);  
02C0:  MOVF   2B,W
02C1:  IORLW  80
02C2:  MOVWF  2C
02C3:  CLRF   2D
02C4:  MOVF   2C,W
02C5:  MOVWF  2E
02C6:  MOVLB  00
02C7:  CALL   219
.................... }  
....................  
.................... //-----------------------------  
.................... void lcd_putc(char c)  
.................... {  
....................  switch(c)  
*
0298:  MOVLB  01
0299:  MOVF   28,W
029A:  XORLW  0C
029B:  MOVLB  00
029C:  BTFSC  03.2
029D:  GOTO   2A5
029E:  XORLW  06
029F:  BTFSC  03.2
02A0:  GOTO   2B1
02A1:  XORLW  02
02A2:  BTFSC  03.2
02A3:  GOTO   2C9
02A4:  GOTO   2D0
....................    {  
....................     case '\f':  
....................       lcd_send_byte(0,1);  
02A5:  MOVLB  01
02A6:  CLRF   2D
02A7:  MOVLW  01
02A8:  MOVWF  2E
02A9:  MOVLB  00
02AA:  CALL   219
....................       delay_ms(2);  
02AB:  MOVLW  02
02AC:  MOVLB  01
02AD:  MOVWF  29
02AE:  MOVLB  00
02AF:  CALL   198
....................       break;  
02B0:  GOTO   2D7
....................      
....................     case '\n':  
....................        lcd_gotoxy(1,2);  
02B1:  MOVLW  01
02B2:  MOVLB  01
02B3:  MOVWF  29
02B4:  MOVLW  02
02B5:  MOVWF  2A
....................        break;  
*
02C8:  GOTO   2D7
....................      
....................     case '\b':  
....................        lcd_send_byte(0,0x10);  
02C9:  MOVLB  01
02CA:  CLRF   2D
02CB:  MOVLW  10
02CC:  MOVWF  2E
02CD:  MOVLB  00
02CE:  CALL   219
....................        break;  
02CF:  GOTO   2D7
....................      
....................     default:  
....................        lcd_send_byte(1,c);  
02D0:  MOVLW  01
02D1:  MOVLB  01
02D2:  MOVWF  2D
02D3:  MOVF   28,W
02D4:  MOVWF  2E
02D5:  MOVLB  00
02D6:  CALL   219
....................        break;  
....................    }  
02D7:  RETURN
.................... }  
....................  
.................... //------------------------------  
.................... #ifdef USE_LCD_RW  
.................... char lcd_getc(int8 x, int8 y)  
.................... {  
.................... char value;  
....................  
.................... lcd_gotoxy(x,y);  
....................  
.................... // Wait until busy flag is low.  
.................... while(bit_test(lcd_read_byte(),7));   
....................  
.................... output_high(LCD_RS);  
.................... value = lcd_read_byte();  
.................... output_low(lcd_RS);  
....................  
.................... return(value);  
.................... }  
.................... #endif 
....................  
.................... unsigned int16 delay=300; 
.................... unsigned int16 rpm=100; 
.................... int1 print=1; 
....................  
.................... #INT_RA 
.................... void isr()                             
.................... { 
....................    if(!input(inc_butt)&&rpm<10000) 
*
0043:  MOVLB  01
0044:  BSF    0C.5
0045:  MOVLB  00
0046:  BTFSC  0C.5
0047:  GOTO   066
0048:  MOVF   2B,W
0049:  SUBLW  27
004A:  BTFSS  03.0
004B:  GOTO   066
004C:  BTFSS  03.2
004D:  GOTO   052
004E:  MOVF   2A,W
004F:  SUBLW  0F
0050:  BTFSS  03.0
0051:  GOTO   066
....................    { 
....................       if(rpm<500) 
0052:  MOVF   2B,W
0053:  SUBLW  01
0054:  BTFSS  03.0
0055:  GOTO   061
0056:  BTFSS  03.2
0057:  GOTO   05C
0058:  MOVF   2A,W
0059:  SUBLW  F3
005A:  BTFSS  03.0
005B:  GOTO   061
....................          rpm+=100; 
005C:  MOVLW  64
005D:  ADDWF  2A,F
005E:  MOVLW  00
005F:  ADDWFC 2B,F
0060:  GOTO   065
....................       else 
....................          rpm+=500; 
0061:  MOVLW  F4
0062:  ADDWF  2A,F
0063:  MOVLW  01
0064:  ADDWFC 2B,F
....................    } 
0065:  GOTO   086
....................    else if(!input(dec_butt)&&rpm>100) 
0066:  MOVLB  01
0067:  BSF    0C.4
0068:  MOVLB  00
0069:  BTFSC  0C.4
006A:  GOTO   086
006B:  MOVF   2B,F
006C:  BTFSS  03.2
006D:  GOTO   072
006E:  MOVF   2A,W
006F:  SUBLW  64
0070:  BTFSC  03.0
0071:  GOTO   086
....................    { 
....................       if(rpm>500) 
0072:  MOVF   2B,W
0073:  SUBLW  00
0074:  BTFSC  03.0
0075:  GOTO   082
0076:  XORLW  FF
0077:  BTFSS  03.2
0078:  GOTO   07D
0079:  MOVF   2A,W
007A:  SUBLW  F4
007B:  BTFSC  03.0
007C:  GOTO   082
....................          rpm-=500; 
007D:  MOVLW  F4
007E:  SUBWF  2A,F
007F:  MOVLW  01
0080:  SUBWFC 2B,F
0081:  GOTO   086
....................       else 
....................          rpm-=100; 
0082:  MOVLW  64
0083:  SUBWF  2A,F
0084:  MOVLW  00
0085:  SUBWFC 2B,F
....................    } 
....................    print=1; 
0086:  BSF    2C.0
....................    write_program_eeprom(0xfff,rpm); 
0087:  MOVLW  FF
0088:  MOVLB  03
0089:  MOVWF  11
008A:  MOVF   11,W
008B:  MOVWF  7A
008C:  MOVLW  0F
008D:  MOVWF  12
008E:  MOVLB  00
008F:  MOVF   2A,W
0090:  MOVWF  78
0091:  MOVF   2B,W
0092:  MOVWF  79
....................    clear_interrupt(INT_RA5_H2L|INT_RA4_H2L); 
*
00E9:  MOVLW  CF
00EA:  MOVLB  07
00EB:  ANDWF  13,F
00EC:  BCF    0B.0
00ED:  MOVLP  00
00EE:  MOVLB  00
00EF:  GOTO   023
....................    } 
....................  
.................... void print_f(); 
.................... void initialization(); 
.................... void session(); 
....................  
.................... void main() 
*
0569:  MOVLW  7A
056A:  MOVLB  01
056B:  MOVWF  19
056C:  MOVLW  01
056D:  MOVLB  00
056E:  MOVWF  29
056F:  MOVLW  2C
0570:  MOVWF  28
0571:  CLRF   2B
0572:  MOVLW  64
0573:  MOVWF  2A
0574:  BSF    2C.0
0575:  MOVLB  03
0576:  CLRF   0C
0577:  CLRF   0D
0578:  CLRF   0E
0579:  MOVLB  02
057A:  CLRF   12
057B:  CLRF   11
057C:  CLRF   14
057D:  CLRF   13
.................... { 
.................... output_high(led_w); 
057E:  MOVLB  01
057F:  BCF    0E.4
0580:  MOVLB  02
0581:  BSF    0E.4
.................... DISABLE_INTERRUPTS(INT_RA5_H2L|INT_RA4_H2L); 
0582:  MOVLW  CF
0583:  MOVLB  07
0584:  ANDWF  12,F
.................... delay_ms(1500);  //wait for lcd booting 
0585:  MOVLW  06
0586:  MOVLB  00
0587:  MOVWF  2D
0588:  MOVLW  FA
0589:  MOVLB  01
058A:  MOVWF  29
058B:  MOVLB  00
058C:  CALL   198
058D:  DECFSZ 2D,F
058E:  GOTO   588
.................... lcd_init(); 
058F:  GOTO   25D
.................... output_low(T1); 
0590:  MOVLB  01
0591:  BCF    0E.7
0592:  MOVLB  02
0593:  BCF    0E.7
.................... output_low(T2); 
0594:  MOVLB  01
0595:  BCF    0D.7
0596:  MOVLB  02
0597:  BCF    0D.7
.................... initialization(); 
0598:  MOVLB  00
0599:  GOTO   2D8
.................... output_low(led_w); 
059A:  MOVLB  01
059B:  BCF    0E.4
059C:  MOVLB  02
059D:  BCF    0E.4
.................... session(); 
059E:  MOVLB  00
059F:  GOTO   424
.................... output_high(relay_SB); 
05A0:  MOVLB  01
05A1:  BCF    0E.6
05A2:  MOVLB  02
05A3:  BSF    0E.6
.................... ENABLE_INTERRUPTS(INT_RA5_H2L|INT_RA4_H2L); 
05A4:  BSF    0B.3
05A5:  MOVLW  30
05A6:  MOVLB  07
05A7:  IORWF  12,F
05A8:  MOVLW  CF
05A9:  ANDWF  11,F
.................... ENABLE_INTERRUPTS(GLOBAL); 
05AA:  MOVLW  C0
05AB:  IORWF  0B,F
.................... clear_interrupt(INT_RA5_H2L|INT_RA4_H2L); 
05AC:  MOVLW  CF
05AD:  ANDWF  13,F
.................... output_high(led_r); 
05AE:  MOVLB  01
05AF:  BCF    0E.3
05B0:  MOVLB  02
05B1:  BSF    0E.3
....................    while (true) 
....................    { 
....................       while(rpm<=3000) 
05B2:  MOVLB  00
05B3:  MOVF   2B,W
05B4:  SUBLW  0B
05B5:  BTFSS  03.0
05B6:  GOTO   5F7
05B7:  BTFSS  03.2
05B8:  GOTO   5BD
05B9:  MOVF   2A,W
05BA:  SUBLW  B8
05BB:  BTFSS  03.0
05BC:  GOTO   5F7
....................          { 
....................             if(print==1) 
05BD:  BTFSS  2C.0
05BE:  GOTO   5C2
....................                print_f(); 
05BF:  MOVLP  08
05C0:  CALL   000
05C1:  MOVLP  00
....................             output_low(T2); 
05C2:  MOVLB  01
05C3:  BCF    0D.7
05C4:  MOVLB  02
05C5:  BCF    0D.7
....................             output_high(T1); 
05C6:  MOVLB  01
05C7:  BCF    0E.7
05C8:  MOVLB  02
05C9:  BSF    0E.7
....................             delay_ms(delay); 
05CA:  MOVLB  00
05CB:  MOVF   29,W
05CC:  MOVWF  2D
05CD:  INCF   2D,F
05CE:  DECF   2D,F
05CF:  BTFSC  03.2
05D0:  GOTO   5D7
05D1:  MOVLW  FF
05D2:  MOVLB  01
05D3:  MOVWF  29
05D4:  MOVLB  00
05D5:  CALL   198
05D6:  GOTO   5CE
05D7:  MOVF   28,W
05D8:  MOVLB  01
05D9:  MOVWF  29
05DA:  MOVLB  00
05DB:  CALL   198
....................             output_low(T1);  
05DC:  MOVLB  01
05DD:  BCF    0E.7
05DE:  MOVLB  02
05DF:  BCF    0E.7
....................             output_high(T2); 
05E0:  MOVLB  01
05E1:  BCF    0D.7
05E2:  MOVLB  02
05E3:  BSF    0D.7
....................             delay_ms(delay);  
05E4:  MOVLB  00
05E5:  MOVF   29,W
05E6:  MOVWF  2D
05E7:  INCF   2D,F
05E8:  DECF   2D,F
05E9:  BTFSC  03.2
05EA:  GOTO   5F1
05EB:  MOVLW  FF
05EC:  MOVLB  01
05ED:  MOVWF  29
05EE:  MOVLB  00
05EF:  CALL   198
05F0:  GOTO   5E8
05F1:  MOVF   28,W
05F2:  MOVLB  01
05F3:  MOVWF  29
05F4:  MOVLB  00
05F5:  CALL   198
05F6:  GOTO   5B3
....................          } 
....................       while(rpm>3000) 
05F7:  MOVF   2B,W
05F8:  SUBLW  0A
05F9:  BTFSC  03.0
05FA:  GOTO   634
05FB:  XORLW  FF
05FC:  BTFSS  03.2
05FD:  GOTO   602
05FE:  MOVF   2A,W
05FF:  SUBLW  B8
0600:  BTFSC  03.0
0601:  GOTO   634
....................          { 
....................             if(print==1) 
0602:  BTFSS  2C.0
0603:  GOTO   607
....................                print_f(); 
0604:  MOVLP  08
0605:  CALL   000
0606:  MOVLP  00
....................             output_low(T2); 
0607:  MOVLB  01
0608:  BCF    0D.7
0609:  MOVLB  02
060A:  BCF    0D.7
....................             output_high(T1); 
060B:  MOVLB  01
060C:  BCF    0E.7
060D:  MOVLB  02
060E:  BSF    0E.7
....................             delay_us(delay); 
060F:  MOVLB  00
0610:  MOVF   29,W
0611:  MOVWF  2D
0612:  INCF   2D,F
0613:  DECF   2D,F
0614:  BTFSC  03.2
0615:  GOTO   61A
0616:  MOVLW  FF
0617:  MOVWF  2E
0618:  CALL   559
0619:  GOTO   613
061A:  MOVF   28,W
061B:  MOVWF  2E
061C:  CALL   559
....................             output_low(T1);  
061D:  MOVLB  01
061E:  BCF    0E.7
061F:  MOVLB  02
0620:  BCF    0E.7
....................             output_high(T2); 
0621:  MOVLB  01
0622:  BCF    0D.7
0623:  MOVLB  02
0624:  BSF    0D.7
....................             delay_us(delay); 
0625:  MOVLB  00
0626:  MOVF   29,W
0627:  MOVWF  2D
0628:  INCF   2D,F
0629:  DECF   2D,F
062A:  BTFSC  03.2
062B:  GOTO   630
062C:  MOVLW  FF
062D:  MOVWF  2E
062E:  CALL   559
062F:  GOTO   629
0630:  MOVF   28,W
0631:  MOVWF  2E
0632:  CALL   559
0633:  GOTO   5F7
....................          } 
0634:  GOTO   5B3
....................    } 
.................... } 
.................... void session() 
0635:  SLEEP
....................    { 
....................       int c; 
....................       printf(lcd_putc,"\f->Start Sessin"); 
*
0424:  MOVLW  F0
0425:  MOVLB  03
0426:  MOVWF  11
0427:  MOVLW  00
0428:  MOVWF  12
0429:  MOVLB  00
042A:  CALL   3D6
....................       printf(lcd_putc,"\n  Last Session");      
042B:  MOVLW  F8
042C:  MOVLB  03
042D:  MOVWF  11
042E:  MOVLW  00
042F:  MOVWF  12
0430:  MOVLB  00
0431:  CALL   3D6
....................       for(c=0;c<255;c++) 
0432:  CLRF   2D
0433:  INCFSZ 2D,W
0434:  GOTO   436
0435:  GOTO   49C
....................          { 
....................             if((!input(dec_butt))) 
0436:  MOVLB  01
0437:  BSF    0C.4
0438:  MOVLB  00
0439:  BTFSC  0C.4
043A:  GOTO   474
....................                { 
....................                   delay_ms(10); 
043B:  MOVLW  0A
043C:  MOVLB  01
043D:  MOVWF  29
043E:  MOVLB  00
043F:  CALL   198
....................                   if(!input(dec_butt)) 
0440:  MOVLB  01
0441:  BSF    0C.4
0442:  MOVLB  00
0443:  BTFSC  0C.4
0444:  GOTO   474
....................                      { 
....................                         printf(lcd_putc,"\f  Start Sessin"); 
0445:  MOVLW  00
0446:  MOVLB  03
0447:  MOVWF  11
0448:  MOVLW  01
0449:  MOVWF  12
044A:  MOVLB  00
044B:  CALL   3D6
....................                         printf(lcd_putc,"\n->Last Session"); 
044C:  MOVLW  08
044D:  MOVLB  03
044E:  MOVWF  11
044F:  MOVLW  01
0450:  MOVWF  12
0451:  MOVLB  00
0452:  CALL   3D6
....................                     
....................                         rpm=read_program_eeprom(0xfff); 
0453:  MOVLW  FF
0454:  MOVLB  03
0455:  MOVWF  11
0456:  MOVLW  0F
0457:  MOVWF  12
0458:  BSF    15.7
0459:  BSF    15.0
045A:  NOP
045B:  NOP
045C:  MOVF   14,W
045D:  MOVWF  7A
045E:  MOVF   13,W
045F:  MOVLB  00
0460:  MOVWF  2A
0461:  MOVF   7A,W
0462:  MOVWF  2B
....................                         if(rpm>6500) 
0463:  MOVF   2B,W
0464:  SUBLW  18
0465:  BTFSC  03.0
0466:  GOTO   473
0467:  XORLW  FF
0468:  BTFSS  03.2
0469:  GOTO   46E
046A:  MOVF   2A,W
046B:  SUBLW  64
046C:  BTFSC  03.0
046D:  GOTO   473
....................                            output_high(led_w); 
046E:  MOVLB  01
046F:  BCF    0E.4
0470:  MOVLB  02
0471:  BSF    0E.4
0472:  MOVLB  00
....................                            break; 
0473:  GOTO   49C
....................                      } 
....................                } 
....................             if((!input(inc_butt))) 
0474:  MOVLB  01
0475:  BSF    0C.5
0476:  MOVLB  00
0477:  BTFSC  0C.5
0478:  GOTO   495
....................                { 
....................                delay_ms(10); 
0479:  MOVLW  0A
047A:  MOVLB  01
047B:  MOVWF  29
047C:  MOVLB  00
047D:  CALL   198
....................                if(!input(inc_butt)) 
047E:  MOVLB  01
047F:  BSF    0C.5
0480:  MOVLB  00
0481:  BTFSC  0C.5
0482:  GOTO   495
....................                   { 
....................                      printf(lcd_putc,"\f->Start Sessin"); 
0483:  MOVLW  10
0484:  MOVLB  03
0485:  MOVWF  11
0486:  MOVLW  01
0487:  MOVWF  12
0488:  MOVLB  00
0489:  CALL   3D6
....................                      printf(lcd_putc,"\n  Last Session");  
048A:  MOVLW  18
048B:  MOVLB  03
048C:  MOVWF  11
048D:  MOVLW  01
048E:  MOVWF  12
048F:  MOVLB  00
0490:  CALL   3D6
....................                      rpm=100; 
0491:  CLRF   2B
0492:  MOVLW  64
0493:  MOVWF  2A
....................                      break; 
0494:  GOTO   49C
....................                   } 
....................                } 
....................             delay_ms(20); 
0495:  MOVLW  14
0496:  MOVLB  01
0497:  MOVWF  29
0498:  MOVLB  00
0499:  CALL   198
049A:  INCF   2D,F
049B:  GOTO   433
....................          } 
049C:  MOVLP  00
049D:  GOTO   5A0 (RETURN)
....................    } 
....................  
.................... void print_f() 
....................    { 
....................       switch(rpm) 
*
0800:  MOVF   2A,W
0801:  MOVWF  77
0802:  MOVF   2B,W
0803:  MOVWF  7A
0804:  MOVF   7A,W
0805:  BTFSS  03.2
0806:  GOTO   00B
0807:  MOVLW  64
0808:  SUBWF  77,W
0809:  BTFSC  03.2
080A:  GOTO   0C3
080B:  MOVF   7A,W
080C:  BTFSS  03.2
080D:  GOTO   012
080E:  MOVLW  C8
080F:  SUBWF  77,W
0810:  BTFSC  03.2
0811:  GOTO   0DE
0812:  MOVLW  01
0813:  SUBWF  7A,W
0814:  BTFSS  03.2
0815:  GOTO   01A
0816:  MOVLW  2C
0817:  SUBWF  77,W
0818:  BTFSC  03.2
0819:  GOTO   0F8
081A:  MOVLW  01
081B:  SUBWF  7A,W
081C:  BTFSS  03.2
081D:  GOTO   022
081E:  MOVLW  90
081F:  SUBWF  77,W
0820:  BTFSC  03.2
0821:  GOTO   112
0822:  MOVLW  01
0823:  SUBWF  7A,W
0824:  BTFSS  03.2
0825:  GOTO   02A
0826:  MOVLW  F4
0827:  SUBWF  77,W
0828:  BTFSC  03.2
0829:  GOTO   12C
082A:  MOVLW  03
082B:  SUBWF  7A,W
082C:  BTFSS  03.2
082D:  GOTO   032
082E:  MOVLW  E8
082F:  SUBWF  77,W
0830:  BTFSC  03.2
0831:  GOTO   146
0832:  MOVLW  05
0833:  SUBWF  7A,W
0834:  BTFSS  03.2
0835:  GOTO   03A
0836:  MOVLW  DC
0837:  SUBWF  77,W
0838:  BTFSC  03.2
0839:  GOTO   160
083A:  MOVLW  07
083B:  SUBWF  7A,W
083C:  BTFSS  03.2
083D:  GOTO   042
083E:  MOVLW  D0
083F:  SUBWF  77,W
0840:  BTFSC  03.2
0841:  GOTO   17A
0842:  MOVLW  09
0843:  SUBWF  7A,W
0844:  BTFSS  03.2
0845:  GOTO   04A
0846:  MOVLW  C4
0847:  SUBWF  77,W
0848:  BTFSC  03.2
0849:  GOTO   194
084A:  MOVLW  0B
084B:  SUBWF  7A,W
084C:  BTFSS  03.2
084D:  GOTO   052
084E:  MOVLW  B8
084F:  SUBWF  77,W
0850:  BTFSC  03.2
0851:  GOTO   1AE
0852:  MOVLW  0D
0853:  SUBWF  7A,W
0854:  BTFSS  03.2
0855:  GOTO   05A
0856:  MOVLW  AC
0857:  SUBWF  77,W
0858:  BTFSC  03.2
0859:  GOTO   1C8
085A:  MOVLW  0F
085B:  SUBWF  7A,W
085C:  BTFSS  03.2
085D:  GOTO   062
085E:  MOVLW  A0
085F:  SUBWF  77,W
0860:  BTFSC  03.2
0861:  GOTO   1E3
0862:  MOVLW  11
0863:  SUBWF  7A,W
0864:  BTFSS  03.2
0865:  GOTO   06A
0866:  MOVLW  94
0867:  SUBWF  77,W
0868:  BTFSC  03.2
0869:  GOTO   1FE
086A:  MOVLW  13
086B:  SUBWF  7A,W
086C:  BTFSS  03.2
086D:  GOTO   072
086E:  MOVLW  88
086F:  SUBWF  77,W
0870:  BTFSC  03.2
0871:  GOTO   219
0872:  MOVLW  15
0873:  SUBWF  7A,W
0874:  BTFSS  03.2
0875:  GOTO   07A
0876:  MOVLW  7C
0877:  SUBWF  77,W
0878:  BTFSC  03.2
0879:  GOTO   234
087A:  MOVLW  17
087B:  SUBWF  7A,W
087C:  BTFSS  03.2
087D:  GOTO   082
087E:  MOVLW  70
087F:  SUBWF  77,W
0880:  BTFSC  03.2
0881:  GOTO   24F
0882:  MOVLW  19
0883:  SUBWF  7A,W
0884:  BTFSS  03.2
0885:  GOTO   08A
0886:  MOVLW  64
0887:  SUBWF  77,W
0888:  BTFSC  03.2
0889:  GOTO   26A
088A:  MOVLW  1B
088B:  SUBWF  7A,W
088C:  BTFSS  03.2
088D:  GOTO   092
088E:  MOVLW  58
088F:  SUBWF  77,W
0890:  BTFSC  03.2
0891:  GOTO   28A
0892:  MOVLW  1D
0893:  SUBWF  7A,W
0894:  BTFSS  03.2
0895:  GOTO   09A
0896:  MOVLW  4C
0897:  SUBWF  77,W
0898:  BTFSC  03.2
0899:  GOTO   2AA
089A:  MOVLW  1F
089B:  SUBWF  7A,W
089C:  BTFSS  03.2
089D:  GOTO   0A2
089E:  MOVLW  40
089F:  SUBWF  77,W
08A0:  BTFSC  03.2
08A1:  GOTO   2C5
08A2:  MOVLW  21
08A3:  SUBWF  7A,W
08A4:  BTFSS  03.2
08A5:  GOTO   0AA
08A6:  MOVLW  34
08A7:  SUBWF  77,W
08A8:  BTFSC  03.2
08A9:  GOTO   2E0
08AA:  MOVLW  23
08AB:  SUBWF  7A,W
08AC:  BTFSS  03.2
08AD:  GOTO   0B2
08AE:  MOVLW  28
08AF:  SUBWF  77,W
08B0:  BTFSC  03.2
08B1:  GOTO   2FB
08B2:  MOVLW  25
08B3:  SUBWF  7A,W
08B4:  BTFSS  03.2
08B5:  GOTO   0BA
08B6:  MOVLW  1C
08B7:  SUBWF  77,W
08B8:  BTFSC  03.2
08B9:  GOTO   316
08BA:  MOVLW  27
08BB:  SUBWF  7A,W
08BC:  BTFSS  03.2
08BD:  GOTO   0C2
08BE:  MOVLW  10
08BF:  SUBWF  77,W
08C0:  BTFSC  03.2
08C1:  GOTO   331
08C2:  GOTO   34B
....................          { 
....................             case 100:  
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
08C3:  MOVLW  20
08C4:  MOVLB  03
08C5:  MOVWF  11
08C6:  MOVLW  01
08C7:  MOVWF  12
08C8:  BCF    03.0
08C9:  MOVLW  05
08CA:  MOVLB  00
08CB:  MOVWF  2D
08CC:  MOVLP  00
08CD:  CALL   49E
08CE:  MOVLP  08
08CF:  MOVLW  10
08D0:  MOVWF  04
08D1:  MOVF   2B,W
08D2:  MOVWF  2E
08D3:  MOVF   2A,W
08D4:  MOVWF  2D
08D5:  MOVLP  00
08D6:  CALL   4F2
08D7:  MOVLP  08
....................                   delay=300; 
08D8:  MOVLW  01
08D9:  MOVWF  29
08DA:  MOVLW  2C
08DB:  MOVWF  28
....................                   print=0; 
08DC:  BCF    2C.0
....................                } 
....................                break; 
08DD:  GOTO   34B
....................             case 200: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
08DE:  MOVLW  25
08DF:  MOVLB  03
08E0:  MOVWF  11
08E1:  MOVLW  01
08E2:  MOVWF  12
08E3:  BCF    03.0
08E4:  MOVLW  05
08E5:  MOVLB  00
08E6:  MOVWF  2D
08E7:  MOVLP  00
08E8:  CALL   49E
08E9:  MOVLP  08
08EA:  MOVLW  10
08EB:  MOVWF  04
08EC:  MOVF   2B,W
08ED:  MOVWF  2E
08EE:  MOVF   2A,W
08EF:  MOVWF  2D
08F0:  MOVLP  00
08F1:  CALL   4F2
08F2:  MOVLP  08
....................                   delay=150; 
08F3:  CLRF   29
08F4:  MOVLW  96
08F5:  MOVWF  28
....................                   print=0; 
08F6:  BCF    2C.0
....................                } 
....................                break; 
08F7:  GOTO   34B
....................             case 300: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
08F8:  MOVLW  2A
08F9:  MOVLB  03
08FA:  MOVWF  11
08FB:  MOVLW  01
08FC:  MOVWF  12
08FD:  BCF    03.0
08FE:  MOVLW  05
08FF:  MOVLB  00
0900:  MOVWF  2D
0901:  MOVLP  00
0902:  CALL   49E
0903:  MOVLP  08
0904:  MOVLW  10
0905:  MOVWF  04
0906:  MOVF   2B,W
0907:  MOVWF  2E
0908:  MOVF   2A,W
0909:  MOVWF  2D
090A:  MOVLP  00
090B:  CALL   4F2
090C:  MOVLP  08
....................                   delay=100; 
090D:  CLRF   29
090E:  MOVLW  64
090F:  MOVWF  28
....................                   print=0; 
0910:  BCF    2C.0
....................                } 
....................                break; 
0911:  GOTO   34B
....................             case 400: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0912:  MOVLW  2F
0913:  MOVLB  03
0914:  MOVWF  11
0915:  MOVLW  01
0916:  MOVWF  12
0917:  BCF    03.0
0918:  MOVLW  05
0919:  MOVLB  00
091A:  MOVWF  2D
091B:  MOVLP  00
091C:  CALL   49E
091D:  MOVLP  08
091E:  MOVLW  10
091F:  MOVWF  04
0920:  MOVF   2B,W
0921:  MOVWF  2E
0922:  MOVF   2A,W
0923:  MOVWF  2D
0924:  MOVLP  00
0925:  CALL   4F2
0926:  MOVLP  08
....................                   delay=75; 
0927:  CLRF   29
0928:  MOVLW  4B
0929:  MOVWF  28
....................                   print=0; 
092A:  BCF    2C.0
....................                } 
....................                break; 
092B:  GOTO   34B
....................             case 500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
092C:  MOVLW  34
092D:  MOVLB  03
092E:  MOVWF  11
092F:  MOVLW  01
0930:  MOVWF  12
0931:  BCF    03.0
0932:  MOVLW  05
0933:  MOVLB  00
0934:  MOVWF  2D
0935:  MOVLP  00
0936:  CALL   49E
0937:  MOVLP  08
0938:  MOVLW  10
0939:  MOVWF  04
093A:  MOVF   2B,W
093B:  MOVWF  2E
093C:  MOVF   2A,W
093D:  MOVWF  2D
093E:  MOVLP  00
093F:  CALL   4F2
0940:  MOVLP  08
....................                   delay=60; 
0941:  CLRF   29
0942:  MOVLW  3C
0943:  MOVWF  28
....................                   print=0; 
0944:  BCF    2C.0
....................                } 
....................                break; 
0945:  GOTO   34B
....................             case 1000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0946:  MOVLW  39
0947:  MOVLB  03
0948:  MOVWF  11
0949:  MOVLW  01
094A:  MOVWF  12
094B:  BCF    03.0
094C:  MOVLW  05
094D:  MOVLB  00
094E:  MOVWF  2D
094F:  MOVLP  00
0950:  CALL   49E
0951:  MOVLP  08
0952:  MOVLW  10
0953:  MOVWF  04
0954:  MOVF   2B,W
0955:  MOVWF  2E
0956:  MOVF   2A,W
0957:  MOVWF  2D
0958:  MOVLP  00
0959:  CALL   4F2
095A:  MOVLP  08
....................                   delay=30; 
095B:  CLRF   29
095C:  MOVLW  1E
095D:  MOVWF  28
....................                   print=0; 
095E:  BCF    2C.0
....................                } 
....................                break; 
095F:  GOTO   34B
....................             case 1500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0960:  MOVLW  3E
0961:  MOVLB  03
0962:  MOVWF  11
0963:  MOVLW  01
0964:  MOVWF  12
0965:  BCF    03.0
0966:  MOVLW  05
0967:  MOVLB  00
0968:  MOVWF  2D
0969:  MOVLP  00
096A:  CALL   49E
096B:  MOVLP  08
096C:  MOVLW  10
096D:  MOVWF  04
096E:  MOVF   2B,W
096F:  MOVWF  2E
0970:  MOVF   2A,W
0971:  MOVWF  2D
0972:  MOVLP  00
0973:  CALL   4F2
0974:  MOVLP  08
....................                   delay=20; 
0975:  CLRF   29
0976:  MOVLW  14
0977:  MOVWF  28
....................                   print=0; 
0978:  BCF    2C.0
....................                } 
....................                break; 
0979:  GOTO   34B
....................             case 2000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
097A:  MOVLW  43
097B:  MOVLB  03
097C:  MOVWF  11
097D:  MOVLW  01
097E:  MOVWF  12
097F:  BCF    03.0
0980:  MOVLW  05
0981:  MOVLB  00
0982:  MOVWF  2D
0983:  MOVLP  00
0984:  CALL   49E
0985:  MOVLP  08
0986:  MOVLW  10
0987:  MOVWF  04
0988:  MOVF   2B,W
0989:  MOVWF  2E
098A:  MOVF   2A,W
098B:  MOVWF  2D
098C:  MOVLP  00
098D:  CALL   4F2
098E:  MOVLP  08
....................                   delay=15; 
098F:  CLRF   29
0990:  MOVLW  0F
0991:  MOVWF  28
....................                   print=0; 
0992:  BCF    2C.0
....................                } 
....................                break; 
0993:  GOTO   34B
....................             case 2500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0994:  MOVLW  48
0995:  MOVLB  03
0996:  MOVWF  11
0997:  MOVLW  01
0998:  MOVWF  12
0999:  BCF    03.0
099A:  MOVLW  05
099B:  MOVLB  00
099C:  MOVWF  2D
099D:  MOVLP  00
099E:  CALL   49E
099F:  MOVLP  08
09A0:  MOVLW  10
09A1:  MOVWF  04
09A2:  MOVF   2B,W
09A3:  MOVWF  2E
09A4:  MOVF   2A,W
09A5:  MOVWF  2D
09A6:  MOVLP  00
09A7:  CALL   4F2
09A8:  MOVLP  08
....................                   delay=12; 
09A9:  CLRF   29
09AA:  MOVLW  0C
09AB:  MOVWF  28
....................                   print=0; 
09AC:  BCF    2C.0
....................                } 
....................                break; 
09AD:  GOTO   34B
....................             case 3000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
09AE:  MOVLW  4D
09AF:  MOVLB  03
09B0:  MOVWF  11
09B1:  MOVLW  01
09B2:  MOVWF  12
09B3:  BCF    03.0
09B4:  MOVLW  05
09B5:  MOVLB  00
09B6:  MOVWF  2D
09B7:  MOVLP  00
09B8:  CALL   49E
09B9:  MOVLP  08
09BA:  MOVLW  10
09BB:  MOVWF  04
09BC:  MOVF   2B,W
09BD:  MOVWF  2E
09BE:  MOVF   2A,W
09BF:  MOVWF  2D
09C0:  MOVLP  00
09C1:  CALL   4F2
09C2:  MOVLP  08
....................                   delay=10; 
09C3:  CLRF   29
09C4:  MOVLW  0A
09C5:  MOVWF  28
....................                   print=0; 
09C6:  BCF    2C.0
....................                } 
....................                break; 
09C7:  GOTO   34B
....................             case 3500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
09C8:  MOVLW  52
09C9:  MOVLB  03
09CA:  MOVWF  11
09CB:  MOVLW  01
09CC:  MOVWF  12
09CD:  BCF    03.0
09CE:  MOVLW  05
09CF:  MOVLB  00
09D0:  MOVWF  2D
09D1:  MOVLP  00
09D2:  CALL   49E
09D3:  MOVLP  08
09D4:  MOVLW  10
09D5:  MOVWF  04
09D6:  MOVF   2B,W
09D7:  MOVWF  2E
09D8:  MOVF   2A,W
09D9:  MOVWF  2D
09DA:  MOVLP  00
09DB:  CALL   4F2
09DC:  MOVLP  08
....................                   delay=8570; 
09DD:  MOVLW  21
09DE:  MOVWF  29
09DF:  MOVLW  7A
09E0:  MOVWF  28
....................                   print=0; 
09E1:  BCF    2C.0
....................                } 
....................                break; 
09E2:  GOTO   34B
....................             case 4000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
09E3:  MOVLW  57
09E4:  MOVLB  03
09E5:  MOVWF  11
09E6:  MOVLW  01
09E7:  MOVWF  12
09E8:  BCF    03.0
09E9:  MOVLW  05
09EA:  MOVLB  00
09EB:  MOVWF  2D
09EC:  MOVLP  00
09ED:  CALL   49E
09EE:  MOVLP  08
09EF:  MOVLW  10
09F0:  MOVWF  04
09F1:  MOVF   2B,W
09F2:  MOVWF  2E
09F3:  MOVF   2A,W
09F4:  MOVWF  2D
09F5:  MOVLP  00
09F6:  CALL   4F2
09F7:  MOVLP  08
....................                   delay=7500; 
09F8:  MOVLW  1D
09F9:  MOVWF  29
09FA:  MOVLW  4C
09FB:  MOVWF  28
....................                   print=0; 
09FC:  BCF    2C.0
....................                } 
....................                break; 
09FD:  GOTO   34B
....................             case 4500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
09FE:  MOVLW  5C
09FF:  MOVLB  03
0A00:  MOVWF  11
0A01:  MOVLW  01
0A02:  MOVWF  12
0A03:  BCF    03.0
0A04:  MOVLW  05
0A05:  MOVLB  00
0A06:  MOVWF  2D
0A07:  MOVLP  00
0A08:  CALL   49E
0A09:  MOVLP  08
0A0A:  MOVLW  10
0A0B:  MOVWF  04
0A0C:  MOVF   2B,W
0A0D:  MOVWF  2E
0A0E:  MOVF   2A,W
0A0F:  MOVWF  2D
0A10:  MOVLP  00
0A11:  CALL   4F2
0A12:  MOVLP  08
....................                   delay=6666; 
0A13:  MOVLW  1A
0A14:  MOVWF  29
0A15:  MOVLW  0A
0A16:  MOVWF  28
....................                   print=0; 
0A17:  BCF    2C.0
....................                } 
....................                break; 
0A18:  GOTO   34B
....................             case 5000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0A19:  MOVLW  61
0A1A:  MOVLB  03
0A1B:  MOVWF  11
0A1C:  MOVLW  01
0A1D:  MOVWF  12
0A1E:  BCF    03.0
0A1F:  MOVLW  05
0A20:  MOVLB  00
0A21:  MOVWF  2D
0A22:  MOVLP  00
0A23:  CALL   49E
0A24:  MOVLP  08
0A25:  MOVLW  10
0A26:  MOVWF  04
0A27:  MOVF   2B,W
0A28:  MOVWF  2E
0A29:  MOVF   2A,W
0A2A:  MOVWF  2D
0A2B:  MOVLP  00
0A2C:  CALL   4F2
0A2D:  MOVLP  08
....................                   delay=6000; 
0A2E:  MOVLW  17
0A2F:  MOVWF  29
0A30:  MOVLW  70
0A31:  MOVWF  28
....................                   print=0; 
0A32:  BCF    2C.0
....................                } 
....................                break; 
0A33:  GOTO   34B
....................             case 5500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0A34:  MOVLW  66
0A35:  MOVLB  03
0A36:  MOVWF  11
0A37:  MOVLW  01
0A38:  MOVWF  12
0A39:  BCF    03.0
0A3A:  MOVLW  05
0A3B:  MOVLB  00
0A3C:  MOVWF  2D
0A3D:  MOVLP  00
0A3E:  CALL   49E
0A3F:  MOVLP  08
0A40:  MOVLW  10
0A41:  MOVWF  04
0A42:  MOVF   2B,W
0A43:  MOVWF  2E
0A44:  MOVF   2A,W
0A45:  MOVWF  2D
0A46:  MOVLP  00
0A47:  CALL   4F2
0A48:  MOVLP  08
....................                   delay=5454; 
0A49:  MOVLW  15
0A4A:  MOVWF  29
0A4B:  MOVLW  4E
0A4C:  MOVWF  28
....................                   print=0; 
0A4D:  BCF    2C.0
....................                } 
....................                break; 
0A4E:  GOTO   34B
....................             case 6000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0A4F:  MOVLW  6B
0A50:  MOVLB  03
0A51:  MOVWF  11
0A52:  MOVLW  01
0A53:  MOVWF  12
0A54:  BCF    03.0
0A55:  MOVLW  05
0A56:  MOVLB  00
0A57:  MOVWF  2D
0A58:  MOVLP  00
0A59:  CALL   49E
0A5A:  MOVLP  08
0A5B:  MOVLW  10
0A5C:  MOVWF  04
0A5D:  MOVF   2B,W
0A5E:  MOVWF  2E
0A5F:  MOVF   2A,W
0A60:  MOVWF  2D
0A61:  MOVLP  00
0A62:  CALL   4F2
0A63:  MOVLP  08
....................                   delay=5000; 
0A64:  MOVLW  13
0A65:  MOVWF  29
0A66:  MOVLW  88
0A67:  MOVWF  28
....................                   print=0; 
0A68:  BCF    2C.0
....................                } 
....................                break; 
0A69:  GOTO   34B
....................             case 6500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0A6A:  MOVLW  70
0A6B:  MOVLB  03
0A6C:  MOVWF  11
0A6D:  MOVLW  01
0A6E:  MOVWF  12
0A6F:  BCF    03.0
0A70:  MOVLW  05
0A71:  MOVLB  00
0A72:  MOVWF  2D
0A73:  MOVLP  00
0A74:  CALL   49E
0A75:  MOVLP  08
0A76:  MOVLW  10
0A77:  MOVWF  04
0A78:  MOVF   2B,W
0A79:  MOVWF  2E
0A7A:  MOVF   2A,W
0A7B:  MOVWF  2D
0A7C:  MOVLP  00
0A7D:  CALL   4F2
0A7E:  MOVLP  08
....................                   delay=4615; 
0A7F:  MOVLW  12
0A80:  MOVWF  29
0A81:  MOVLW  07
0A82:  MOVWF  28
....................                   output_low(led_w); 
0A83:  MOVLB  01
0A84:  BCF    0E.4
0A85:  MOVLB  02
0A86:  BCF    0E.4
....................                   print=0; 
0A87:  MOVLB  00
0A88:  BCF    2C.0
....................                } 
....................                break; 
0A89:  GOTO   34B
....................             case 7000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0A8A:  MOVLW  75
0A8B:  MOVLB  03
0A8C:  MOVWF  11
0A8D:  MOVLW  01
0A8E:  MOVWF  12
0A8F:  BCF    03.0
0A90:  MOVLW  05
0A91:  MOVLB  00
0A92:  MOVWF  2D
0A93:  MOVLP  00
0A94:  CALL   49E
0A95:  MOVLP  08
0A96:  MOVLW  10
0A97:  MOVWF  04
0A98:  MOVF   2B,W
0A99:  MOVWF  2E
0A9A:  MOVF   2A,W
0A9B:  MOVWF  2D
0A9C:  MOVLP  00
0A9D:  CALL   4F2
0A9E:  MOVLP  08
....................                   delay=4285; 
0A9F:  MOVLW  10
0AA0:  MOVWF  29
0AA1:  MOVLW  BD
0AA2:  MOVWF  28
....................                   output_high(led_w); 
0AA3:  MOVLB  01
0AA4:  BCF    0E.4
0AA5:  MOVLB  02
0AA6:  BSF    0E.4
....................                   print=0; 
0AA7:  MOVLB  00
0AA8:  BCF    2C.0
....................                } 
....................                break; 
0AA9:  GOTO   34B
....................             case 7500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0AAA:  MOVLW  7A
0AAB:  MOVLB  03
0AAC:  MOVWF  11
0AAD:  MOVLW  01
0AAE:  MOVWF  12
0AAF:  BCF    03.0
0AB0:  MOVLW  05
0AB1:  MOVLB  00
0AB2:  MOVWF  2D
0AB3:  MOVLP  00
0AB4:  CALL   49E
0AB5:  MOVLP  08
0AB6:  MOVLW  10
0AB7:  MOVWF  04
0AB8:  MOVF   2B,W
0AB9:  MOVWF  2E
0ABA:  MOVF   2A,W
0ABB:  MOVWF  2D
0ABC:  MOVLP  00
0ABD:  CALL   4F2
0ABE:  MOVLP  08
....................                   delay=4000; 
0ABF:  MOVLW  0F
0AC0:  MOVWF  29
0AC1:  MOVLW  A0
0AC2:  MOVWF  28
....................                   print=0; 
0AC3:  BCF    2C.0
....................                } 
....................                break; 
0AC4:  GOTO   34B
....................             case 8000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0AC5:  MOVLW  7F
0AC6:  MOVLB  03
0AC7:  MOVWF  11
0AC8:  MOVLW  01
0AC9:  MOVWF  12
0ACA:  BCF    03.0
0ACB:  MOVLW  05
0ACC:  MOVLB  00
0ACD:  MOVWF  2D
0ACE:  MOVLP  00
0ACF:  CALL   49E
0AD0:  MOVLP  08
0AD1:  MOVLW  10
0AD2:  MOVWF  04
0AD3:  MOVF   2B,W
0AD4:  MOVWF  2E
0AD5:  MOVF   2A,W
0AD6:  MOVWF  2D
0AD7:  MOVLP  00
0AD8:  CALL   4F2
0AD9:  MOVLP  08
....................                   delay=3750; 
0ADA:  MOVLW  0E
0ADB:  MOVWF  29
0ADC:  MOVLW  A6
0ADD:  MOVWF  28
....................                   print=0; 
0ADE:  BCF    2C.0
....................                } 
....................                break; 
0ADF:  GOTO   34B
....................             case 8500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0AE0:  MOVLW  84
0AE1:  MOVLB  03
0AE2:  MOVWF  11
0AE3:  MOVLW  01
0AE4:  MOVWF  12
0AE5:  BCF    03.0
0AE6:  MOVLW  05
0AE7:  MOVLB  00
0AE8:  MOVWF  2D
0AE9:  MOVLP  00
0AEA:  CALL   49E
0AEB:  MOVLP  08
0AEC:  MOVLW  10
0AED:  MOVWF  04
0AEE:  MOVF   2B,W
0AEF:  MOVWF  2E
0AF0:  MOVF   2A,W
0AF1:  MOVWF  2D
0AF2:  MOVLP  00
0AF3:  CALL   4F2
0AF4:  MOVLP  08
....................                   delay=3529; 
0AF5:  MOVLW  0D
0AF6:  MOVWF  29
0AF7:  MOVLW  C9
0AF8:  MOVWF  28
....................                   print=0; 
0AF9:  BCF    2C.0
....................                } 
....................                break; 
0AFA:  GOTO   34B
....................            case 9000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0AFB:  MOVLW  89
0AFC:  MOVLB  03
0AFD:  MOVWF  11
0AFE:  MOVLW  01
0AFF:  MOVWF  12
0B00:  BCF    03.0
0B01:  MOVLW  05
0B02:  MOVLB  00
0B03:  MOVWF  2D
0B04:  MOVLP  00
0B05:  CALL   49E
0B06:  MOVLP  08
0B07:  MOVLW  10
0B08:  MOVWF  04
0B09:  MOVF   2B,W
0B0A:  MOVWF  2E
0B0B:  MOVF   2A,W
0B0C:  MOVWF  2D
0B0D:  MOVLP  00
0B0E:  CALL   4F2
0B0F:  MOVLP  08
....................                   delay=3333; 
0B10:  MOVLW  0D
0B11:  MOVWF  29
0B12:  MOVLW  05
0B13:  MOVWF  28
....................                   print=0; 
0B14:  BCF    2C.0
....................                } 
....................                break; 
0B15:  GOTO   34B
....................             case 9500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0B16:  MOVLW  8E
0B17:  MOVLB  03
0B18:  MOVWF  11
0B19:  MOVLW  01
0B1A:  MOVWF  12
0B1B:  BCF    03.0
0B1C:  MOVLW  05
0B1D:  MOVLB  00
0B1E:  MOVWF  2D
0B1F:  MOVLP  00
0B20:  CALL   49E
0B21:  MOVLP  08
0B22:  MOVLW  10
0B23:  MOVWF  04
0B24:  MOVF   2B,W
0B25:  MOVWF  2E
0B26:  MOVF   2A,W
0B27:  MOVWF  2D
0B28:  MOVLP  00
0B29:  CALL   4F2
0B2A:  MOVLP  08
....................                   delay=3157; 
0B2B:  MOVLW  0C
0B2C:  MOVWF  29
0B2D:  MOVLW  55
0B2E:  MOVWF  28
....................                   print=0; 
0B2F:  BCF    2C.0
....................                } 
....................                break; 
0B30:  GOTO   34B
....................             case 10000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0B31:  MOVLW  93
0B32:  MOVLB  03
0B33:  MOVWF  11
0B34:  MOVLW  01
0B35:  MOVWF  12
0B36:  BCF    03.0
0B37:  MOVLW  05
0B38:  MOVLB  00
0B39:  MOVWF  2D
0B3A:  MOVLP  00
0B3B:  CALL   49E
0B3C:  MOVLP  08
0B3D:  MOVLW  10
0B3E:  MOVWF  04
0B3F:  MOVF   2B,W
0B40:  MOVWF  2E
0B41:  MOVF   2A,W
0B42:  MOVWF  2D
0B43:  MOVLP  00
0B44:  CALL   4F2
0B45:  MOVLP  08
....................                   delay=3000; 
0B46:  MOVLW  0B
0B47:  MOVWF  29
0B48:  MOVLW  B8
0B49:  MOVWF  28
....................                   print=0; 
0B4A:  BCF    2C.0
....................                } 
....................                break; 
....................                 
....................          } 
0B4B:  RETURN
....................    } 
....................     
.................... void initialization() 
....................    { 
....................       int i; 
....................       char dev[23] = "\fDEVELOPED BY\nRIKOTECH"; 
*
02D8:  MOVLW  0C
02D9:  MOVWF  2E
02DA:  MOVLW  44
02DB:  MOVWF  2F
02DC:  MOVLW  45
02DD:  MOVWF  30
02DE:  MOVLW  56
02DF:  MOVWF  31
02E0:  MOVLW  45
02E1:  MOVWF  32
02E2:  MOVLW  4C
02E3:  MOVWF  33
02E4:  MOVLW  4F
02E5:  MOVWF  34
02E6:  MOVLW  50
02E7:  MOVWF  35
02E8:  MOVLW  45
02E9:  MOVWF  36
02EA:  MOVLW  44
02EB:  MOVWF  37
02EC:  MOVLW  20
02ED:  MOVWF  38
02EE:  MOVLW  42
02EF:  MOVWF  39
02F0:  MOVLW  59
02F1:  MOVWF  3A
02F2:  MOVLW  0A
02F3:  MOVWF  3B
02F4:  MOVLW  52
02F5:  MOVWF  3C
02F6:  MOVLW  49
02F7:  MOVWF  3D
02F8:  MOVLW  4B
02F9:  MOVWF  3E
02FA:  MOVLW  4F
02FB:  MOVWF  3F
02FC:  MOVLW  54
02FD:  MOVWF  40
02FE:  MOVLW  45
02FF:  MOVWF  41
0300:  MOVLW  43
0301:  MOVWF  42
0302:  MOVLW  48
0303:  MOVWF  43
0304:  CLRF   44
....................       char mail[23] = "\fprorandy88@\ngmail.com"; 
0305:  MOVLW  0C
0306:  MOVWF  45
0307:  MOVLW  70
0308:  MOVWF  46
0309:  MOVLW  72
030A:  MOVWF  47
030B:  MOVLW  6F
030C:  MOVWF  48
030D:  MOVLW  72
030E:  MOVWF  49
030F:  MOVLW  61
0310:  MOVWF  4A
0311:  MOVLW  6E
0312:  MOVWF  4B
0313:  MOVLW  64
0314:  MOVWF  4C
0315:  MOVLW  79
0316:  MOVWF  4D
0317:  MOVLW  38
0318:  MOVWF  4E
0319:  MOVWF  4F
031A:  MOVLW  40
031B:  MOVWF  50
031C:  MOVLW  0A
031D:  MOVWF  51
031E:  MOVLW  67
031F:  MOVWF  52
0320:  MOVLW  6D
0321:  MOVWF  53
0322:  MOVLW  61
0323:  MOVWF  54
0324:  MOVLW  69
0325:  MOVWF  55
0326:  MOVLW  6C
0327:  MOVWF  56
0328:  MOVLW  2E
0329:  MOVWF  57
032A:  MOVLW  63
032B:  MOVWF  58
032C:  MOVLW  6F
032D:  MOVWF  59
032E:  MOVLW  6D
032F:  MOVWF  5A
0330:  CLRF   5B
....................       char logo[27] = "\fDOCTOR MOTORS\nCAR SERVICE"; 
0331:  MOVLW  0C
0332:  MOVWF  5C
0333:  MOVLW  44
0334:  MOVWF  5D
0335:  MOVLW  4F
0336:  MOVWF  5E
0337:  MOVLW  43
0338:  MOVWF  5F
0339:  MOVLW  54
033A:  MOVWF  60
033B:  MOVLW  4F
033C:  MOVWF  61
033D:  MOVLW  52
033E:  MOVWF  62
033F:  MOVLW  20
0340:  MOVWF  63
0341:  MOVLW  4D
0342:  MOVWF  64
0343:  MOVLW  4F
0344:  MOVWF  65
0345:  MOVLW  54
0346:  MOVWF  66
0347:  MOVLW  4F
0348:  MOVWF  67
0349:  MOVLW  52
034A:  MOVWF  68
034B:  MOVLW  53
034C:  MOVWF  69
034D:  MOVLW  0A
034E:  MOVWF  6A
034F:  MOVLW  43
0350:  MOVWF  6B
0351:  MOVLW  41
0352:  MOVWF  6C
0353:  MOVLW  52
0354:  MOVWF  6D
0355:  MOVLW  20
0356:  MOVWF  6E
0357:  MOVLW  53
0358:  MOVWF  6F
0359:  MOVLW  45
035A:  MOVLB  01
035B:  MOVWF  20
035C:  MOVLW  52
035D:  MOVWF  21
035E:  MOVLW  56
035F:  MOVWF  22
0360:  MOVLW  49
0361:  MOVWF  23
0362:  MOVLW  43
0363:  MOVWF  24
0364:  MOVLW  45
0365:  MOVWF  25
0366:  CLRF   26
....................       for(i=0;i<=sizeof(dev)-2;i++) 
0367:  MOVLB  00
0368:  CLRF   2D
0369:  MOVF   2D,W
036A:  SUBLW  15
036B:  BTFSS  03.0
036C:  GOTO   381
....................          { 
....................             lcd_putc(dev[i]); 
036D:  MOVLW  0E
036E:  ADDWF  2D,W
036F:  MOVWF  04
0370:  MOVLW  20
0371:  MOVWF  05
0372:  BTFSC  03.0
0373:  INCF   05,F
0374:  MOVF   00,W
0375:  MOVLB  01
0376:  MOVWF  27
0377:  MOVWF  28
0378:  MOVLB  00
0379:  CALL   298
....................             delay_ms(100); 
037A:  MOVLW  64
037B:  MOVLB  01
037C:  MOVWF  29
037D:  MOVLB  00
037E:  CALL   198
037F:  INCF   2D,F
0380:  GOTO   369
....................          } 
....................       delay_ms(2000); 
0381:  MOVLW  08
0382:  MOVLB  01
0383:  MOVWF  27
0384:  MOVLW  FA
0385:  MOVWF  29
0386:  MOVLB  00
0387:  CALL   198
0388:  MOVLB  01
0389:  DECFSZ 27,F
038A:  GOTO   384
....................       for(i=0;i<=sizeof(mail)-2;i++) 
038B:  MOVLB  00
038C:  CLRF   2D
038D:  MOVF   2D,W
038E:  SUBLW  15
038F:  BTFSS  03.0
0390:  GOTO   3A5
....................          { 
....................             lcd_putc(mail[i]); 
0391:  MOVLW  25
0392:  ADDWF  2D,W
0393:  MOVWF  04
0394:  MOVLW  20
0395:  MOVWF  05
0396:  BTFSC  03.0
0397:  INCF   05,F
0398:  MOVF   00,W
0399:  MOVLB  01
039A:  MOVWF  27
039B:  MOVWF  28
039C:  MOVLB  00
039D:  CALL   298
....................             delay_ms(150); 
039E:  MOVLW  96
039F:  MOVLB  01
03A0:  MOVWF  29
03A1:  MOVLB  00
03A2:  CALL   198
03A3:  INCF   2D,F
03A4:  GOTO   38D
....................          } 
....................       delay_ms(2000); 
03A5:  MOVLW  08
03A6:  MOVLB  01
03A7:  MOVWF  27
03A8:  MOVLW  FA
03A9:  MOVWF  29
03AA:  MOVLB  00
03AB:  CALL   198
03AC:  MOVLB  01
03AD:  DECFSZ 27,F
03AE:  GOTO   3A8
....................       for(i=0;i<=sizeof(logo)-2;i++) 
03AF:  MOVLB  00
03B0:  CLRF   2D
03B1:  MOVF   2D,W
03B2:  SUBLW  19
03B3:  BTFSS  03.0
03B4:  GOTO   3C9
....................          { 
....................             lcd_putc(logo[i]); 
03B5:  MOVLW  3C
03B6:  ADDWF  2D,W
03B7:  MOVWF  04
03B8:  MOVLW  20
03B9:  MOVWF  05
03BA:  BTFSC  03.0
03BB:  INCF   05,F
03BC:  MOVF   00,W
03BD:  MOVLB  01
03BE:  MOVWF  27
03BF:  MOVWF  28
03C0:  MOVLB  00
03C1:  CALL   298
....................             delay_ms(100); 
03C2:  MOVLW  64
03C3:  MOVLB  01
03C4:  MOVWF  29
03C5:  MOVLB  00
03C6:  CALL   198
03C7:  INCF   2D,F
03C8:  GOTO   3B1
....................          } 
....................       delay_ms(2000); 
03C9:  MOVLW  08
03CA:  MOVLB  01
03CB:  MOVWF  27
03CC:  MOVLW  FA
03CD:  MOVWF  29
03CE:  MOVLB  00
03CF:  CALL   198
03D0:  MOVLB  01
03D1:  DECFSZ 27,F
03D2:  GOTO   3CC
03D3:  MOVLP  00
03D4:  MOVLB  00
03D5:  GOTO   59A (RETURN)
....................    } 
....................  

Configuration Fuses:
   Word  1: 3F84   INTRC_IO NOWDT PUT NOMCLR NOPROTECT BROWNOUT NOCLKOUT IESO FCMEN
   Word  2: 1FFF   NOWRT STVREN BORV19 NOLPBOR NODEBUG NOLVP
