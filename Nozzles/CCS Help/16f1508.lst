CCS PCM C Compiler, Version 4.140, 5967               22-дек-13 16:13

               Filename:   D:\Projects\Nozzles\CCS Help\16f1508.lst

               ROM used:   2388 words (58%)
                           Largest free fragment is 1204
               RAM used:   15 (6%) at main() level
                           175 (68%) worst case
               Stack:     6 worst case (5 in main + 1 for interrupts)

*
0000:  MOVLP  00
0001:  GOTO   53A
0002:  NOP
*
0004:  CLRF   03
0005:  CLRF   0A
0006:  MOVLB  00
0007:  MOVF   77,W
0008:  MOVWF  20
0009:  MOVF   78,W
000A:  MOVWF  21
000B:  MOVF   79,W
000C:  MOVWF  22
000D:  MOVF   7A,W
000E:  MOVWF  23
000F:  BTFSS  0B.3
0010:  GOTO   013
0011:  BTFSC  0B.0
0012:  GOTO   01C
0013:  MOVF   20,W
0014:  MOVWF  77
0015:  MOVF   21,W
0016:  MOVWF  78
0017:  MOVF   22,W
0018:  MOVWF  79
0019:  MOVF   23,W
001A:  MOVWF  7A
001B:  RETFIE
001C:  MOVLP  00
001D:  GOTO   023
.................... #include <16f1508.h> 
.................... //////// Standard Header file for the PIC16F1508 device //////////////// 
.................... #device PIC16F1508 
.................... #list 
....................  
.................... #fuses INTRC_IO,NOMCLR,NOWDT 
.................... #use delay(clock=16M) 
*
0178:  MOVLW  20
0179:  MOVWF  05
017A:  MOVLW  55
017B:  MOVWF  04
017C:  MOVF   00,W
017D:  BTFSC  03.2
017E:  GOTO   18D
017F:  MOVLW  05
0180:  MOVWF  78
0181:  CLRF   77
0182:  DECFSZ 77,F
0183:  GOTO   182
0184:  DECFSZ 78,F
0185:  GOTO   181
0186:  MOVLW  2E
0187:  MOVWF  77
0188:  DECFSZ 77,F
0189:  GOTO   188
018A:  GOTO   18B
018B:  DECFSZ 00,F
018C:  GOTO   17F
018D:  RETURN
*
052A:  MOVLW  03
052B:  SUBWF  2A,F
052C:  BTFSS  03.0
052D:  GOTO   539
052E:  MOVLW  20
052F:  MOVWF  05
0530:  MOVLW  0A
0531:  MOVWF  04
0532:  MOVF   00,W
0533:  BTFSC  03.2
0534:  GOTO   539
0535:  GOTO   537
0536:  NOP
0537:  DECFSZ 00,F
0538:  GOTO   536
0539:  RETURN
....................  
.................... #define inc_butt pin_a5 
.................... #define dec_butt pin_a4 
.................... #define confirm_butt pin_c5 
.................... #define led_r pin_c3 
.................... #define led_w pin_c4 
.................... #define relay_SB pin_c6 
.................... #define T1 pin_c7 
.................... #define T2 pin_b7 
.................... #include <flex_lcd.c> 
.................... // flex_lcd.c  
....................  
.................... // These pins are for the Microchip PicDem2-Plus board,  
.................... // which is what I used to test the driver.  Change these  
.................... // pins to fit your own board.  
....................  
.................... #define LCD_DB4   PIN_C2  
.................... #define LCD_DB5   PIN_B4  
.................... #define LCD_DB6   PIN_B5  
.................... #define LCD_DB7   PIN_B6  
....................  
.................... #define LCD_E     PIN_C1  
.................... #define LCD_RS    PIN_A2  
.................... #define LCD_RW    PIN_C0  
....................  
.................... // If you only want a 6-pin interface to your LCD, then  
.................... // connect the R/W pin on the LCD to ground, and comment  
.................... // out the following line.  
....................  
.................... #define USE_LCD_RW   1       
....................  
.................... //========================================  
....................  
.................... #define lcd_type 2        // 0=5x7, 1=5x10, 2=2 lines  
.................... #define lcd_line_two 0x40 // LCD RAM address for the 2nd line  
....................  
....................  
.................... int8 const LCD_INIT_STRING[4] =  
.................... {  
....................  0x20 | (lcd_type << 2), // Func set: 4-bit, 2 lines, 5x8 dots  
....................  0xc,                    // Display on  
....................  1,                      // Clear display  
....................  6                       // Increment cursor  
....................  };  
....................                                
....................  
.................... //-------------------------------------  
.................... void lcd_send_nibble(int8 nibble)  
.................... {  
.................... // Note:  !! converts an integer expression  
.................... // to a boolean (1 or 0).  
....................  output_bit(LCD_DB4, !!(nibble & 1));  
*
018E:  MOVLB  01
018F:  BTFSC  2C.0
0190:  GOTO   195
0191:  MOVLB  02
0192:  BCF    0E.2
0193:  GOTO   197
0194:  MOVLB  01
0195:  MOVLB  02
0196:  BSF    0E.2
0197:  MOVLB  01
0198:  BCF    0E.2
....................  output_bit(LCD_DB5, !!(nibble & 2));   
0199:  BTFSC  2C.1
019A:  GOTO   19F
019B:  MOVLB  02
019C:  BCF    0D.4
019D:  GOTO   1A1
019E:  MOVLB  01
019F:  MOVLB  02
01A0:  BSF    0D.4
01A1:  MOVLB  01
01A2:  BCF    0D.4
....................  output_bit(LCD_DB6, !!(nibble & 4));     
01A3:  BTFSC  2C.2
01A4:  GOTO   1A9
01A5:  MOVLB  02
01A6:  BCF    0D.5
01A7:  GOTO   1AB
01A8:  MOVLB  01
01A9:  MOVLB  02
01AA:  BSF    0D.5
01AB:  MOVLB  01
01AC:  BCF    0D.5
....................  output_bit(LCD_DB7, !!(nibble & 8));     
01AD:  BTFSC  2C.3
01AE:  GOTO   1B3
01AF:  MOVLB  02
01B0:  BCF    0D.6
01B1:  GOTO   1B5
01B2:  MOVLB  01
01B3:  MOVLB  02
01B4:  BSF    0D.6
01B5:  MOVLB  01
01B6:  BCF    0D.6
....................  
....................  delay_cycles(1);  
01B7:  NOP
....................  output_high(LCD_E);  
01B8:  BCF    0E.1
01B9:  MOVLB  02
01BA:  BSF    0E.1
....................  delay_us(2);  
01BB:  MOVLW  02
01BC:  MOVWF  77
01BD:  DECFSZ 77,F
01BE:  GOTO   1BD
01BF:  NOP
....................  output_low(LCD_E);  
01C0:  MOVLB  01
01C1:  BCF    0E.1
01C2:  MOVLB  02
01C3:  BCF    0E.1
.................... }  
01C4:  MOVLB  00
01C5:  RETURN
....................  
.................... //-----------------------------------  
.................... // This sub-routine is only called by lcd_read_byte().  
.................... // It's not a stand-alone routine.  For example, the  
.................... // R/W signal is set high by lcd_read_byte() before  
.................... // this routine is called.       
....................  
.................... #ifdef USE_LCD_RW  
.................... int8 lcd_read_nibble(void)  
.................... {  
.................... int8 retval;  
.................... // Create bit variables so that we can easily set  
.................... // individual bits in the retval variable.  
.................... #bit retval_0 = retval.0  
.................... #bit retval_1 = retval.1  
.................... #bit retval_2 = retval.2  
.................... #bit retval_3 = retval.3  
....................  
.................... retval = 0;  
01C6:  MOVLB  01
01C7:  CLRF   2D
....................      
.................... output_high(LCD_E);  
01C8:  BCF    0E.1
01C9:  MOVLB  02
01CA:  BSF    0E.1
.................... delay_cycles(1);  
01CB:  NOP
....................  
.................... retval_0 = input(LCD_DB4);  
01CC:  MOVLB  01
01CD:  BSF    0E.2
01CE:  BCF    2D.0
01CF:  MOVLB  00
01D0:  BTFSS  0E.2
01D1:  GOTO   1D5
01D2:  MOVLB  01
01D3:  BSF    2D.0
01D4:  MOVLB  00
.................... retval_1 = input(LCD_DB5);  
01D5:  MOVLB  01
01D6:  BSF    0D.4
01D7:  BCF    2D.1
01D8:  MOVLB  00
01D9:  BTFSS  0D.4
01DA:  GOTO   1DE
01DB:  MOVLB  01
01DC:  BSF    2D.1
01DD:  MOVLB  00
.................... retval_2 = input(LCD_DB6);  
01DE:  MOVLB  01
01DF:  BSF    0D.5
01E0:  BCF    2D.2
01E1:  MOVLB  00
01E2:  BTFSS  0D.5
01E3:  GOTO   1E7
01E4:  MOVLB  01
01E5:  BSF    2D.2
01E6:  MOVLB  00
.................... retval_3 = input(LCD_DB7);  
01E7:  MOVLB  01
01E8:  BSF    0D.6
01E9:  BCF    2D.3
01EA:  MOVLB  00
01EB:  BTFSS  0D.6
01EC:  GOTO   1F0
01ED:  MOVLB  01
01EE:  BSF    2D.3
01EF:  MOVLB  00
....................    
.................... output_low(LCD_E);  
01F0:  MOVLB  01
01F1:  BCF    0E.1
01F2:  MOVLB  02
01F3:  BCF    0E.1
....................      
.................... return(retval);     
01F4:  MOVLB  01
01F5:  MOVF   2D,W
01F6:  MOVWF  78
.................... }     
01F7:  MOVLB  00
01F8:  RETURN
.................... #endif  
....................  
.................... //---------------------------------------  
.................... // Read a byte from the LCD and return it.  
....................  
.................... #ifdef USE_LCD_RW  
.................... int8 lcd_read_byte(void)  
.................... {  
.................... int8 low;  
.................... int8 high;  
....................  
.................... output_high(LCD_RW);  
*
01FD:  MOVLB  01
01FE:  BCF    0E.0
01FF:  MOVLB  02
0200:  BSF    0E.0
.................... delay_cycles(1);  
0201:  NOP
....................  
.................... high = lcd_read_nibble();  
0202:  MOVLB  00
0203:  CALL   1C6
0204:  MOVF   78,W
0205:  MOVLB  01
0206:  MOVWF  2C
....................  
.................... low = lcd_read_nibble();  
0207:  MOVLB  00
0208:  CALL   1C6
0209:  MOVF   78,W
020A:  MOVLB  01
020B:  MOVWF  2B
....................  
.................... return( (high<<4) | low);  
020C:  SWAPF  2C,W
020D:  MOVWF  77
020E:  MOVLW  F0
020F:  ANDWF  77,F
0210:  MOVF   77,W
0211:  IORWF  2B,W
0212:  MOVWF  78
.................... }  
.................... #endif  
....................  
.................... //----------------------------------------  
.................... // Send a byte to the LCD.  
.................... void lcd_send_byte(int8 address, int8 n)  
.................... {  
.................... output_low(LCD_RS);  
*
01F9:  MOVLB  01
01FA:  BCF    0C.2
01FB:  MOVLB  02
01FC:  BCF    0C.2
....................  
.................... #ifdef USE_LCD_RW  
.................... while(bit_test(lcd_read_byte(),7)) ;  
*
0213:  MOVF   78,W
0214:  MOVWF  2B
0215:  BTFSC  2B.7
0216:  GOTO   1FE
.................... #else  
.................... delay_us(60);   
.................... #endif  
....................  
.................... if(address)  
0217:  MOVF   29,F
0218:  BTFSC  03.2
0219:  GOTO   21F
....................    output_high(LCD_RS);  
021A:  BCF    0C.2
021B:  MOVLB  02
021C:  BSF    0C.2
.................... else  
021D:  GOTO   222
021E:  MOVLB  01
....................    output_low(LCD_RS);  
021F:  BCF    0C.2
0220:  MOVLB  02
0221:  BCF    0C.2
....................        
....................  delay_cycles(1);  
0222:  NOP
....................  
.................... #ifdef USE_LCD_RW  
.................... output_low(LCD_RW);  
0223:  MOVLB  01
0224:  BCF    0E.0
0225:  MOVLB  02
0226:  BCF    0E.0
.................... delay_cycles(1);  
0227:  NOP
.................... #endif  
....................  
.................... output_low(LCD_E);  
0228:  MOVLB  01
0229:  BCF    0E.1
022A:  MOVLB  02
022B:  BCF    0E.1
....................  
.................... lcd_send_nibble(n >> 4);  
022C:  MOVLB  01
022D:  SWAPF  2A,W
022E:  MOVWF  2B
022F:  MOVLW  0F
0230:  ANDWF  2B,F
0231:  MOVF   2B,W
0232:  MOVWF  2C
0233:  MOVLB  00
0234:  CALL   18E
.................... lcd_send_nibble(n & 0xf);  
0235:  MOVLB  01
0236:  MOVF   2A,W
0237:  ANDLW  0F
0238:  MOVWF  2B
0239:  MOVWF  2C
023A:  MOVLB  00
023B:  CALL   18E
.................... }  
023C:  RETURN
....................  
.................... //----------------------------  
.................... void lcd_init(void)  
.................... {  
.................... int8 i;  
....................  
.................... output_low(LCD_RS);  
023D:  MOVLB  01
023E:  BCF    0C.2
023F:  MOVLB  02
0240:  BCF    0C.2
....................  
.................... #ifdef USE_LCD_RW  
.................... output_low(LCD_RW);  
0241:  MOVLB  01
0242:  BCF    0E.0
0243:  MOVLB  02
0244:  BCF    0E.0
.................... #endif  
....................  
.................... output_low(LCD_E);  
0245:  MOVLB  01
0246:  BCF    0E.1
0247:  MOVLB  02
0248:  BCF    0E.1
....................  
.................... delay_ms(15);  
0249:  MOVLW  0F
024A:  MOVLB  01
024B:  MOVWF  25
024C:  MOVLB  00
024D:  CALL   178
....................  
.................... for(i=0 ;i < 3; i++)  
024E:  CLRF   29
024F:  MOVF   29,W
0250:  SUBLW  02
0251:  BTFSS  03.0
0252:  GOTO   25F
....................    {  
....................     lcd_send_nibble(0x03);  
0253:  MOVLW  03
0254:  MOVLB  01
0255:  MOVWF  2C
0256:  MOVLB  00
0257:  CALL   18E
....................     delay_ms(5);  
0258:  MOVLW  05
0259:  MOVLB  01
025A:  MOVWF  25
025B:  MOVLB  00
025C:  CALL   178
....................    }  
025D:  INCF   29,F
025E:  GOTO   24F
....................  
.................... lcd_send_nibble(0x02);  
025F:  MOVLW  02
0260:  MOVLB  01
0261:  MOVWF  2C
0262:  MOVLB  00
0263:  CALL   18E
....................  
.................... for(i=0; i < sizeof(LCD_INIT_STRING); i++)  
0264:  CLRF   29
0265:  MOVF   29,W
0266:  SUBLW  03
0267:  BTFSS  03.0
0268:  GOTO   276
....................    {  
....................     lcd_send_byte(0, LCD_INIT_STRING[i]);  
0269:  MOVF   29,W
026A:  CALL   01E
026B:  MOVWF  2A
026C:  MOVLB  01
026D:  CLRF   29
026E:  MOVLB  00
026F:  MOVF   2A,W
0270:  MOVLB  01
0271:  MOVWF  2A
0272:  MOVLB  00
0273:  CALL   1F9
....................      
....................     // If the R/W signal is not used, then  
....................     // the busy bit can't be polled.  One of  
....................     // the init commands takes longer than  
....................     // the hard-coded delay of 60 us, so in  
....................     // that case, lets just do a 5 ms delay  
....................     // after all four of them.  
....................     #ifndef USE_LCD_RW  
....................     delay_ms(5);  
....................     #endif  
....................    }  
0274:  INCF   29,F
0275:  GOTO   265
....................  
.................... }  
0276:  MOVLP  00
0277:  GOTO   563 (RETURN)
....................  
.................... //----------------------------  
....................  
.................... void lcd_gotoxy(int8 x, int8 y)  
.................... {  
.................... int8 address;  
....................  
.................... if(y != 1)  
*
0296:  DECFSZ 26,W
0297:  GOTO   299
0298:  GOTO   29C
....................    address = lcd_line_two;  
0299:  MOVLW  40
029A:  MOVWF  27
.................... else  
029B:  GOTO   29D
....................    address=0;  
029C:  CLRF   27
....................  
.................... address += x-1;  
029D:  MOVLW  01
029E:  SUBWF  25,W
029F:  ADDWF  27,F
.................... lcd_send_byte(0, 0x80 | address);  
02A0:  MOVF   27,W
02A1:  IORLW  80
02A2:  MOVWF  28
02A3:  CLRF   29
02A4:  MOVF   28,W
02A5:  MOVWF  2A
02A6:  MOVLB  00
02A7:  CALL   1F9
.................... }  
....................  
.................... //-----------------------------  
.................... void lcd_putc(char c)  
.................... {  
....................  switch(c)  
....................    {  
*
0278:  MOVLB  01
0279:  MOVF   24,W
027A:  XORLW  0C
027B:  MOVLB  00
027C:  BTFSC  03.2
027D:  GOTO   285
027E:  XORLW  06
027F:  BTFSC  03.2
0280:  GOTO   291
0281:  XORLW  02
0282:  BTFSC  03.2
0283:  GOTO   2A9
0284:  GOTO   2B0
....................     case '\f':  
....................       lcd_send_byte(0,1);  
0285:  MOVLB  01
0286:  CLRF   29
0287:  MOVLW  01
0288:  MOVWF  2A
0289:  MOVLB  00
028A:  CALL   1F9
....................       delay_ms(2);  
028B:  MOVLW  02
028C:  MOVLB  01
028D:  MOVWF  25
028E:  MOVLB  00
028F:  CALL   178
....................       break;  
0290:  GOTO   2B7
....................      
....................     case '\n':  
....................        lcd_gotoxy(1,2);  
0291:  MOVLW  01
0292:  MOVLB  01
0293:  MOVWF  25
0294:  MOVLW  02
0295:  MOVWF  26
....................        break;  
*
02A8:  GOTO   2B7
....................      
....................     case '\b':  
....................        lcd_send_byte(0,0x10);  
02A9:  MOVLB  01
02AA:  CLRF   29
02AB:  MOVLW  10
02AC:  MOVWF  2A
02AD:  MOVLB  00
02AE:  CALL   1F9
....................        break;  
02AF:  GOTO   2B7
....................      
....................     default:  
....................        lcd_send_byte(1,c);  
02B0:  MOVLW  01
02B1:  MOVLB  01
02B2:  MOVWF  29
02B3:  MOVF   24,W
02B4:  MOVWF  2A
02B5:  MOVLB  00
02B6:  CALL   1F9
....................        break;  
....................    }  
.................... }  
02B7:  RETURN
....................  
.................... //------------------------------  
.................... #ifdef USE_LCD_RW  
.................... char lcd_getc(int8 x, int8 y)  
.................... {  
.................... char value;  
....................  
.................... lcd_gotoxy(x,y);  
....................  
.................... // Wait until busy flag is low.  
.................... while(bit_test(lcd_read_byte(),7));   
....................  
.................... output_high(LCD_RS);  
.................... value = lcd_read_byte();  
.................... output_low(lcd_RS);  
....................  
.................... return(value);  
.................... }  
.................... #endif 
....................  
.................... unsigned int16 delay=300; 
.................... unsigned int16 rpm=100; 
.................... int1 print=1; 
....................  
.................... #INT_RA 
.................... void isr()                             
.................... { 
....................    if(!input(inc_butt)&&rpm<10000) 
*
0023:  MOVLB  01
0024:  BSF    0C.5
0025:  MOVLB  00
0026:  BTFSC  0C.5
0027:  GOTO   046
0028:  MOVF   27,W
0029:  SUBLW  27
002A:  BTFSS  03.0
002B:  GOTO   046
002C:  BTFSS  03.2
002D:  GOTO   032
002E:  MOVF   26,W
002F:  SUBLW  0F
0030:  BTFSS  03.0
0031:  GOTO   046
....................    { 
....................       if(rpm<500) 
0032:  MOVF   27,W
0033:  SUBLW  01
0034:  BTFSS  03.0
0035:  GOTO   041
0036:  BTFSS  03.2
0037:  GOTO   03C
0038:  MOVF   26,W
0039:  SUBLW  F3
003A:  BTFSS  03.0
003B:  GOTO   041
....................          rpm+=100; 
003C:  MOVLW  64
003D:  ADDWF  26,F
003E:  MOVLW  00
003F:  ADDWFC 27,F
....................       else 
0040:  GOTO   045
....................          rpm+=500; 
0041:  MOVLW  F4
0042:  ADDWF  26,F
0043:  MOVLW  01
0044:  ADDWFC 27,F
....................    } 
....................    else if(!input(dec_butt)&&rpm>100) 
0045:  GOTO   066
0046:  MOVLB  01
0047:  BSF    0C.4
0048:  MOVLB  00
0049:  BTFSC  0C.4
004A:  GOTO   066
004B:  MOVF   27,F
004C:  BTFSS  03.2
004D:  GOTO   052
004E:  MOVF   26,W
004F:  SUBLW  64
0050:  BTFSC  03.0
0051:  GOTO   066
....................    { 
....................       if(rpm>500) 
0052:  MOVF   27,W
0053:  SUBLW  00
0054:  BTFSC  03.0
0055:  GOTO   062
0056:  XORLW  FF
0057:  BTFSS  03.2
0058:  GOTO   05D
0059:  MOVF   26,W
005A:  SUBLW  F4
005B:  BTFSC  03.0
005C:  GOTO   062
....................          rpm-=500; 
005D:  MOVLW  F4
005E:  SUBWF  26,F
005F:  MOVLW  01
0060:  SUBWFC 27,F
....................       else 
0061:  GOTO   066
....................          rpm-=100; 
0062:  MOVLW  64
0063:  SUBWF  26,F
0064:  MOVLW  00
0065:  SUBWFC 27,F
....................    } 
....................    print=1; 
0066:  BSF    28.0
....................    write_program_eeprom(0xfff,rpm); 
0067:  MOVLW  FF
0068:  MOVLB  03
0069:  MOVWF  11
006A:  MOVF   11,W
006B:  MOVWF  7A
006C:  MOVLW  0F
006D:  MOVWF  12
006E:  MOVLB  00
006F:  MOVF   26,W
0070:  MOVWF  78
0071:  MOVF   27,W
0072:  MOVWF  79
....................    clear_interrupt(INT_RA5_H2L|INT_RA4_H2L); 
*
00C9:  MOVLW  CF
00CA:  MOVLB  07
00CB:  ANDWF  13,F
....................    } 
....................  
00CC:  BCF    0B.0
00CD:  MOVLP  00
00CE:  MOVLB  00
00CF:  GOTO   013
.................... void print_f(); 
.................... void initialization(); 
.................... void session(); 
....................  
.................... void main() 
.................... { 
*
053A:  CLRF   05
053B:  CLRF   04
053C:  MOVLW  7A
053D:  MOVLB  01
053E:  MOVWF  19
053F:  MOVLW  01
0540:  MOVLB  00
0541:  MOVWF  25
0542:  MOVLW  2C
0543:  MOVWF  24
0544:  CLRF   27
0545:  MOVLW  64
0546:  MOVWF  26
0547:  BSF    28.0
0548:  MOVLB  03
0549:  CLRF   0C
054A:  CLRF   0D
054B:  CLRF   0E
054C:  MOVLB  02
054D:  CLRF   12
054E:  CLRF   11
054F:  CLRF   14
0550:  CLRF   13
.................... output_high(led_w); 
0551:  MOVLB  01
0552:  BCF    0E.4
0553:  MOVLB  02
0554:  BSF    0E.4
.................... DISABLE_INTERRUPTS(INT_RA5_H2L|INT_RA4_H2L); 
0555:  MOVLW  CF
0556:  MOVLB  07
0557:  ANDWF  12,F
.................... delay_ms(1500);  //wait for lcd booting 
0558:  MOVLW  06
0559:  MOVLB  00
055A:  MOVWF  29
055B:  MOVLW  FA
055C:  MOVLB  01
055D:  MOVWF  25
055E:  MOVLB  00
055F:  CALL   178
0560:  DECFSZ 29,F
0561:  GOTO   55B
.................... lcd_init(); 
0562:  GOTO   23D
.................... output_low(T1); 
0563:  MOVLB  01
0564:  BCF    0E.7
0565:  MOVLB  02
0566:  BCF    0E.7
.................... output_low(T2); 
0567:  MOVLB  01
0568:  BCF    0D.7
0569:  MOVLB  02
056A:  BCF    0D.7
.................... initialization(); 
056B:  MOVLB  00
056C:  GOTO   2B8
.................... output_low(led_w); 
056D:  MOVLB  01
056E:  BCF    0E.4
056F:  MOVLB  02
0570:  BCF    0E.4
.................... session(); 
0571:  MOVLB  00
0572:  GOTO   3FF
.................... output_high(relay_SB); 
0573:  MOVLB  01
0574:  BCF    0E.6
0575:  MOVLB  02
0576:  BSF    0E.6
.................... ENABLE_INTERRUPTS(INT_RA5_H2L|INT_RA4_H2L); 
0577:  BSF    0B.3
0578:  MOVLW  30
0579:  MOVLB  07
057A:  IORWF  12,F
057B:  MOVLW  CF
057C:  ANDWF  11,F
.................... ENABLE_INTERRUPTS(GLOBAL); 
057D:  MOVLW  C0
057E:  IORWF  0B,F
.................... clear_interrupt(INT_RA5_H2L|INT_RA4_H2L); 
057F:  MOVLW  CF
0580:  ANDWF  13,F
.................... output_high(led_r); 
0581:  MOVLB  01
0582:  BCF    0E.3
0583:  MOVLB  02
0584:  BSF    0E.3
....................    while (true) 
....................    { 
....................       while(rpm<=3000) 
....................          { 
0585:  MOVLB  00
0586:  MOVF   27,W
0587:  SUBLW  0B
0588:  BTFSS  03.0
0589:  GOTO   5CA
058A:  BTFSS  03.2
058B:  GOTO   590
058C:  MOVF   26,W
058D:  SUBLW  B8
058E:  BTFSS  03.0
058F:  GOTO   5CA
....................             if(print==1) 
0590:  BTFSS  28.0
0591:  GOTO   595
....................                print_f(); 
0592:  MOVLP  08
0593:  CALL   000
0594:  MOVLP  00
....................             output_low(T2); 
0595:  MOVLB  01
0596:  BCF    0D.7
0597:  MOVLB  02
0598:  BCF    0D.7
....................             output_high(T1); 
0599:  MOVLB  01
059A:  BCF    0E.7
059B:  MOVLB  02
059C:  BSF    0E.7
....................             delay_ms(delay); 
059D:  MOVLB  00
059E:  MOVF   25,W
059F:  MOVWF  29
05A0:  INCF   29,F
05A1:  DECF   29,F
05A2:  BTFSC  03.2
05A3:  GOTO   5AA
05A4:  MOVLW  FF
05A5:  MOVLB  01
05A6:  MOVWF  25
05A7:  MOVLB  00
05A8:  CALL   178
05A9:  GOTO   5A1
05AA:  MOVF   24,W
05AB:  MOVLB  01
05AC:  MOVWF  25
05AD:  MOVLB  00
05AE:  CALL   178
....................             output_low(T1);  
05AF:  MOVLB  01
05B0:  BCF    0E.7
05B1:  MOVLB  02
05B2:  BCF    0E.7
....................             output_high(T2); 
05B3:  MOVLB  01
05B4:  BCF    0D.7
05B5:  MOVLB  02
05B6:  BSF    0D.7
....................             delay_ms(delay);  
05B7:  MOVLB  00
05B8:  MOVF   25,W
05B9:  MOVWF  29
05BA:  INCF   29,F
05BB:  DECF   29,F
05BC:  BTFSC  03.2
05BD:  GOTO   5C4
05BE:  MOVLW  FF
05BF:  MOVLB  01
05C0:  MOVWF  25
05C1:  MOVLB  00
05C2:  CALL   178
05C3:  GOTO   5BB
05C4:  MOVF   24,W
05C5:  MOVLB  01
05C6:  MOVWF  25
05C7:  MOVLB  00
05C8:  CALL   178
....................          } 
05C9:  GOTO   586
....................       while(rpm>3000) 
....................          { 
05CA:  MOVF   27,W
05CB:  SUBLW  0A
05CC:  BTFSC  03.0
05CD:  GOTO   607
05CE:  XORLW  FF
05CF:  BTFSS  03.2
05D0:  GOTO   5D5
05D1:  MOVF   26,W
05D2:  SUBLW  B8
05D3:  BTFSC  03.0
05D4:  GOTO   607
....................             if(print==1) 
05D5:  BTFSS  28.0
05D6:  GOTO   5DA
....................                print_f(); 
05D7:  MOVLP  08
05D8:  CALL   000
05D9:  MOVLP  00
....................             output_low(T2); 
05DA:  MOVLB  01
05DB:  BCF    0D.7
05DC:  MOVLB  02
05DD:  BCF    0D.7
....................             output_high(T1); 
05DE:  MOVLB  01
05DF:  BCF    0E.7
05E0:  MOVLB  02
05E1:  BSF    0E.7
....................             delay_us(delay); 
05E2:  MOVLB  00
05E3:  MOVF   25,W
05E4:  MOVWF  29
05E5:  INCF   29,F
05E6:  DECF   29,F
05E7:  BTFSC  03.2
05E8:  GOTO   5ED
05E9:  MOVLW  FF
05EA:  MOVWF  2A
05EB:  CALL   52A
05EC:  GOTO   5E6
05ED:  MOVF   24,W
05EE:  MOVWF  2A
05EF:  CALL   52A
....................             output_low(T1);  
05F0:  MOVLB  01
05F1:  BCF    0E.7
05F2:  MOVLB  02
05F3:  BCF    0E.7
....................             output_high(T2); 
05F4:  MOVLB  01
05F5:  BCF    0D.7
05F6:  MOVLB  02
05F7:  BSF    0D.7
....................             delay_us(delay); 
05F8:  MOVLB  00
05F9:  MOVF   25,W
05FA:  MOVWF  29
05FB:  INCF   29,F
05FC:  DECF   29,F
05FD:  BTFSC  03.2
05FE:  GOTO   603
05FF:  MOVLW  FF
0600:  MOVWF  2A
0601:  CALL   52A
0602:  GOTO   5FC
0603:  MOVF   24,W
0604:  MOVWF  2A
0605:  CALL   52A
....................          } 
0606:  GOTO   5CA
....................    } 
0607:  GOTO   586
.................... } 
.................... void session() 
....................    { 
0608:  SLEEP
....................       int c; 
....................       printf(lcd_putc,"\f->Start Sessin"); 
*
03FF:  MOVLW  D0
0400:  MOVLB  03
0401:  MOVWF  11
0402:  MOVLW  00
0403:  MOVWF  12
0404:  MOVLB  00
0405:  CALL   3B6
....................       printf(lcd_putc,"\n  Last Session");      
0406:  MOVLW  D8
0407:  MOVLB  03
0408:  MOVWF  11
0409:  MOVLW  00
040A:  MOVWF  12
040B:  MOVLB  00
040C:  CALL   3B6
....................       for(c=0;c<255;c++) 
040D:  CLRF   29
040E:  INCFSZ 29,W
040F:  GOTO   411
0410:  GOTO   477
....................          { 
....................             if((!input(dec_butt))) 
0411:  MOVLB  01
0412:  BSF    0C.4
0413:  MOVLB  00
0414:  BTFSC  0C.4
0415:  GOTO   44F
....................                { 
....................                   delay_ms(10); 
0416:  MOVLW  0A
0417:  MOVLB  01
0418:  MOVWF  25
0419:  MOVLB  00
041A:  CALL   178
....................                   if(!input(dec_butt)) 
041B:  MOVLB  01
041C:  BSF    0C.4
041D:  MOVLB  00
041E:  BTFSC  0C.4
041F:  GOTO   44F
....................                      { 
....................                         printf(lcd_putc,"\f  Start Sessin"); 
0420:  MOVLW  E0
0421:  MOVLB  03
0422:  MOVWF  11
0423:  MOVLW  00
0424:  MOVWF  12
0425:  MOVLB  00
0426:  CALL   3B6
....................                         printf(lcd_putc,"\n->Last Session"); 
0427:  MOVLW  E8
0428:  MOVLB  03
0429:  MOVWF  11
042A:  MOVLW  00
042B:  MOVWF  12
042C:  MOVLB  00
042D:  CALL   3B6
....................                     
....................                         rpm=read_program_eeprom(0xfff); 
042E:  MOVLW  FF
042F:  MOVLB  03
0430:  MOVWF  11
0431:  MOVLW  0F
0432:  MOVWF  12
0433:  BSF    15.7
0434:  BSF    15.0
0435:  NOP
0436:  NOP
0437:  MOVF   14,W
0438:  MOVWF  7A
0439:  MOVF   13,W
043A:  MOVLB  00
043B:  MOVWF  26
043C:  MOVF   7A,W
043D:  MOVWF  27
....................                         if(rpm>6500) 
043E:  MOVF   27,W
043F:  SUBLW  18
0440:  BTFSC  03.0
0441:  GOTO   44E
0442:  XORLW  FF
0443:  BTFSS  03.2
0444:  GOTO   449
0445:  MOVF   26,W
0446:  SUBLW  64
0447:  BTFSC  03.0
0448:  GOTO   44E
....................                            output_high(led_w); 
0449:  MOVLB  01
044A:  BCF    0E.4
044B:  MOVLB  02
044C:  BSF    0E.4
044D:  MOVLB  00
....................                            break; 
044E:  GOTO   477
....................                      } 
....................                } 
....................             if((!input(inc_butt))) 
044F:  MOVLB  01
0450:  BSF    0C.5
0451:  MOVLB  00
0452:  BTFSC  0C.5
0453:  GOTO   470
....................                { 
....................                delay_ms(10); 
0454:  MOVLW  0A
0455:  MOVLB  01
0456:  MOVWF  25
0457:  MOVLB  00
0458:  CALL   178
....................                if(!input(inc_butt)) 
0459:  MOVLB  01
045A:  BSF    0C.5
045B:  MOVLB  00
045C:  BTFSC  0C.5
045D:  GOTO   470
....................                   { 
....................                      printf(lcd_putc,"\f->Start Sessin"); 
045E:  MOVLW  F0
045F:  MOVLB  03
0460:  MOVWF  11
0461:  MOVLW  00
0462:  MOVWF  12
0463:  MOVLB  00
0464:  CALL   3B6
....................                      printf(lcd_putc,"\n  Last Session");  
0465:  MOVLW  F8
0466:  MOVLB  03
0467:  MOVWF  11
0468:  MOVLW  00
0469:  MOVWF  12
046A:  MOVLB  00
046B:  CALL   3B6
....................                      rpm=100; 
046C:  CLRF   27
046D:  MOVLW  64
046E:  MOVWF  26
....................                      break; 
046F:  GOTO   477
....................                   } 
....................                } 
....................             delay_ms(20); 
0470:  MOVLW  14
0471:  MOVLB  01
0472:  MOVWF  25
0473:  MOVLB  00
0474:  CALL   178
....................          } 
0475:  INCF   29,F
0476:  GOTO   40E
....................    } 
0477:  MOVLP  00
0478:  GOTO   573 (RETURN)
....................  
.................... void print_f() 
....................    { 
....................       switch(rpm) 
....................          { 
*
0800:  MOVF   26,W
0801:  MOVWF  77
0802:  MOVF   27,W
0803:  MOVWF  7A
0804:  MOVF   7A,W
0805:  BTFSS  03.2
0806:  GOTO   00B
0807:  MOVLW  64
0808:  SUBWF  77,W
0809:  BTFSC  03.2
080A:  GOTO   0C3
080B:  MOVF   7A,W
080C:  BTFSS  03.2
080D:  GOTO   012
080E:  MOVLW  C8
080F:  SUBWF  77,W
0810:  BTFSC  03.2
0811:  GOTO   0DE
0812:  MOVLW  01
0813:  SUBWF  7A,W
0814:  BTFSS  03.2
0815:  GOTO   01A
0816:  MOVLW  2C
0817:  SUBWF  77,W
0818:  BTFSC  03.2
0819:  GOTO   0F8
081A:  MOVLW  01
081B:  SUBWF  7A,W
081C:  BTFSS  03.2
081D:  GOTO   022
081E:  MOVLW  90
081F:  SUBWF  77,W
0820:  BTFSC  03.2
0821:  GOTO   112
0822:  MOVLW  01
0823:  SUBWF  7A,W
0824:  BTFSS  03.2
0825:  GOTO   02A
0826:  MOVLW  F4
0827:  SUBWF  77,W
0828:  BTFSC  03.2
0829:  GOTO   12C
082A:  MOVLW  03
082B:  SUBWF  7A,W
082C:  BTFSS  03.2
082D:  GOTO   032
082E:  MOVLW  E8
082F:  SUBWF  77,W
0830:  BTFSC  03.2
0831:  GOTO   146
0832:  MOVLW  05
0833:  SUBWF  7A,W
0834:  BTFSS  03.2
0835:  GOTO   03A
0836:  MOVLW  DC
0837:  SUBWF  77,W
0838:  BTFSC  03.2
0839:  GOTO   160
083A:  MOVLW  07
083B:  SUBWF  7A,W
083C:  BTFSS  03.2
083D:  GOTO   042
083E:  MOVLW  D0
083F:  SUBWF  77,W
0840:  BTFSC  03.2
0841:  GOTO   17A
0842:  MOVLW  09
0843:  SUBWF  7A,W
0844:  BTFSS  03.2
0845:  GOTO   04A
0846:  MOVLW  C4
0847:  SUBWF  77,W
0848:  BTFSC  03.2
0849:  GOTO   194
084A:  MOVLW  0B
084B:  SUBWF  7A,W
084C:  BTFSS  03.2
084D:  GOTO   052
084E:  MOVLW  B8
084F:  SUBWF  77,W
0850:  BTFSC  03.2
0851:  GOTO   1AE
0852:  MOVLW  0D
0853:  SUBWF  7A,W
0854:  BTFSS  03.2
0855:  GOTO   05A
0856:  MOVLW  AC
0857:  SUBWF  77,W
0858:  BTFSC  03.2
0859:  GOTO   1C8
085A:  MOVLW  0F
085B:  SUBWF  7A,W
085C:  BTFSS  03.2
085D:  GOTO   062
085E:  MOVLW  A0
085F:  SUBWF  77,W
0860:  BTFSC  03.2
0861:  GOTO   1E3
0862:  MOVLW  11
0863:  SUBWF  7A,W
0864:  BTFSS  03.2
0865:  GOTO   06A
0866:  MOVLW  94
0867:  SUBWF  77,W
0868:  BTFSC  03.2
0869:  GOTO   1FE
086A:  MOVLW  13
086B:  SUBWF  7A,W
086C:  BTFSS  03.2
086D:  GOTO   072
086E:  MOVLW  88
086F:  SUBWF  77,W
0870:  BTFSC  03.2
0871:  GOTO   219
0872:  MOVLW  15
0873:  SUBWF  7A,W
0874:  BTFSS  03.2
0875:  GOTO   07A
0876:  MOVLW  7C
0877:  SUBWF  77,W
0878:  BTFSC  03.2
0879:  GOTO   234
087A:  MOVLW  17
087B:  SUBWF  7A,W
087C:  BTFSS  03.2
087D:  GOTO   082
087E:  MOVLW  70
087F:  SUBWF  77,W
0880:  BTFSC  03.2
0881:  GOTO   24F
0882:  MOVLW  19
0883:  SUBWF  7A,W
0884:  BTFSS  03.2
0885:  GOTO   08A
0886:  MOVLW  64
0887:  SUBWF  77,W
0888:  BTFSC  03.2
0889:  GOTO   26A
088A:  MOVLW  1B
088B:  SUBWF  7A,W
088C:  BTFSS  03.2
088D:  GOTO   092
088E:  MOVLW  58
088F:  SUBWF  77,W
0890:  BTFSC  03.2
0891:  GOTO   28A
0892:  MOVLW  1D
0893:  SUBWF  7A,W
0894:  BTFSS  03.2
0895:  GOTO   09A
0896:  MOVLW  4C
0897:  SUBWF  77,W
0898:  BTFSC  03.2
0899:  GOTO   2AA
089A:  MOVLW  1F
089B:  SUBWF  7A,W
089C:  BTFSS  03.2
089D:  GOTO   0A2
089E:  MOVLW  40
089F:  SUBWF  77,W
08A0:  BTFSC  03.2
08A1:  GOTO   2C5
08A2:  MOVLW  21
08A3:  SUBWF  7A,W
08A4:  BTFSS  03.2
08A5:  GOTO   0AA
08A6:  MOVLW  34
08A7:  SUBWF  77,W
08A8:  BTFSC  03.2
08A9:  GOTO   2E0
08AA:  MOVLW  23
08AB:  SUBWF  7A,W
08AC:  BTFSS  03.2
08AD:  GOTO   0B2
08AE:  MOVLW  28
08AF:  SUBWF  77,W
08B0:  BTFSC  03.2
08B1:  GOTO   2FB
08B2:  MOVLW  25
08B3:  SUBWF  7A,W
08B4:  BTFSS  03.2
08B5:  GOTO   0BA
08B6:  MOVLW  1C
08B7:  SUBWF  77,W
08B8:  BTFSC  03.2
08B9:  GOTO   316
08BA:  MOVLW  27
08BB:  SUBWF  7A,W
08BC:  BTFSS  03.2
08BD:  GOTO   0C2
08BE:  MOVLW  10
08BF:  SUBWF  77,W
08C0:  BTFSC  03.2
08C1:  GOTO   331
08C2:  GOTO   34B
....................             case 100:  
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
08C3:  MOVLW  00
08C4:  MOVLB  03
08C5:  MOVWF  11
08C6:  MOVLW  01
08C7:  MOVWF  12
08C8:  BCF    03.0
08C9:  MOVLW  05
08CA:  MOVLB  00
08CB:  MOVWF  29
08CC:  MOVLP  00
08CD:  CALL   479
08CE:  MOVLP  08
08CF:  MOVLW  10
08D0:  MOVWF  04
08D1:  MOVF   27,W
08D2:  MOVWF  2A
08D3:  MOVF   26,W
08D4:  MOVWF  29
08D5:  MOVLP  00
08D6:  CALL   4CA
08D7:  MOVLP  08
....................                   delay=300; 
08D8:  MOVLW  01
08D9:  MOVWF  25
08DA:  MOVLW  2C
08DB:  MOVWF  24
....................                   print=0; 
08DC:  BCF    28.0
....................                } 
....................                break; 
08DD:  GOTO   34B
....................             case 200: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
08DE:  MOVLW  05
08DF:  MOVLB  03
08E0:  MOVWF  11
08E1:  MOVLW  01
08E2:  MOVWF  12
08E3:  BCF    03.0
08E4:  MOVLW  05
08E5:  MOVLB  00
08E6:  MOVWF  29
08E7:  MOVLP  00
08E8:  CALL   479
08E9:  MOVLP  08
08EA:  MOVLW  10
08EB:  MOVWF  04
08EC:  MOVF   27,W
08ED:  MOVWF  2A
08EE:  MOVF   26,W
08EF:  MOVWF  29
08F0:  MOVLP  00
08F1:  CALL   4CA
08F2:  MOVLP  08
....................                   delay=150; 
08F3:  CLRF   25
08F4:  MOVLW  96
08F5:  MOVWF  24
....................                   print=0; 
08F6:  BCF    28.0
....................                } 
....................                break; 
08F7:  GOTO   34B
....................             case 300: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
08F8:  MOVLW  0A
08F9:  MOVLB  03
08FA:  MOVWF  11
08FB:  MOVLW  01
08FC:  MOVWF  12
08FD:  BCF    03.0
08FE:  MOVLW  05
08FF:  MOVLB  00
0900:  MOVWF  29
0901:  MOVLP  00
0902:  CALL   479
0903:  MOVLP  08
0904:  MOVLW  10
0905:  MOVWF  04
0906:  MOVF   27,W
0907:  MOVWF  2A
0908:  MOVF   26,W
0909:  MOVWF  29
090A:  MOVLP  00
090B:  CALL   4CA
090C:  MOVLP  08
....................                   delay=100; 
090D:  CLRF   25
090E:  MOVLW  64
090F:  MOVWF  24
....................                   print=0; 
0910:  BCF    28.0
....................                } 
....................                break; 
0911:  GOTO   34B
....................             case 400: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0912:  MOVLW  0F
0913:  MOVLB  03
0914:  MOVWF  11
0915:  MOVLW  01
0916:  MOVWF  12
0917:  BCF    03.0
0918:  MOVLW  05
0919:  MOVLB  00
091A:  MOVWF  29
091B:  MOVLP  00
091C:  CALL   479
091D:  MOVLP  08
091E:  MOVLW  10
091F:  MOVWF  04
0920:  MOVF   27,W
0921:  MOVWF  2A
0922:  MOVF   26,W
0923:  MOVWF  29
0924:  MOVLP  00
0925:  CALL   4CA
0926:  MOVLP  08
....................                   delay=75; 
0927:  CLRF   25
0928:  MOVLW  4B
0929:  MOVWF  24
....................                   print=0; 
092A:  BCF    28.0
....................                } 
....................                break; 
092B:  GOTO   34B
....................             case 500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
092C:  MOVLW  14
092D:  MOVLB  03
092E:  MOVWF  11
092F:  MOVLW  01
0930:  MOVWF  12
0931:  BCF    03.0
0932:  MOVLW  05
0933:  MOVLB  00
0934:  MOVWF  29
0935:  MOVLP  00
0936:  CALL   479
0937:  MOVLP  08
0938:  MOVLW  10
0939:  MOVWF  04
093A:  MOVF   27,W
093B:  MOVWF  2A
093C:  MOVF   26,W
093D:  MOVWF  29
093E:  MOVLP  00
093F:  CALL   4CA
0940:  MOVLP  08
....................                   delay=60; 
0941:  CLRF   25
0942:  MOVLW  3C
0943:  MOVWF  24
....................                   print=0; 
0944:  BCF    28.0
....................                } 
....................                break; 
0945:  GOTO   34B
....................             case 1000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0946:  MOVLW  19
0947:  MOVLB  03
0948:  MOVWF  11
0949:  MOVLW  01
094A:  MOVWF  12
094B:  BCF    03.0
094C:  MOVLW  05
094D:  MOVLB  00
094E:  MOVWF  29
094F:  MOVLP  00
0950:  CALL   479
0951:  MOVLP  08
0952:  MOVLW  10
0953:  MOVWF  04
0954:  MOVF   27,W
0955:  MOVWF  2A
0956:  MOVF   26,W
0957:  MOVWF  29
0958:  MOVLP  00
0959:  CALL   4CA
095A:  MOVLP  08
....................                   delay=30; 
095B:  CLRF   25
095C:  MOVLW  1E
095D:  MOVWF  24
....................                   print=0; 
095E:  BCF    28.0
....................                } 
....................                break; 
095F:  GOTO   34B
....................             case 1500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0960:  MOVLW  1E
0961:  MOVLB  03
0962:  MOVWF  11
0963:  MOVLW  01
0964:  MOVWF  12
0965:  BCF    03.0
0966:  MOVLW  05
0967:  MOVLB  00
0968:  MOVWF  29
0969:  MOVLP  00
096A:  CALL   479
096B:  MOVLP  08
096C:  MOVLW  10
096D:  MOVWF  04
096E:  MOVF   27,W
096F:  MOVWF  2A
0970:  MOVF   26,W
0971:  MOVWF  29
0972:  MOVLP  00
0973:  CALL   4CA
0974:  MOVLP  08
....................                   delay=20; 
0975:  CLRF   25
0976:  MOVLW  14
0977:  MOVWF  24
....................                   print=0; 
0978:  BCF    28.0
....................                } 
....................                break; 
0979:  GOTO   34B
....................             case 2000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
097A:  MOVLW  23
097B:  MOVLB  03
097C:  MOVWF  11
097D:  MOVLW  01
097E:  MOVWF  12
097F:  BCF    03.0
0980:  MOVLW  05
0981:  MOVLB  00
0982:  MOVWF  29
0983:  MOVLP  00
0984:  CALL   479
0985:  MOVLP  08
0986:  MOVLW  10
0987:  MOVWF  04
0988:  MOVF   27,W
0989:  MOVWF  2A
098A:  MOVF   26,W
098B:  MOVWF  29
098C:  MOVLP  00
098D:  CALL   4CA
098E:  MOVLP  08
....................                   delay=15; 
098F:  CLRF   25
0990:  MOVLW  0F
0991:  MOVWF  24
....................                   print=0; 
0992:  BCF    28.0
....................                } 
....................                break; 
0993:  GOTO   34B
....................             case 2500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0994:  MOVLW  28
0995:  MOVLB  03
0996:  MOVWF  11
0997:  MOVLW  01
0998:  MOVWF  12
0999:  BCF    03.0
099A:  MOVLW  05
099B:  MOVLB  00
099C:  MOVWF  29
099D:  MOVLP  00
099E:  CALL   479
099F:  MOVLP  08
09A0:  MOVLW  10
09A1:  MOVWF  04
09A2:  MOVF   27,W
09A3:  MOVWF  2A
09A4:  MOVF   26,W
09A5:  MOVWF  29
09A6:  MOVLP  00
09A7:  CALL   4CA
09A8:  MOVLP  08
....................                   delay=12; 
09A9:  CLRF   25
09AA:  MOVLW  0C
09AB:  MOVWF  24
....................                   print=0; 
09AC:  BCF    28.0
....................                } 
....................                break; 
09AD:  GOTO   34B
....................             case 3000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
09AE:  MOVLW  2D
09AF:  MOVLB  03
09B0:  MOVWF  11
09B1:  MOVLW  01
09B2:  MOVWF  12
09B3:  BCF    03.0
09B4:  MOVLW  05
09B5:  MOVLB  00
09B6:  MOVWF  29
09B7:  MOVLP  00
09B8:  CALL   479
09B9:  MOVLP  08
09BA:  MOVLW  10
09BB:  MOVWF  04
09BC:  MOVF   27,W
09BD:  MOVWF  2A
09BE:  MOVF   26,W
09BF:  MOVWF  29
09C0:  MOVLP  00
09C1:  CALL   4CA
09C2:  MOVLP  08
....................                   delay=10; 
09C3:  CLRF   25
09C4:  MOVLW  0A
09C5:  MOVWF  24
....................                   print=0; 
09C6:  BCF    28.0
....................                } 
....................                break; 
09C7:  GOTO   34B
....................             case 3500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
09C8:  MOVLW  32
09C9:  MOVLB  03
09CA:  MOVWF  11
09CB:  MOVLW  01
09CC:  MOVWF  12
09CD:  BCF    03.0
09CE:  MOVLW  05
09CF:  MOVLB  00
09D0:  MOVWF  29
09D1:  MOVLP  00
09D2:  CALL   479
09D3:  MOVLP  08
09D4:  MOVLW  10
09D5:  MOVWF  04
09D6:  MOVF   27,W
09D7:  MOVWF  2A
09D8:  MOVF   26,W
09D9:  MOVWF  29
09DA:  MOVLP  00
09DB:  CALL   4CA
09DC:  MOVLP  08
....................                   delay=8570; 
09DD:  MOVLW  21
09DE:  MOVWF  25
09DF:  MOVLW  7A
09E0:  MOVWF  24
....................                   print=0; 
09E1:  BCF    28.0
....................                } 
....................                break; 
09E2:  GOTO   34B
....................             case 4000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
09E3:  MOVLW  37
09E4:  MOVLB  03
09E5:  MOVWF  11
09E6:  MOVLW  01
09E7:  MOVWF  12
09E8:  BCF    03.0
09E9:  MOVLW  05
09EA:  MOVLB  00
09EB:  MOVWF  29
09EC:  MOVLP  00
09ED:  CALL   479
09EE:  MOVLP  08
09EF:  MOVLW  10
09F0:  MOVWF  04
09F1:  MOVF   27,W
09F2:  MOVWF  2A
09F3:  MOVF   26,W
09F4:  MOVWF  29
09F5:  MOVLP  00
09F6:  CALL   4CA
09F7:  MOVLP  08
....................                   delay=7500; 
09F8:  MOVLW  1D
09F9:  MOVWF  25
09FA:  MOVLW  4C
09FB:  MOVWF  24
....................                   print=0; 
09FC:  BCF    28.0
....................                } 
....................                break; 
09FD:  GOTO   34B
....................             case 4500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
09FE:  MOVLW  3C
09FF:  MOVLB  03
0A00:  MOVWF  11
0A01:  MOVLW  01
0A02:  MOVWF  12
0A03:  BCF    03.0
0A04:  MOVLW  05
0A05:  MOVLB  00
0A06:  MOVWF  29
0A07:  MOVLP  00
0A08:  CALL   479
0A09:  MOVLP  08
0A0A:  MOVLW  10
0A0B:  MOVWF  04
0A0C:  MOVF   27,W
0A0D:  MOVWF  2A
0A0E:  MOVF   26,W
0A0F:  MOVWF  29
0A10:  MOVLP  00
0A11:  CALL   4CA
0A12:  MOVLP  08
....................                   delay=6666; 
0A13:  MOVLW  1A
0A14:  MOVWF  25
0A15:  MOVLW  0A
0A16:  MOVWF  24
....................                   print=0; 
0A17:  BCF    28.0
....................                } 
....................                break; 
0A18:  GOTO   34B
....................             case 5000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0A19:  MOVLW  41
0A1A:  MOVLB  03
0A1B:  MOVWF  11
0A1C:  MOVLW  01
0A1D:  MOVWF  12
0A1E:  BCF    03.0
0A1F:  MOVLW  05
0A20:  MOVLB  00
0A21:  MOVWF  29
0A22:  MOVLP  00
0A23:  CALL   479
0A24:  MOVLP  08
0A25:  MOVLW  10
0A26:  MOVWF  04
0A27:  MOVF   27,W
0A28:  MOVWF  2A
0A29:  MOVF   26,W
0A2A:  MOVWF  29
0A2B:  MOVLP  00
0A2C:  CALL   4CA
0A2D:  MOVLP  08
....................                   delay=6000; 
0A2E:  MOVLW  17
0A2F:  MOVWF  25
0A30:  MOVLW  70
0A31:  MOVWF  24
....................                   print=0; 
0A32:  BCF    28.0
....................                } 
....................                break; 
0A33:  GOTO   34B
....................             case 5500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0A34:  MOVLW  46
0A35:  MOVLB  03
0A36:  MOVWF  11
0A37:  MOVLW  01
0A38:  MOVWF  12
0A39:  BCF    03.0
0A3A:  MOVLW  05
0A3B:  MOVLB  00
0A3C:  MOVWF  29
0A3D:  MOVLP  00
0A3E:  CALL   479
0A3F:  MOVLP  08
0A40:  MOVLW  10
0A41:  MOVWF  04
0A42:  MOVF   27,W
0A43:  MOVWF  2A
0A44:  MOVF   26,W
0A45:  MOVWF  29
0A46:  MOVLP  00
0A47:  CALL   4CA
0A48:  MOVLP  08
....................                   delay=5454; 
0A49:  MOVLW  15
0A4A:  MOVWF  25
0A4B:  MOVLW  4E
0A4C:  MOVWF  24
....................                   print=0; 
0A4D:  BCF    28.0
....................                } 
....................                break; 
0A4E:  GOTO   34B
....................             case 6000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0A4F:  MOVLW  4B
0A50:  MOVLB  03
0A51:  MOVWF  11
0A52:  MOVLW  01
0A53:  MOVWF  12
0A54:  BCF    03.0
0A55:  MOVLW  05
0A56:  MOVLB  00
0A57:  MOVWF  29
0A58:  MOVLP  00
0A59:  CALL   479
0A5A:  MOVLP  08
0A5B:  MOVLW  10
0A5C:  MOVWF  04
0A5D:  MOVF   27,W
0A5E:  MOVWF  2A
0A5F:  MOVF   26,W
0A60:  MOVWF  29
0A61:  MOVLP  00
0A62:  CALL   4CA
0A63:  MOVLP  08
....................                   delay=5000; 
0A64:  MOVLW  13
0A65:  MOVWF  25
0A66:  MOVLW  88
0A67:  MOVWF  24
....................                   print=0; 
0A68:  BCF    28.0
....................                } 
....................                break; 
0A69:  GOTO   34B
....................             case 6500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0A6A:  MOVLW  50
0A6B:  MOVLB  03
0A6C:  MOVWF  11
0A6D:  MOVLW  01
0A6E:  MOVWF  12
0A6F:  BCF    03.0
0A70:  MOVLW  05
0A71:  MOVLB  00
0A72:  MOVWF  29
0A73:  MOVLP  00
0A74:  CALL   479
0A75:  MOVLP  08
0A76:  MOVLW  10
0A77:  MOVWF  04
0A78:  MOVF   27,W
0A79:  MOVWF  2A
0A7A:  MOVF   26,W
0A7B:  MOVWF  29
0A7C:  MOVLP  00
0A7D:  CALL   4CA
0A7E:  MOVLP  08
....................                   delay=4615; 
0A7F:  MOVLW  12
0A80:  MOVWF  25
0A81:  MOVLW  07
0A82:  MOVWF  24
....................                   output_low(led_w); 
0A83:  MOVLB  01
0A84:  BCF    0E.4
0A85:  MOVLB  02
0A86:  BCF    0E.4
....................                   print=0; 
0A87:  MOVLB  00
0A88:  BCF    28.0
....................                } 
....................                break; 
0A89:  GOTO   34B
....................             case 7000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0A8A:  MOVLW  55
0A8B:  MOVLB  03
0A8C:  MOVWF  11
0A8D:  MOVLW  01
0A8E:  MOVWF  12
0A8F:  BCF    03.0
0A90:  MOVLW  05
0A91:  MOVLB  00
0A92:  MOVWF  29
0A93:  MOVLP  00
0A94:  CALL   479
0A95:  MOVLP  08
0A96:  MOVLW  10
0A97:  MOVWF  04
0A98:  MOVF   27,W
0A99:  MOVWF  2A
0A9A:  MOVF   26,W
0A9B:  MOVWF  29
0A9C:  MOVLP  00
0A9D:  CALL   4CA
0A9E:  MOVLP  08
....................                   delay=4285; 
0A9F:  MOVLW  10
0AA0:  MOVWF  25
0AA1:  MOVLW  BD
0AA2:  MOVWF  24
....................                   output_high(led_w); 
0AA3:  MOVLB  01
0AA4:  BCF    0E.4
0AA5:  MOVLB  02
0AA6:  BSF    0E.4
....................                   print=0; 
0AA7:  MOVLB  00
0AA8:  BCF    28.0
....................                } 
....................                break; 
0AA9:  GOTO   34B
....................             case 7500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0AAA:  MOVLW  5A
0AAB:  MOVLB  03
0AAC:  MOVWF  11
0AAD:  MOVLW  01
0AAE:  MOVWF  12
0AAF:  BCF    03.0
0AB0:  MOVLW  05
0AB1:  MOVLB  00
0AB2:  MOVWF  29
0AB3:  MOVLP  00
0AB4:  CALL   479
0AB5:  MOVLP  08
0AB6:  MOVLW  10
0AB7:  MOVWF  04
0AB8:  MOVF   27,W
0AB9:  MOVWF  2A
0ABA:  MOVF   26,W
0ABB:  MOVWF  29
0ABC:  MOVLP  00
0ABD:  CALL   4CA
0ABE:  MOVLP  08
....................                   delay=4000; 
0ABF:  MOVLW  0F
0AC0:  MOVWF  25
0AC1:  MOVLW  A0
0AC2:  MOVWF  24
....................                   print=0; 
0AC3:  BCF    28.0
....................                } 
....................                break; 
0AC4:  GOTO   34B
....................             case 8000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0AC5:  MOVLW  5F
0AC6:  MOVLB  03
0AC7:  MOVWF  11
0AC8:  MOVLW  01
0AC9:  MOVWF  12
0ACA:  BCF    03.0
0ACB:  MOVLW  05
0ACC:  MOVLB  00
0ACD:  MOVWF  29
0ACE:  MOVLP  00
0ACF:  CALL   479
0AD0:  MOVLP  08
0AD1:  MOVLW  10
0AD2:  MOVWF  04
0AD3:  MOVF   27,W
0AD4:  MOVWF  2A
0AD5:  MOVF   26,W
0AD6:  MOVWF  29
0AD7:  MOVLP  00
0AD8:  CALL   4CA
0AD9:  MOVLP  08
....................                   delay=3750; 
0ADA:  MOVLW  0E
0ADB:  MOVWF  25
0ADC:  MOVLW  A6
0ADD:  MOVWF  24
....................                   print=0; 
0ADE:  BCF    28.0
....................                } 
....................                break; 
0ADF:  GOTO   34B
....................             case 8500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0AE0:  MOVLW  64
0AE1:  MOVLB  03
0AE2:  MOVWF  11
0AE3:  MOVLW  01
0AE4:  MOVWF  12
0AE5:  BCF    03.0
0AE6:  MOVLW  05
0AE7:  MOVLB  00
0AE8:  MOVWF  29
0AE9:  MOVLP  00
0AEA:  CALL   479
0AEB:  MOVLP  08
0AEC:  MOVLW  10
0AED:  MOVWF  04
0AEE:  MOVF   27,W
0AEF:  MOVWF  2A
0AF0:  MOVF   26,W
0AF1:  MOVWF  29
0AF2:  MOVLP  00
0AF3:  CALL   4CA
0AF4:  MOVLP  08
....................                   delay=3529; 
0AF5:  MOVLW  0D
0AF6:  MOVWF  25
0AF7:  MOVLW  C9
0AF8:  MOVWF  24
....................                   print=0; 
0AF9:  BCF    28.0
....................                } 
....................                break; 
0AFA:  GOTO   34B
....................            case 9000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0AFB:  MOVLW  69
0AFC:  MOVLB  03
0AFD:  MOVWF  11
0AFE:  MOVLW  01
0AFF:  MOVWF  12
0B00:  BCF    03.0
0B01:  MOVLW  05
0B02:  MOVLB  00
0B03:  MOVWF  29
0B04:  MOVLP  00
0B05:  CALL   479
0B06:  MOVLP  08
0B07:  MOVLW  10
0B08:  MOVWF  04
0B09:  MOVF   27,W
0B0A:  MOVWF  2A
0B0B:  MOVF   26,W
0B0C:  MOVWF  29
0B0D:  MOVLP  00
0B0E:  CALL   4CA
0B0F:  MOVLP  08
....................                   delay=3333; 
0B10:  MOVLW  0D
0B11:  MOVWF  25
0B12:  MOVLW  05
0B13:  MOVWF  24
....................                   print=0; 
0B14:  BCF    28.0
....................                } 
....................                break; 
0B15:  GOTO   34B
....................             case 9500: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0B16:  MOVLW  6E
0B17:  MOVLB  03
0B18:  MOVWF  11
0B19:  MOVLW  01
0B1A:  MOVWF  12
0B1B:  BCF    03.0
0B1C:  MOVLW  05
0B1D:  MOVLB  00
0B1E:  MOVWF  29
0B1F:  MOVLP  00
0B20:  CALL   479
0B21:  MOVLP  08
0B22:  MOVLW  10
0B23:  MOVWF  04
0B24:  MOVF   27,W
0B25:  MOVWF  2A
0B26:  MOVF   26,W
0B27:  MOVWF  29
0B28:  MOVLP  00
0B29:  CALL   4CA
0B2A:  MOVLP  08
....................                   delay=3157; 
0B2B:  MOVLW  0C
0B2C:  MOVWF  25
0B2D:  MOVLW  55
0B2E:  MOVWF  24
....................                   print=0; 
0B2F:  BCF    28.0
....................                } 
....................                break; 
0B30:  GOTO   34B
....................             case 10000: 
....................                { 
....................                   printf(lcd_putc,"\fRPM %lu",rpm); 
0B31:  MOVLW  73
0B32:  MOVLB  03
0B33:  MOVWF  11
0B34:  MOVLW  01
0B35:  MOVWF  12
0B36:  BCF    03.0
0B37:  MOVLW  05
0B38:  MOVLB  00
0B39:  MOVWF  29
0B3A:  MOVLP  00
0B3B:  CALL   479
0B3C:  MOVLP  08
0B3D:  MOVLW  10
0B3E:  MOVWF  04
0B3F:  MOVF   27,W
0B40:  MOVWF  2A
0B41:  MOVF   26,W
0B42:  MOVWF  29
0B43:  MOVLP  00
0B44:  CALL   4CA
0B45:  MOVLP  08
....................                   delay=3000; 
0B46:  MOVLW  0B
0B47:  MOVWF  25
0B48:  MOVLW  B8
0B49:  MOVWF  24
....................                   print=0; 
0B4A:  BCF    28.0
....................                } 
....................                break; 
....................                 
....................          } 
....................    } 
0B4B:  RETURN
....................     
.................... void initialization() 
....................    { 
....................       int i; 
....................       char dev[23] = "\fDEVELOPED BY\nRIKOTECH"; 
*
02B8:  MOVLW  0C
02B9:  MOVWF  2A
02BA:  MOVLW  44
02BB:  MOVWF  2B
02BC:  MOVLW  45
02BD:  MOVWF  2C
02BE:  MOVLW  56
02BF:  MOVWF  2D
02C0:  MOVLW  45
02C1:  MOVWF  2E
02C2:  MOVLW  4C
02C3:  MOVWF  2F
02C4:  MOVLW  4F
02C5:  MOVWF  30
02C6:  MOVLW  50
02C7:  MOVWF  31
02C8:  MOVLW  45
02C9:  MOVWF  32
02CA:  MOVLW  44
02CB:  MOVWF  33
02CC:  MOVLW  20
02CD:  MOVWF  34
02CE:  MOVLW  42
02CF:  MOVWF  35
02D0:  MOVLW  59
02D1:  MOVWF  36
02D2:  MOVLW  0A
02D3:  MOVWF  37
02D4:  MOVLW  52
02D5:  MOVWF  38
02D6:  MOVLW  49
02D7:  MOVWF  39
02D8:  MOVLW  4B
02D9:  MOVWF  3A
02DA:  MOVLW  4F
02DB:  MOVWF  3B
02DC:  MOVLW  54
02DD:  MOVWF  3C
02DE:  MOVLW  45
02DF:  MOVWF  3D
02E0:  MOVLW  43
02E1:  MOVWF  3E
02E2:  MOVLW  48
02E3:  MOVWF  3F
02E4:  CLRF   40
....................       char mail[23] = "\fprorandy88@\ngmail.com"; 
02E5:  MOVLW  0C
02E6:  MOVWF  41
02E7:  MOVLW  70
02E8:  MOVWF  42
02E9:  MOVLW  72
02EA:  MOVWF  43
02EB:  MOVLW  6F
02EC:  MOVWF  44
02ED:  MOVLW  72
02EE:  MOVWF  45
02EF:  MOVLW  61
02F0:  MOVWF  46
02F1:  MOVLW  6E
02F2:  MOVWF  47
02F3:  MOVLW  64
02F4:  MOVWF  48
02F5:  MOVLW  79
02F6:  MOVWF  49
02F7:  MOVLW  38
02F8:  MOVWF  4A
02F9:  MOVWF  4B
02FA:  MOVLW  40
02FB:  MOVWF  4C
02FC:  MOVLW  0A
02FD:  MOVWF  4D
02FE:  MOVLW  67
02FF:  MOVWF  4E
0300:  MOVLW  6D
0301:  MOVWF  4F
0302:  MOVLW  61
0303:  MOVWF  50
0304:  MOVLW  69
0305:  MOVWF  51
0306:  MOVLW  6C
0307:  MOVWF  52
0308:  MOVLW  2E
0309:  MOVWF  53
030A:  MOVLW  63
030B:  MOVWF  54
030C:  MOVLW  6F
030D:  MOVWF  55
030E:  MOVLW  6D
030F:  MOVWF  56
0310:  CLRF   57
....................       char logo[27] = "\fDOCTOR MOTORS\nCAR SERVICE"; 
0311:  MOVLW  0C
0312:  MOVWF  58
0313:  MOVLW  44
0314:  MOVWF  59
0315:  MOVLW  4F
0316:  MOVWF  5A
0317:  MOVLW  43
0318:  MOVWF  5B
0319:  MOVLW  54
031A:  MOVWF  5C
031B:  MOVLW  4F
031C:  MOVWF  5D
031D:  MOVLW  52
031E:  MOVWF  5E
031F:  MOVLW  20
0320:  MOVWF  5F
0321:  MOVLW  4D
0322:  MOVWF  60
0323:  MOVLW  4F
0324:  MOVWF  61
0325:  MOVLW  54
0326:  MOVWF  62
0327:  MOVLW  4F
0328:  MOVWF  63
0329:  MOVLW  52
032A:  MOVWF  64
032B:  MOVLW  53
032C:  MOVWF  65
032D:  MOVLW  0A
032E:  MOVWF  66
032F:  MOVLW  43
0330:  MOVWF  67
0331:  MOVLW  41
0332:  MOVWF  68
0333:  MOVLW  52
0334:  MOVWF  69
0335:  MOVLW  20
0336:  MOVWF  6A
0337:  MOVLW  53
0338:  MOVWF  6B
0339:  MOVLW  45
033A:  MOVWF  6C
033B:  MOVLW  52
033C:  MOVWF  6D
033D:  MOVLW  56
033E:  MOVWF  6E
033F:  MOVLW  49
0340:  MOVWF  6F
0341:  MOVLW  43
0342:  MOVLB  01
0343:  MOVWF  20
0344:  MOVLW  45
0345:  MOVWF  21
0346:  CLRF   22
....................       for(i=0;i<=sizeof(dev)-2;i++) 
0347:  MOVLB  00
0348:  CLRF   29
0349:  MOVF   29,W
034A:  SUBLW  15
034B:  BTFSS  03.0
034C:  GOTO   361
....................          { 
....................             lcd_putc(dev[i]); 
034D:  MOVLW  0A
034E:  ADDWF  29,W
034F:  MOVWF  04
0350:  MOVLW  20
0351:  MOVWF  05
0352:  BTFSC  03.0
0353:  INCF   05,F
0354:  MOVF   00,W
0355:  MOVLB  01
0356:  MOVWF  23
0357:  MOVWF  24
0358:  MOVLB  00
0359:  CALL   278
....................             delay_ms(100); 
035A:  MOVLW  64
035B:  MOVLB  01
035C:  MOVWF  25
035D:  MOVLB  00
035E:  CALL   178
....................          } 
035F:  INCF   29,F
0360:  GOTO   349
....................       delay_ms(2000); 
0361:  MOVLW  08
0362:  MOVLB  01
0363:  MOVWF  23
0364:  MOVLW  FA
0365:  MOVWF  25
0366:  MOVLB  00
0367:  CALL   178
0368:  MOVLB  01
0369:  DECFSZ 23,F
036A:  GOTO   364
....................       for(i=0;i<=sizeof(mail)-2;i++) 
036B:  MOVLB  00
036C:  CLRF   29
036D:  MOVF   29,W
036E:  SUBLW  15
036F:  BTFSS  03.0
0370:  GOTO   385
....................          { 
....................             lcd_putc(mail[i]); 
0371:  MOVLW  21
0372:  ADDWF  29,W
0373:  MOVWF  04
0374:  MOVLW  20
0375:  MOVWF  05
0376:  BTFSC  03.0
0377:  INCF   05,F
0378:  MOVF   00,W
0379:  MOVLB  01
037A:  MOVWF  23
037B:  MOVWF  24
037C:  MOVLB  00
037D:  CALL   278
....................             delay_ms(150); 
037E:  MOVLW  96
037F:  MOVLB  01
0380:  MOVWF  25
0381:  MOVLB  00
0382:  CALL   178
....................          } 
0383:  INCF   29,F
0384:  GOTO   36D
....................       delay_ms(2000); 
0385:  MOVLW  08
0386:  MOVLB  01
0387:  MOVWF  23
0388:  MOVLW  FA
0389:  MOVWF  25
038A:  MOVLB  00
038B:  CALL   178
038C:  MOVLB  01
038D:  DECFSZ 23,F
038E:  GOTO   388
....................       for(i=0;i<=sizeof(logo)-2;i++) 
038F:  MOVLB  00
0390:  CLRF   29
0391:  MOVF   29,W
0392:  SUBLW  19
0393:  BTFSS  03.0
0394:  GOTO   3A9
....................          { 
....................             lcd_putc(logo[i]); 
0395:  MOVLW  38
0396:  ADDWF  29,W
0397:  MOVWF  04
0398:  MOVLW  20
0399:  MOVWF  05
039A:  BTFSC  03.0
039B:  INCF   05,F
039C:  MOVF   00,W
039D:  MOVLB  01
039E:  MOVWF  23
039F:  MOVWF  24
03A0:  MOVLB  00
03A1:  CALL   278
....................             delay_ms(100); 
03A2:  MOVLW  64
03A3:  MOVLB  01
03A4:  MOVWF  25
03A5:  MOVLB  00
03A6:  CALL   178
....................          } 
03A7:  INCF   29,F
03A8:  GOTO   391
....................       delay_ms(2000); 
03A9:  MOVLW  08
03AA:  MOVLB  01
03AB:  MOVWF  23
03AC:  MOVLW  FA
03AD:  MOVWF  25
03AE:  MOVLB  00
03AF:  CALL   178
03B0:  MOVLB  01
03B1:  DECFSZ 23,F
03B2:  GOTO   3AC
....................    } 
03B3:  MOVLP  00
03B4:  MOVLB  00
03B5:  GOTO   56D (RETURN)
....................  

Configuration Fuses:
   Word  1: 3F84   INTRC_IO NOWDT PUT NOMCLR NOPROTECT BROWNOUT NOCLKOUT IESO FCMEN
   Word  2: 1FFF   NOWRT STVREN BORV19 NOLPBOR NODEBUG NOLVP
