CCS PCM C Compiler, Version 5.025, 5967               22-рту-15 23:00

               Filename:   D:\Projects\Start Button\Proteus Soti\main(4).lst

               ROM used:   389 words (19%)
                           Largest free fragment is 1659
               RAM used:   11 (5%) at main() level
                           13 (6%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0B1
0003:  NOP
.................... #include <16f628A.h> 
.................... //////////// Standard Header file for the PIC16F628A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F628A 
....................  
.................... #list 
....................  
.................... #fuses INTRC_IO, NOWDT, NOMCLR, NOPROTECT 
.................... #device *=16 
.................... #use delay(clock=4M) 
*
0047:  MOVLW  27
0048:  MOVWF  04
0049:  BCF    03.7
004A:  MOVF   00,W
004B:  BTFSC  03.2
004C:  GOTO   05B
004D:  MOVLW  01
004E:  MOVWF  78
004F:  CLRF   77
0050:  DECFSZ 77,F
0051:  GOTO   050
0052:  DECFSZ 78,F
0053:  GOTO   04F
0054:  MOVLW  4A
0055:  MOVWF  77
0056:  DECFSZ 77,F
0057:  GOTO   056
0058:  GOTO   059
0059:  DECFSZ 00,F
005A:  GOTO   04D
005B:  RETURN
.................... #use rs232(baud=9600, rcv=PIN_B0) 
*
0022:  BSF    03.5
0023:  BSF    06.0
0024:  BCF    03.5
0025:  BTFSC  06.0
0026:  GOTO   025
0027:  MOVLW  08
0028:  MOVWF  77
0029:  CLRF   26
002A:  BSF    77.7
002B:  GOTO   03A
002C:  BCF    77.7
002D:  GOTO   03A
002E:  BCF    03.0
002F:  BTFSC  06.0
0030:  BSF    03.0
0031:  RRF    26,F
0032:  BSF    77.6
0033:  GOTO   03A
0034:  BCF    77.6
0035:  DECFSZ 77,F
0036:  GOTO   02E
0037:  MOVF   26,W
0038:  MOVWF  78
0039:  GOTO   046
003A:  MOVLW  1C
003B:  BTFSC  77.7
003C:  MOVLW  07
003D:  MOVWF  78
003E:  DECFSZ 78,F
003F:  GOTO   03E
0040:  NOP
0041:  BTFSC  77.7
0042:  GOTO   02C
0043:  BTFSC  77.6
0044:  GOTO   034
0045:  GOTO   02E
0046:  GOTO   0CF (RETURN)
....................  
.................... #define CONTACT_LED  PIN_A7 
.................... #define STARTER_LED  PIN_A6 
....................  
.................... #define IMMO         PIN_B0 
.................... #define BUTTON       PIN_B5 
....................  
.................... #define IGN1         PIN_A1 
.................... #define IGN2         PIN_A0 
.................... #define ACC          PIN_B6 
.................... #define STARTER      PIN_B7 
....................  
.................... #define BREAKS       PIN_B3 
.................... #define DINAMO       PIN_B2 
.................... #byte OPTION =       0x181 
.................... //#define OPTION       (*((unsigned char *) 0x181)) 
....................  
.................... #define BUTTON_ON    (!(input(BUTTON)))  
.................... #define IMMO_IN      (input(IMMO)) 
.................... #define BREAKS_ON    (input(BREAKS)) 
.................... #define DINAMO_ON    (input(DINAMO)) 
....................  
.................... #define AFTER_PRESS  45 
.................... #define DEBOUNCE     20 
....................  
.................... char immo_check = 'c'; 
.................... int run = 0; 
.................... int button_press = 0; 
.................... int count = 0; 
.................... int pr_once = 0; 
....................  
.................... void chip_init(void); 
.................... void state_1(void); 
.................... void state_2(void); 
.................... void state_3(void); 
.................... void state_4(void); 
.................... void state_5(void); 
....................  
....................  
.................... void main() 
*
00B1:  MOVF   03,W
00B2:  ANDLW  1F
00B3:  MOVWF  03
00B4:  BSF    03.5
00B5:  BSF    0E.3
00B6:  BCF    05.0
00B7:  BCF    03.5
00B8:  BSF    05.0
00B9:  MOVLW  63
00BA:  MOVWF  20
00BB:  CLRF   21
00BC:  CLRF   22
00BD:  CLRF   23
00BE:  CLRF   24
00BF:  MOVLW  07
00C0:  MOVWF  1F
00C1:  BCF    03.7
.................... { 
....................    set_rtcc(0); 
00C2:  CLRF   01
....................    setup_counters(RTCC_INTERNAL, RTCC_DIV_256);  
00C3:  BSF    03.5
00C4:  MOVF   01,W
00C5:  ANDLW  C0
00C6:  IORLW  07
00C7:  MOVWF  01
00C8:  CLRWDT
....................    enable_interrupts(INT_RTCC);  
00C9:  BCF    03.5
00CA:  BSF    0B.5
....................    enable_interrupts(GLOBAL);  
00CB:  MOVLW  C0
00CC:  IORWF  0B,F
....................    chip_init(); 
00CD:  CALL   004
....................    while(TRUE){ 
....................       char flash_char = getchar(); 
00CE:  GOTO   022
00CF:  MOVF   78,W
00D0:  MOVWF  25
....................       if(flash_char == immo_check){ 
00D1:  MOVF   20,W
00D2:  SUBWF  25,W
00D3:  BTFSS  03.2
00D4:  GOTO   0D7
....................          run = 1; 
00D5:  MOVLW  01
00D6:  MOVWF  21
....................       } 
....................       while(run == 1) 
00D7:  DECFSZ 21,W
00D8:  GOTO   183
....................       { 
....................          output_high(CONTACT_LED); 
00D9:  BSF    03.5
00DA:  BCF    05.7
00DB:  BCF    03.5
00DC:  BSF    05.7
....................          delay_ms(20); 
00DD:  MOVLW  14
00DE:  MOVWF  27
00DF:  CALL   047
....................          if(BUTTON_ON && (button_press == 0)){ 
00E0:  BSF    03.5
00E1:  BSF    06.5
00E2:  BCF    03.5
00E3:  BTFSC  06.5
00E4:  GOTO   0F1
00E5:  MOVF   22,F
00E6:  BTFSS  03.2
00E7:  GOTO   0F1
....................             delay_ms(DEBOUNCE); 
00E8:  MOVLW  14
00E9:  MOVWF  27
00EA:  CALL   047
....................             state_1(); 
00EB:  GOTO   05C
....................             button_press = 1; 
00EC:  MOVLW  01
00ED:  MOVWF  22
....................             delay_ms(AFTER_PRESS); 
00EE:  MOVLW  2D
00EF:  MOVWF  27
00F0:  CALL   047
....................          } 
....................          if(BUTTON_ON && (button_press == 1)){ 
00F1:  BSF    03.5
00F2:  BSF    06.5
00F3:  BCF    03.5
00F4:  BTFSC  06.5
00F5:  GOTO   101
00F6:  DECFSZ 22,W
00F7:  GOTO   101
....................             delay_ms(DEBOUNCE); 
00F8:  MOVLW  14
00F9:  MOVWF  27
00FA:  CALL   047
....................             state_2(); 
00FB:  GOTO   06D
....................             button_press = 2; 
00FC:  MOVLW  02
00FD:  MOVWF  22
....................             delay_ms(AFTER_PRESS); 
00FE:  MOVLW  2D
00FF:  MOVWF  27
0100:  CALL   047
....................          } 
....................          if(BUTTON_ON && (button_press == 2) && (!(BREAKS_ON))){ 
0101:  BSF    03.5
0102:  BSF    06.5
0103:  BCF    03.5
0104:  BTFSC  06.5
0105:  GOTO   118
0106:  MOVF   22,W
0107:  SUBLW  02
0108:  BTFSS  03.2
0109:  GOTO   118
010A:  BSF    03.5
010B:  BSF    06.3
010C:  BCF    03.5
010D:  BTFSC  06.3
010E:  GOTO   118
....................             delay_ms(DEBOUNCE); 
010F:  MOVLW  14
0110:  MOVWF  27
0111:  CALL   047
....................             state_3(); 
0112:  GOTO   07E
....................             button_press = 3; 
0113:  MOVLW  03
0114:  MOVWF  22
....................             delay_ms(AFTER_PRESS); 
0115:  MOVLW  2D
0116:  MOVWF  27
0117:  CALL   047
....................          } 
....................          while((!(DINAMO_ON)) && button_press >= 3){ 
0118:  BSF    03.5
0119:  BSF    06.2
011A:  BCF    03.5
011B:  BTFSC  06.2
011C:  GOTO   16D
011D:  MOVF   22,W
011E:  SUBLW  02
011F:  BTFSC  03.0
0120:  GOTO   16D
....................             button_press = 3; 
0121:  MOVLW  03
0122:  MOVWF  22
....................             if(BUTTON_ON && (button_press == 3) && BREAKS_ON && pr_once == 0){ 
0123:  BSF    03.5
0124:  BSF    06.5
0125:  BCF    03.5
0126:  BTFSC  06.5
0127:  GOTO   154
0128:  MOVF   22,W
0129:  SUBLW  03
012A:  BTFSS  03.2
012B:  GOTO   154
012C:  BSF    03.5
012D:  BSF    06.3
012E:  BCF    03.5
012F:  BTFSS  06.3
0130:  GOTO   154
0131:  MOVF   24,F
0132:  BTFSS  03.2
0133:  GOTO   154
....................                delay_ms(DEBOUNCE); 
0134:  MOVLW  14
0135:  MOVWF  27
0136:  CALL   047
....................                state_4(); 
0137:  CALL   08F
....................                button_press = 4; 
0138:  MOVLW  04
0139:  MOVWF  22
....................                delay_ms(550); 
013A:  MOVLW  05
013B:  MOVWF  26
013C:  MOVLW  6E
013D:  MOVWF  27
013E:  CALL   047
013F:  DECFSZ 26,F
0140:  GOTO   13C
....................                set_rtcc(0); 
0141:  CLRF   01
....................                count = 0; 
0142:  CLRF   23
....................                while(BUTTON_ON || count < 18){ 
0143:  BSF    03.5
0144:  BSF    06.5
0145:  BCF    03.5
0146:  BTFSS  06.5
0147:  GOTO   14C
0148:  MOVF   23,W
0149:  SUBLW  11
014A:  BTFSS  03.0
014B:  GOTO   14E
....................                   state_5(); 
014C:  CALL   0A0
014D:  GOTO   143
....................                } 
....................                state_4(); 
014E:  CALL   08F
....................                pr_once = 1; 
014F:  MOVLW  01
0150:  MOVWF  24
....................                delay_ms(AFTER_PRESS); 
0151:  MOVLW  2D
0152:  MOVWF  27
0153:  CALL   047
....................             } 
....................             if(BUTTON_ON && (button_press == 3) && BREAKS_ON && pr_once == 1){ 
0154:  BSF    03.5
0155:  BSF    06.5
0156:  BCF    03.5
0157:  BTFSC  06.5
0158:  GOTO   16C
0159:  MOVF   22,W
015A:  SUBLW  03
015B:  BTFSS  03.2
015C:  GOTO   16C
015D:  BSF    03.5
015E:  BSF    06.3
015F:  BCF    03.5
0160:  BTFSS  06.3
0161:  GOTO   16C
0162:  DECFSZ 24,W
0163:  GOTO   16C
....................                while(BUTTON_ON){ 
0164:  BSF    03.5
0165:  BSF    06.5
0166:  BCF    03.5
0167:  BTFSC  06.5
0168:  GOTO   16B
....................                   state_5(); 
0169:  CALL   0A0
016A:  GOTO   164
....................                } 
....................                state_4(); 
016B:  CALL   08F
....................             } 
016C:  GOTO   118
....................          } 
....................          if(BUTTON_ON && (button_press >= 3) && BREAKS_ON){ 
016D:  BSF    03.5
016E:  BSF    06.5
016F:  BCF    03.5
0170:  BTFSC  06.5
0171:  GOTO   182
0172:  MOVF   22,W
0173:  SUBLW  02
0174:  BTFSC  03.0
0175:  GOTO   182
0176:  BSF    03.5
0177:  BSF    06.3
0178:  BCF    03.5
0179:  BTFSS  06.3
017A:  GOTO   182
....................             chip_init(); 
017B:  CALL   004
....................             run = 0; 
017C:  CLRF   21
....................             pr_once = 0; 
017D:  CLRF   24
....................             button_press = 0; 
017E:  CLRF   22
....................             delay_ms(100); 
017F:  MOVLW  64
0180:  MOVWF  27
0181:  CALL   047
....................          } 
0182:  GOTO   0D7
....................       } 
0183:  GOTO   0CE
....................    } 
.................... } 
....................  
0184:  SLEEP
.................... void chip_init(void) 
.................... { 
....................    output_low(STARTER); 
*
0004:  BSF    03.5
0005:  BCF    06.7
0006:  BCF    03.5
0007:  BCF    06.7
....................    output_low(IGN1); 
0008:  BSF    03.5
0009:  BCF    05.1
000A:  BCF    03.5
000B:  BCF    05.1
....................    output_low(IGN2); 
000C:  BSF    03.5
000D:  BCF    05.0
000E:  BCF    03.5
000F:  BCF    05.0
....................    output_low(ACC); 
0010:  BSF    03.5
0011:  BCF    06.6
0012:  BCF    03.5
0013:  BCF    06.6
....................    output_low(CONTACT_LED); 
0014:  BSF    03.5
0015:  BCF    05.7
0016:  BCF    03.5
0017:  BCF    05.7
....................    output_low(STARTER_LED); 
0018:  BSF    03.5
0019:  BCF    05.6
001A:  BCF    03.5
001B:  BCF    05.6
....................    OPTION &= (~(1 << 7)); 
001C:  BSF    03.5
001D:  BSF    03.6
001E:  BCF    01.7
001F:  BCF    03.5
0020:  BCF    03.6
0021:  RETURN
.................... } 
....................  
.................... void state_1(void) 
.................... { 
....................    output_high(ACC); 
*
005C:  BSF    03.5
005D:  BCF    06.6
005E:  BCF    03.5
005F:  BSF    06.6
....................    output_low(IGN1); 
0060:  BSF    03.5
0061:  BCF    05.1
0062:  BCF    03.5
0063:  BCF    05.1
....................    output_low(IGN2); 
0064:  BSF    03.5
0065:  BCF    05.0
0066:  BCF    03.5
0067:  BCF    05.0
....................    output_low(STARTER); 
0068:  BSF    03.5
0069:  BCF    06.7
006A:  BCF    03.5
006B:  BCF    06.7
006C:  GOTO   0EC (RETURN)
.................... } 
....................  
.................... void state_2(void) 
.................... { 
....................    output_high(ACC); 
006D:  BSF    03.5
006E:  BCF    06.6
006F:  BCF    03.5
0070:  BSF    06.6
....................    output_high(IGN1); 
0071:  BSF    03.5
0072:  BCF    05.1
0073:  BCF    03.5
0074:  BSF    05.1
....................    output_high(IGN2); 
0075:  BSF    03.5
0076:  BCF    05.0
0077:  BCF    03.5
0078:  BSF    05.0
....................    output_low(STARTER); 
0079:  BSF    03.5
007A:  BCF    06.7
007B:  BCF    03.5
007C:  BCF    06.7
007D:  GOTO   0FC (RETURN)
.................... } 
....................  
.................... void state_3(void) 
.................... { 
....................    output_low(ACC); 
007E:  BSF    03.5
007F:  BCF    06.6
0080:  BCF    03.5
0081:  BCF    06.6
....................    output_low(IGN1); 
0082:  BSF    03.5
0083:  BCF    05.1
0084:  BCF    03.5
0085:  BCF    05.1
....................    output_low(IGN2); 
0086:  BSF    03.5
0087:  BCF    05.0
0088:  BCF    03.5
0089:  BCF    05.0
....................    output_low(STARTER); 
008A:  BSF    03.5
008B:  BCF    06.7
008C:  BCF    03.5
008D:  BCF    06.7
008E:  GOTO   113 (RETURN)
.................... } 
....................  
.................... void state_4(void) 
.................... { 
....................    output_high(ACC); 
008F:  BSF    03.5
0090:  BCF    06.6
0091:  BCF    03.5
0092:  BSF    06.6
....................    output_high(IGN1); 
0093:  BSF    03.5
0094:  BCF    05.1
0095:  BCF    03.5
0096:  BSF    05.1
....................    output_high(IGN2); 
0097:  BSF    03.5
0098:  BCF    05.0
0099:  BCF    03.5
009A:  BSF    05.0
....................    output_low(STARTER); 
009B:  BSF    03.5
009C:  BCF    06.7
009D:  BCF    03.5
009E:  BCF    06.7
009F:  RETURN
.................... } 
....................  
.................... void state_5(void) 
.................... { 
....................    output_high(ACC); 
00A0:  BSF    03.5
00A1:  BCF    06.6
00A2:  BCF    03.5
00A3:  BSF    06.6
....................    output_high(IGN1); 
00A4:  BSF    03.5
00A5:  BCF    05.1
00A6:  BCF    03.5
00A7:  BSF    05.1
....................    output_low(IGN2); 
00A8:  BSF    03.5
00A9:  BCF    05.0
00AA:  BCF    03.5
00AB:  BCF    05.0
....................    output_high(STARTER); 
00AC:  BSF    03.5
00AD:  BCF    06.7
00AE:  BCF    03.5
00AF:  BSF    06.7
00B0:  RETURN
.................... } 

Configuration Fuses:
   Word  1: 3F50   NOWDT PUT INTRC_IO NOMCLR BROWNOUT NOLVP NOCPD NOPROTECT
