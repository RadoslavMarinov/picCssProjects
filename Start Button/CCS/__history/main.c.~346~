#include <16f628A.h>
#include <stdint.h>
#fuses INTRC_IO, WDT, MCLR, NOPROTECT, BROWNOUT
#device *=16
#use delay(clock=4M)
#USE RS232 (UART1, BAUD=9600, STREAM=DEBUG_STREAM, ERRORS)
#byte OPTION = 0x181
#bit TRMT = getenv("BIT:TRMT")

#define DEBUG 

#include "start_button.c"

void ChipInit(void);
void GoSleep();

THREAD(ButtonTask)
{
   
}

THREAD(WakeUpTask)
{
   if(restart_cause() == WDT_FROM_SLEEP)
   {
      output_high(STARTER_LED);
      delay_ms(50);
      output_low(STARTER_LED);
   }
}

THREAD(ToggleStarterLed)
{
      output_toggle(STARTER_LED);
}


NEW_PROC(ToggleStarterLed);
NEW_PROC(WakeUpTask);

#INT_EXT
void ButtISR(void)
{
   PROC_POST(ToggleStarterLed);
}

#INT_TIMER2
void Tmr2Isr(void)
{
   SetSysTimer(++GetSysTimer());
}

void main(void)
{
int i;

ChipInit();
PROC_INIT(ToggleStarterLed);
PROC_INIT(WakeUpTask);

   while(TRUE)
   {

      
      for(i = 0; proc_list.p_proc[i] != 0; i++)
      {
         if(proc_list.p_proc[i] -> called == WAITING)
         {
            #IFDEF  DEBUG
               fprintf(DEBUG_STREAM, "%s\n", proc_list.p_proc[i] -> name);
               fprintf(DEBUG_STREAM, "Sys timer = %lu\n", (uint16_t) GetSysTimer());
               while(!TRMT)
                  ;
            #ENDIF
            proc_list.p_proc[i]->func();
            proc_list.p_proc[i]->called = IDLE;
         }
      }
    restart_wdt();
      
    
    //PROC_POST(WakeUpTask);
   }
}

void ChipInit(void)
{
   setup_oscillator(OSC_4MHZ);
   OPTION &= (~(1 << 7));
   StartButtonInit();
   SETUP_CCP1(CCP_OFF);
   ext_int_edge(0, H_TO_L);
   setup_timer_2(T2_DIV_BY_1, 255, 4);
   ENABLE_INTERRUPTS(INT_EXT_H2L);
   ENABLE_INTERRUPTS(INT_TIMER2);
   ENABLE_INTERRUPTS(GLOBAL);
   setup_wdt(WDT_2304MS);
  
}  

void GoSleep()
{
   set_tris_a(0xFF); 
   set_tris_b(0xFF);
   sleep();
}
