D G "__PCH__" 0 259 ""5.015""
D G "__DEVICE__" 0 259 "6760"
D G "__DATE__" 0 259 ""05-ώνθ-14""
D G "__TIME__" 0 259 ""16:33:40"" "ex14.c - Example 14 from the Embedded Internet/Embedded Ethernet tutorial"
D G "STACK_USE_PICDEM_LCD" 0 15 "1"
D G "STACK_USE_ICMP_SERVER" 0 17 ""
D G "STACK_USE_TCP" 0 18 ""
D G "TCP_CONFIGURATION" 0 21 "1" "tell TCPIPConfig.h to not include default TCPSocketInitializer[] array."
D G "TCP_ETH_RAM_SIZE" 0 23 "1280"
D G "STACK_USE_CCS_EWLWIFIB" 1 22 "0" "18f67k22 + mrf24wb0m"
D G "STACK_USE_CCS_EWLWIFIG" 1 23 "0" "18f67k22 + mrf24wg0m"
D G "STACK_USE_CCS_PICEEC" 1 24 "1" "18f67j60"
D G "STACK_USE_CCS_PICENS" 1 25 "0" "18f4620 + enc28j60"
D G "STACK_USE_PIC24FJGA110_ENC28" 1 26 "0" "explorer 16, PIC24FJ256GA110, ENC28J60.  unfortunately with this combinatin you cannot use ENC28J60 and 25LC256 at same time"
D G "STACK_USE_PIC24FJGA010_ENC28" 1 27 "0" "explorer 16, PIC24FJ128GA010, ENC28J60."
D G "STACK_USE_CCS_EWL5V_REV5" 1 28 "0" "ezWebLynx 5V (REV5), 18f67k22 + enc28j60"
D G "STACK_USE_CCS_EWL3V" 1 29 "0" "ezWebLynx 3V, 18f67j60"
D G "STACK_IS_CCS_EXAMPLE" 1 32 ""
D G "STACK_USE_WIFI" 1 47 "0"
D G "LCD_EXTENDED_NEWLINE" 1 50 "" "configuration for lcd.c driver/library"
c L "set_tris_a" 2 1 6 "FUNCTION"
v L "value" 2 38 "int8" `54 
f B "set_tris_a" 2 38 "void(int8 value)" `53 
v L "value" 2 39 "int8" `56 
f B "set_tris_b" 2 39 "void(int8 value)" `55 
v L "value" 2 40 "int8" `58 
f B "set_tris_c" 2 40 "void(int8 value)" `57 
v L "value" 2 41 "int8" `60 
f B "set_tris_d" 2 41 "void(int8 value)" `59 
v L "value" 2 42 "int8" `62 
f B "set_tris_e" 2 42 "void(int8 value)" `61 
v L "value" 2 43 "int8" `64 
f B "set_tris_f" 2 43 "void(int8 value)" `63 
v L "value" 2 44 "int8" `66 
f B "set_tris_g" 2 44 "void(int8 value)" `65 
f B "get_tris_a" 2 45 "int8()" `67 
f B "get_tris_b" 2 46 "int8()" `68 
f B "get_tris_c" 2 47 "int8()" `69 
f B "get_tris_d" 2 48 "int8()" `70 
f B "get_tris_e" 2 49 "int8()" `71 
f B "get_tris_f" 2 50 "int8()" `72 
f B "get_tris_g" 2 51 "int8()" `73 
v L "value" 2 52 "int8" `75 
f B "output_a" 2 52 "void(int8 value)" `74 
v L "value" 2 53 "int8" `77 
f B "output_b" 2 53 "void(int8 value)" `76 
v L "value" 2 54 "int8" `79 
f B "output_c" 2 54 "void(int8 value)" `78 
v L "value" 2 55 "int8" `81 
f B "output_d" 2 55 "void(int8 value)" `80 
v L "value" 2 56 "int8" `83 
f B "output_e" 2 56 "void(int8 value)" `82 
v L "value" 2 57 "int8" `85 
f B "output_f" 2 57 "void(int8 value)" `84 
v L "value" 2 58 "int8" `87 
f B "output_g" 2 58 "void(int8 value)" `86 
f B "input_a" 2 59 "int8()" `88 
f B "input_b" 2 60 "int8()" `89 
f B "input_c" 2 61 "int8()" `90 
f B "input_d" 2 62 "int8()" `91 
f B "input_e" 2 63 "int8()" `92 
f B "input_f" 2 64 "int8()" `93 
f B "input_g" 2 65 "int8()" `94 
f B "input_change_a" 2 66 "int8()" `95 
f B "input_change_b" 2 67 "int8()" `96 
f B "input_change_c" 2 68 "int8()" `97 
f B "input_change_d" 2 69 "int8()" `98 
f B "input_change_e" 2 70 "int8()" `99 
f B "input_change_f" 2 71 "int8()" `100 
f B "input_change_g" 2 72 "int8()" `101 
v L "pin" 2 73 "int16" `103 
f B "input" 2 73 "int8(int16 pin)" `102 
v L "pin" 2 74 "int16" `105 
f B "input_state" 2 74 "int8(int16 pin)" `104 
v L "pin" 2 75 "int16" `107 
f B "output_low" 2 75 "void(int16 pin)" `106 
v L "pin" 2 76 "int16" `109 
f B "output_high" 2 76 "void(int16 pin)" `108 
v L "pin" 2 77 "int16" `111 
f B "output_toggle" 2 77 "void(int16 pin)" `110 
v L "pin" 2 78 "int16" `113 
v L "level" 2 78 "int8" `114 
f B "output_bit" 2 78 "void(int16 pin,int8 level)" `112 
v L "pin" 2 79 "int16" `116 
f B "output_float" 2 79 "void(int16 pin)" `115 
v L "pin" 2 80 "int16" `118 
f B "output_drive" 2 80 "void(int16 pin)" `117  "Constants used to identify pins in the above are:"
d G "PIN_A0" 2 84 "31744"
d G "PIN_A1" 2 85 "31745"
d G "PIN_A2" 2 86 "31746"
d G "PIN_A3" 2 87 "31747"
d G "PIN_A4" 2 88 "31748"
d G "PIN_A5" 2 89 "31749"
d G "PIN_B0" 2 91 "31752"
d G "PIN_B1" 2 92 "31753"
d G "PIN_B2" 2 93 "31754"
d G "PIN_B3" 2 94 "31755"
d G "PIN_B4" 2 95 "31756"
d G "PIN_B5" 2 96 "31757"
d G "PIN_B6" 2 97 "31758"
d G "PIN_B7" 2 98 "31759"
d G "PIN_C0" 2 100 "31760"
d G "PIN_C1" 2 101 "31761"
d G "PIN_C2" 2 102 "31762"
d G "PIN_C3" 2 103 "31763"
d G "PIN_C4" 2 104 "31764"
d G "PIN_C5" 2 105 "31765"
d G "PIN_C6" 2 106 "31766"
d G "PIN_C7" 2 107 "31767"
d G "PIN_D0" 2 109 "31768"
d G "PIN_D1" 2 110 "31769"
d G "PIN_D2" 2 111 "31770"
d G "PIN_E0" 2 113 "31776"
d G "PIN_E1" 2 114 "31777"
d G "PIN_E2" 2 115 "31778"
d G "PIN_E3" 2 116 "31779"
d G "PIN_E4" 2 117 "31780"
d G "PIN_E5" 2 118 "31781"
d G "PIN_F1" 2 120 "31785"
d G "PIN_F2" 2 121 "31786"
d G "PIN_F3" 2 122 "31787"
d G "PIN_F4" 2 123 "31788"
d G "PIN_F5" 2 124 "31789"
d G "PIN_F6" 2 125 "31790"
d G "PIN_F7" 2 126 "31791"
d G "PIN_G4" 2 128 "31796"
d G "FALSE" 2 131 "0"
d G "TRUE" 2 132 "1"
d G "BYTE" 2 134 "int8"
d G "BOOLEAN" 2 135 "int1"
d G "getc" 2 137 "getch"
d G "fgetc" 2 138 "getch"
d G "getchar" 2 139 "getch"
d G "putc" 2 140 "putchar"
d G "fputc" 2 141 "putchar"
d G "fgets" 2 142 "gets"
d G "fputs" 2 143 "puts"
c L "output_drive" 2 1 3 "FUNCTION"
f B "restart_cause" 2 148 "int8()" `119 
f B "reset_cpu" 2 149 "void()" `120 
f B "sleep" 2 150 "void()" `121 
v L "type" 2 151 "int8" `123 
f G "sleep" 2 151 "void(int8 type)" `122  "Constants returned from RESTART_CAUSE() are:"
d G "WDT_TIMEOUT" 2 153 "7"
d G "MCLR_FROM_SLEEP" 2 154 "11"
d G "MCLR_FROM_RUN" 2 155 "15"
d G "NORMAL_POWER_UP" 2 156 "12"
d G "BROWNOUT_RESTART" 2 157 "14"
d G "WDT_FROM_SLEEP" 2 158 "3"
d G "RESET_INSTRUCTION" 2 159 "0"
d G "SLEEP_FULL" 2 162 "0" "Default"
d G "SLEEP_IDLE" 2 163 "1" "Clock and peripherals don't stop"
c L "sleep" 2 1 5 "FUNCTION"
v L "mode" 2 170 "int8" `125 
f B "setup_timer_0" 2 170 "void(int8 mode)" `124 
v L "value" 2 171 "int16" `127 
f B "set_timer0" 2 171 "void(int16 value)" `126 
f B "get_timer0" 2 172 "int16()" `128 
v L "mode" 2 173 "int8" `130 
v L "prescaler" 2 173 "int8" `131 
f B "setup_counters" 2 173 "void(int8 mode,int8 prescaler)" `129 
v L "value" 2 174 "int16" `133 
f B "set_rtcc" 2 174 "void(int16 value)" `132 
f B "get_rtcc" 2 175 "int16()" `134  "Constants used for SETUP_TIMER_0() are:"
d G "T0_INTERNAL" 2 177 "0"
d G "T0_EXT_L_TO_H" 2 178 "32"
d G "T0_EXT_H_TO_L" 2 179 "48"
d G "T0_DIV_1" 2 181 "8"
d G "T0_DIV_2" 2 182 "0"
d G "T0_DIV_4" 2 183 "1"
d G "T0_DIV_8" 2 184 "2"
d G "T0_DIV_16" 2 185 "3"
d G "T0_DIV_32" 2 186 "4"
d G "T0_DIV_64" 2 187 "5"
d G "T0_DIV_128" 2 188 "6"
d G "T0_DIV_256" 2 189 "7"
d G "T0_OFF" 2 191 "0x80"
d G "T0_8_BIT" 2 193 "0x40"
d G "RTCC_INTERNAL" 2 195 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 2 196 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 2 197 "48"
d G "RTCC_DIV_1" 2 198 "8"
d G "RTCC_DIV_2" 2 199 "0"
d G "RTCC_DIV_4" 2 200 "1"
d G "RTCC_DIV_8" 2 201 "2"
d G "RTCC_DIV_16" 2 202 "3"
d G "RTCC_DIV_32" 2 203 "4"
d G "RTCC_DIV_64" 2 204 "5"
d G "RTCC_DIV_128" 2 205 "6"
d G "RTCC_DIV_256" 2 206 "7"
d G "RTCC_OFF" 2 207 "0x80"
d G "RTCC_8_BIT" 2 208 "0x40"
c L "get_rtcc" 2 1 8 "FUNCTION"
v L "mode" 2 219 "int16" `136 
f B "setup_wdt" 2 219 "void(int16 mode)" `135 
f B "restart_wdt" 2 220 "void()" `137  "Constants used for SETUP_WDT() are:"
d G "WDT_ON" 2 222 "0x100"
d G "WDT_OFF" 2 223 "0"
d G "WDT_4MS" 2 225 "0x300"
d G "WDT_8MS" 2 226 "0x500"
d G "WDT_16MS" 2 227 "0x700"
d G "WDT_32MS" 2 228 "0x900"
d G "WDT_64MS" 2 229 "0xB00"
d G "WDT_128MS" 2 230 "0xD00"
d G "WDT_256MS" 2 231 "0xF00"
d G "WDT_512MS" 2 232 "0x1100"
d G "WDT_1S" 2 233 "0x1300"
d G "WDT_2S" 2 234 "0x1500"
d G "WDT_4S" 2 235 "0x1700"
d G "WDT_8S" 2 236 "0x1900"
d G "WDT_16" 2 237 "0x1B00"
d G "WDT_32S" 2 238 "0x1D00"
d G "WDT_64S" 2 239 "0x1F00"
d G "WDT_128S" 2 240 "0x2100"
c L "restart_wdt" 2 1 3 "FUNCTION"
v L "mode" 2 246 "int16" `139 
f B "setup_timer_1" 2 246 "void(int16 mode)" `138 
f B "get_timer1" 2 247 "int16()" `140 
v L "value" 2 248 "int16" `142 
f B "set_timer1" 2 248 "void(int16 value)" `141  "Constants used for SETUP_TIMER_1() are:"
d G "T1_DISABLED" 2 251 "0"
d G "T1_INTERNAL" 2 252 "0x81"
d G "T1_EXTERNAL" 2 253 "0x87"
d G "T1_EXTERNAL_SYNC" 2 254 "0x83"
d G "T1_CLK_OUT" 2 256 "8"
d G "T1_DIV_BY_1" 2 258 "0"
d G "T1_DIV_BY_2" 2 259 "0x10"
d G "T1_DIV_BY_4" 2 260 "0x20"
d G "T1_DIV_BY_8" 2 261 "0x30"
c L "set_timer1" 2 1 3 "FUNCTION"
v L "mode" 2 266 "int8" `144 
v L "period" 2 266 "int8" `145 
v L "postscale" 2 266 "int8" `146 
f B "setup_timer_2" 2 266 "void(int8 mode,int8 period,int8 postscale)" `143 
f B "get_timer2" 2 267 "int8()" `147 
v L "value" 2 268 "int8" `149 
f B "set_timer2" 2 268 "void(int8 value)" `148  "Constants used for SETUP_TIMER_2() are:"
d G "T2_DISABLED" 2 270 "0"
d G "T2_DIV_BY_1" 2 271 "4"
d G "T2_DIV_BY_4" 2 272 "5"
d G "T2_DIV_BY_16" 2 273 "6"
c L "set_timer2" 2 1 3 "FUNCTION"
v L "mode" 2 278 "int16" `151 
f B "setup_timer_3" 2 278 "void(int16 mode)" `150 
f B "get_timer3" 2 279 "int16()" `152 
v L "value" 2 280 "int16" `154 
f B "set_timer3" 2 280 "void(int16 value)" `153  "Constants used for SETUP_TIMER_3() are:"
d G "T3_DISABLED" 2 283 "0"
d G "T3_INTERNAL" 2 284 "0x85"
d G "T3_EXTERNAL" 2 285 "0x87"
d G "T3_EXTERNAL_SYNC" 2 286 "0x83"
d G "T3_DIV_BY_1" 2 288 "0"
d G "T3_DIV_BY_2" 2 289 "0x10"
d G "T3_DIV_BY_4" 2 290 "0x20"
d G "T3_DIV_BY_8" 2 291 "0x30"
c L "set_timer3" 2 1 3 "FUNCTION"
v L "mode" 2 296 "int16" `156 
v L "period" 2 296 "int8" `157 
v L "postscaler" 2 296 "int8" `158 
f B "setup_timer_4" 2 296 "void(int16 mode,int8 period,int8 postscaler)" `155 
f B "get_timer4" 2 297 "int8()" `159 
v L "value" 2 298 "int8" `161 
f B "set_timer4" 2 298 "void(int8 value)" `160  "Constants used for SETUP_TIMER_4() are:"
d G "T4_DISABLED" 2 300 "0"
d G "T4_DIV_BY_1" 2 301 "4"
d G "T4_DIV_BY_4" 2 302 "5"
d G "T4_DIV_BY_16" 2 303 "6"
c L "set_timer4" 2 1 4 "FUNCTION"
v L "mode" 2 309 "int32" `163 
f B "setup_ccp1" 2 309 "void(int32 mode)" `162 
v L "mode" 2 310 "int32" `165 
v L "pwm" 2 310 "int8" `166 
f G "setup_ccp1" 2 310 "void(int32 mode,int8 pwm)" `164 
v L "value" 2 311 "int16" `168 
f B "set_pwm1_duty" 2 311 "void(int16 value)" `167  "Constants used for SETUP_CCPx() are:"
d G "CCP_OFF" 2 313 "0"
d G "CCP_CAPTURE_FE" 2 314 "4"
d G "CCP_CAPTURE_RE" 2 315 "5"
d G "CCP_CAPTURE_DIV_4" 2 316 "6"
d G "CCP_CAPTURE_DIV_16" 2 317 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 318 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 319 "9"
d G "CCP_COMPARE_INT" 2 320 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 321 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 2 322 "0xB"
d G "CCP_PWM" 2 323 "0xC"
d G "CCP_PWM_PLUS_1" 2 324 "0x1c"
d G "CCP_PWM_PLUS_2" 2 325 "0x2c"
d G "CCP_PWM_PLUS_3" 2 326 "0x3c"
c L "set_pwm1_duty" 2 1 1 "FUNCTION"
d G "T3_CCP1_TO_5" 2 332 "0x48"
d G "T3_CCP2_TO_5" 2 333 "0x8"
d G "T3_CCP3_TO_5" 2 334 "0x40"
d G "CCP_PWM_H_H" 2 337 "0x0c"
d G "CCP_PWM_H_L" 2 338 "0x0d"
d G "CCP_PWM_L_H" 2 339 "0x0e"
d G "CCP_PWM_L_L" 2 340 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 2 342 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 2 343 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 2 344 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 2 346 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 2 347 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 2 348 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 2 349 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 2 350 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 2 351 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 2 352 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 2 354 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 2 355 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 2 356 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 2 358 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 2 359 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 2 360 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 2 362 "0x80000000"
c L "set_pwm1_duty" 2 1 1 "FUNCTION"
v L "mode" 2 366 "int32" `173 
f B "setup_ccp2" 2 366 "void(int32 mode)" `172 
v L "mode" 2 367 "int32" `175 
v L "pwm" 2 367 "int8" `176 
f G "setup_ccp2" 2 367 "void(int32 mode,int8 pwm)" `174 
v L "value" 2 368 "int16" `178 
f B "set_pwm2_duty" 2 368 "void(int16 value)" `177 
c L "set_pwm2_duty" 2 1 1 "FUNCTION"
v L "mode" 2 374 "int32" `183 
f B "setup_ccp3" 2 374 "void(int32 mode)" `182 
v L "mode" 2 375 "int32" `185 
v L "pwm" 2 375 "int8" `186 
f G "setup_ccp3" 2 375 "void(int32 mode,int8 pwm)" `184 
v L "value" 2 376 "int16" `188 
f B "set_pwm3_duty" 2 376 "void(int16 value)" `187 
c L "set_pwm3_duty" 2 1 1 "FUNCTION"
v L "mode" 2 382 "int32" `193 
f B "setup_ccp4" 2 382 "void(int32 mode)" `192 
v L "mode" 2 383 "int32" `195 
v L "pwm" 2 383 "int8" `196 
f G "setup_ccp4" 2 383 "void(int32 mode,int8 pwm)" `194 
v L "value" 2 384 "int16" `198 
f B "set_pwm4_duty" 2 384 "void(int16 value)" `197 
c L "set_pwm4_duty" 2 1 1 "FUNCTION"
v L "mode" 2 390 "int32" `203 
f B "setup_ccp5" 2 390 "void(int32 mode)" `202 
v L "mode" 2 391 "int32" `205 
v L "pwm" 2 391 "int8" `206 
f G "setup_ccp5" 2 391 "void(int32 mode,int8 pwm)" `204 
v L "value" 2 392 "int16" `208 
f B "set_pwm5_duty" 2 392 "void(int16 value)" `207 
c L "set_pwm5_duty" 2 1 3 "FUNCTION"
v L "mode" 2 399 "int32" `213 
f B "setup_spi" 2 399 "void(int32 mode)" `212 
v L "value" 2 400 "int8" `215 
f B "spi_write" 2 400 "void(int8 value)" `214 
f B "spi_read" 2 401 "int8()" `216 
v L "value" 2 402 "int8" `218 
f G "spi_read" 2 402 "int8(int8 value)" `217 
f B "spi_data_in" 2 403 "int8()" `219 
v L "mode" 2 404 "int32" `221 
f B "setup_spi2" 2 404 "void(int32 mode)" `220 
v L "value" 2 405 "int8" `223 
f B "spi_write2" 2 405 "void(int8 value)" `222 
f B "spi_read2" 2 406 "int8()" `224 
v L "value" 2 407 "int8" `226 
f G "spi_read2" 2 407 "int8(int8 value)" `225 
f B "spi_data_in2" 2 408 "int8()" `227  "Constants used in SETUP_SPI() are:"
d G "SPI_DISABLED" 2 410 "0x00"
d G "SPI_MASTER" 2 411 "0x20"
d G "SPI_SLAVE" 2 412 "0x24"
d G "SPI_SCK_IDLE_HIGH" 2 413 "0x10"
d G "SPI_SCK_IDLE_LOW" 2 414 "0x00"
d G "SPI_CLK_DIV_4" 2 415 "0x00"
d G "SPI_CLK_DIV_16" 2 416 "0x01"
d G "SPI_CLK_DIV_64" 2 417 "0x02"
d G "SPI_CLK_T2" 2 418 "0x03"
d G "SPI_SS_DISABLED" 2 419 "0x01"
d G "SPI_XMIT_L_TO_H" 2 421 "0x4000"
d G "SPI_XMIT_H_TO_L" 2 422 "0x0000"
d G "SPI_SAMPLE_AT_MIDDLE" 2 424 "0x0000"
d G "SPI_SAMPLE_AT_END" 2 425 "0x8000"
d G "SPI_L_TO_H" 2 428 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 2 429 "SPI_SCK_IDLE_HIGH"
c L "spi_data_in2" 2 1 2 "FUNCTION"
v L "baud" 2 433 "int32" `229 
f B "setup_uart" 2 433 "void(int32 baud)" `228 
v L "baud" 2 434 "int32" `231 
v L "stream" 2 434 "int8" `232 
f G "setup_uart" 2 434 "void(int32 baud,int8 stream)" `230 
v L "baud" 2 435 "int32" `234 
v L "stream" 2 435 "int8" `235 
v L "clock" 2 435 "int32" `236 
f G "setup_uart" 2 435 "void(int32 baud,int8 stream,int32 clock)" `233 
v L "baud" 2 436 "int32" `238 
f B "set_uart_speed" 2 436 "void(int32 baud)" `237 
v L "baud" 2 437 "int32" `240 
v L "stream" 2 437 "int8" `241 
f G "set_uart_speed" 2 437 "void(int32 baud,int8 stream)" `239 
v L "baud" 2 438 "int32" `243 
v L "stream" 2 438 "int8" `244 
v L "clock" 2 438 "int32" `245 
f G "set_uart_speed" 2 438 "void(int32 baud,int8 stream,int32 clock)" `242  "Constants used in setup_uart() are:"
d G "UART_ADDRESS" 2 442 "2"
d G "UART_DATA" 2 443 "4"
d G "UART_AUTODETECT" 2 444 "8"
d G "UART_AUTODETECT_NOWAIT" 2 445 "9"
d G "UART_WAKEUP_ON_RDA" 2 446 "10"
d G "UART_SEND_BREAK" 2 447 "13"
c L "set_uart_speed" 2 1 3 "FUNCTION"
v L "mode" 2 451 "int32" `247 
f B "setup_comparator" 2 451 "void(int32 mode)" `246  "Constants used in setup_comparator() are:"
d G "F6_F5_F4_F5" 2 453 "0x70ff04"
d G "F6_F5_F4_F3_OUT_ON_F2_F1" 2 454 "0x78F903"
d G "F6_F5_F4_F5_OUT_ON_F2_F1" 2 455 "0x70F905"
d G "NC_NC_NC_NC" 2 456 "0x00ff07"
d G "F6_F5_F4_F3" 2 457 "0x78ff02"
d G "F6_F5_NC_NC_OUT_ON_F2" 2 458 "0x60FB01"
d G "F6_VR_F4_VR" 2 459 "0x50ff06"
d G "F5_VR_F3_VR" 2 460 "0x28ff0e"
c L "setup_comparator" 2 1 2 "FUNCTION"
v L "mode" 2 467 "int8" `251 
f B "setup_vref" 2 467 "void(int8 mode)" `250  "Constants used in setup_vref() are:"
d G "VREF_LOW" 2 469 "0xa0"
d G "VREF_HIGH" 2 470 "0x80"
d G "VREF_F5" 2 472 "0x40"
d G "VREF_COMP" 2 473 "0x10"
c L "setup_vref" 2 1 2 "FUNCTION"
v L "mode" 2 478 "int8" `253 
f B "setup_oscillator" 2 478 "int8(int8 mode)" `252  "Constants used in setup_oscillator() are:"
d G "OSC_PLL_5_DIV_2" 2 480 "0x5000"
d G "OSC_PLL_5_DIV_3" 2 481 "0x4000"
d G "OSC_PLL_5_DIV_4" 2 482 "0xF000"
d G "OSC_PLL_5_DIV_6" 2 483 "0x7000"
d G "OSC_PLL_5_DIV_9" 2 484 "0x6000"
d G "OSC_INTRC" 2 485 "3"
d G "OSC_NORMAL" 2 486 "2"
d G "OSC_TIMER1" 2 487 "1"
d G "OSC_IDLE_ON_SLEEP" 2 488 "0x80"
d G "OSC_STATE_EXT_RUNNING" 2 490 "8"
c L "setup_oscillator" 2 1 4 "FUNCTION"
v L "mode" 2 497 "int16" `255 
f B "setup_adc" 2 497 "void(int16 mode)" `254 
f B "read_adc" 2 498 "int8()" `256 
v L "mode" 2 499 "int8" `258 
f G "read_adc" 2 499 "int8(int8 mode)" `257 
f G "read_adc" 2 500 "int16()" `259 
v L "mode" 2 501 "int8" `261 
f G "read_adc" 2 501 "int16(int8 mode)" `260 
f B "adc_done" 2 502 "int8()" `262  "Constants used for SETUP_ADC() are:"
d G "ADC_OFF" 2 504 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 505 "0x100"
d G "ADC_CLOCK_DIV_4" 2 506 "0x04"
d G "ADC_CLOCK_DIV_8" 2 507 "0x01"
d G "ADC_CLOCK_DIV_16" 2 508 "0x05"
d G "ADC_CLOCK_DIV_32" 2 509 "0x02"
d G "ADC_CLOCK_DIV_64" 2 510 "0x06"
d G "ADC_CLOCK_INTERNAL" 2 511 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 2 513 "0x00"
d G "ADC_TAD_MUL_2" 2 514 "0x08"
d G "ADC_TAD_MUL_4" 2 515 "0x10"
d G "ADC_TAD_MUL_6" 2 516 "0x18"
d G "ADC_TAD_MUL_8" 2 517 "0x20"
d G "ADC_TAD_MUL_12" 2 518 "0x28"
d G "ADC_TAD_MUL_16" 2 519 "0x30"
d G "ADC_TAD_MUL_20" 2 520 "0x38"
c L "adc_done" 2 1 1 "FUNCTION"
v L "pins" 2 523 "int8" `264 
f B "setup_adc_ports" 2 523 "void(int8 pins)" `263 
v L "pins" 2 524 "int8" `266 
v L "reference" 2 524 "int8" `267 
f G "setup_adc_ports" 2 524 "void(int8 pins,int8 reference)" `265 
v L "channel" 2 525 "int8" `269 
f B "set_adc_channel" 2 525 "void(int8 channel)" `268  "Constants used in SETUP_ADC_PORTS() are:"
d G "NO_ANALOGS" 2 528 "0x0F" "None"
d G "ALL_ANALOG" 2 529 "0x00" "A0 A1 A2 A3 A5 F1 F2 F3 F4 F5 F6 H4 H5 H6 H7"
d G "AN0_TO_AN13" 2 530 "0x01" "A0 A1 A2 A3 A5 F1 F2 F3 F4 F5 F6 H4 H5"
d G "AN0_TO_AN12" 2 531 "0x02" "A0 A1 A2 A3 A5 F1 F2 F3 F4 F5 F6 H4"
d G "AN0_TO_AN11" 2 532 "0x03" "A0 A1 A2 A3 A5 F1 F2 F3 F4 F5 F6"
d G "AN0_TO_AN10" 2 533 "0x04" "A0 A1 A2 A3 A5 F1 F2 F3 F4 F5"
d G "AN0_TO_AN9" 2 534 "0x05" "A0 A1 A2 A3 A5 F1 F2 F3 F4"
d G "AN0_TO_AN8" 2 535 "0x06" "A0 A1 A2 A3 A5 F1 F2 F3"
d G "AN0_TO_AN7" 2 536 "0x07" "A0 A1 A2 A3 A5 F1 F2"
d G "AN0_TO_AN6" 2 537 "0x08" "A0 A1 A2 A3 A5 F1"
d G "AN0_TO_AN5" 2 538 "0x09" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN4" 2 539 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 2 540 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 2 541 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 2 542 "0x0D" "A0 A1"
d G "AN0" 2 543 "0x0E" "A0"
d G "VSS_VDD" 2 546 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 2 547 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 2 548 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 2 549 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 2 552 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 553 "1"
d G "ADC_READ_ONLY" 2 554 "6"
c L "set_adc_channel" 2 1 3 "FUNCTION"
v L "x" 2 560 "sint8" `271 
f B "abs" 2 560 "sint8(sint8 x)" `270 
v L "x" 2 561 "sint16" `273 
f G "abs" 2 561 "sint16(sint16 x)" `272 
v L "x" 2 562 "sint32" `275 
f G "abs" 2 562 "sint32(sint32 x)" `274 
v L "x" 2 563 "float" `277 
f G "abs" 2 563 "float(float x)" `276 
v L "??65535" 2 564 "int8" `279 
v L "??65535" 2 564 "int8" `280 
f B "_mul" 2 564 "int16(int8 ,int8 )" `278 
v L "??65535" 2 565 "sint8" `279 
v L "??65535" 2 565 "sint8" `283 
f G "_mul" 2 565 "sint16(sint8 ,sint8 )" `281 
v L "??65535" 2 566 "int16" `279 
v L "??65535" 2 566 "int16" `286 
f G "_mul" 2 566 "int32(int16 ,int16 )" `284 
v L "??65535" 2 567 "sint16" `279 
v L "??65535" 2 567 "sint16" `289 
f G "_mul" 2 567 "sint32(sint16 ,sint16 )" `287  "Memory Manipulation Prototypes:"
v L "bank" 2 570 "int8" `291 
v L "offset" 2 570 "int8" `292 
f B "read_bank" 2 570 "int8(int8 bank,int8 offset)" `290 
v L "bank" 2 571 "int8" `294 
v L "offset" 2 571 "int8" `295 
v L "value" 2 571 "int8" `296 
f B "write_bank" 2 571 "void(int8 bank,int8 offset,int8 value)" `293 
v L "dest" 2 572 "*int8" `298 
v L "src" 2 572 "*int8" `299 
f B "strcpy" 2 572 "void(*int8 dest,*int8 src)" `297 
v L "dest" 2 573 "*int8" `301 
v L "src" 2 573 "*int8" `302 
f B "strcopy" 2 573 "void(*int8 dest,*int8 src)" `300 
v L "destination" 2 574 "*int8" `304 
v L "value" 2 574 "int8" `305 
v L "num" 2 574 "int16" `306 
f B "memset" 2 574 "void(*int8 destination,int8 value,int16 num)" `303 
v L "destination" 2 575 "*int8" `308 
v L "source" 2 575 "*int8" `309 
v L "num" 2 575 "int16" `310 
f B "memcpy" 2 575 "void(*int8 destination,*int8 source,int16 num)" `307  "String Prototypes:"
v L "cvalue" 2 578 "int8" `312 
f B "toupper" 2 578 "int8(int8 cvalue)" `311 
v L "cvalue" 2 579 "int8" `314 
f B "tolower" 2 579 "int8(int8 cvalue)" `313 
v L "string" 2 580 "*int8" `316 
v L "cstring" 2 580 "*int8" `317 
f B "sprintf" 2 580 "void(*int8 string,*int8 cstring,*int8 _VA_LIST)" `315  "Data Manipulators Prototypes:"
v L "address" 2 583 "*int8" `320 
v L "bytes" 2 583 "int8" `321 
v L "value" 2 583 "int8" `322 
f B "shift_left" 2 583 "int8(*int8 address,int8 bytes,int8 value)" `319 
v L "address" 2 584 "*int8" `324 
v L "bytes" 2 584 "int8" `325 
v L "value" 2 584 "int8" `326 
f B "shift_right" 2 584 "int8(*int8 address,int8 bytes,int8 value)" `323 
v L "address" 2 585 "*int8" `328 
v L "bytes" 2 585 "int8" `329 
f B "rotate_left" 2 585 "void(*int8 address,int8 bytes)" `327 
v L "address" 2 586 "*int8" `331 
v L "bytes" 2 586 "int8" `332 
f B "rotate_right" 2 586 "void(*int8 address,int8 bytes)" `330 
v L "value" 2 587 "int8" `334 
f B "swap" 2 587 "void(int8 value)" `333 
v L "var" 2 588 "int16" `336 
v L "offset" 2 588 "int8" `337 
f B "make8" 2 588 "int8(int16 var,int8 offset)" `335 
v L "var" 2 589 "int32" `336 
v L "offset" 2 589 "int8" `340 
f G "make8" 2 589 "int8(int32 var,int8 offset)" `338 
v L "varhigh" 2 590 "int8" `342 
v L "varlow" 2 590 "int8" `343 
f B "make16" 2 590 "int16(int8 varhigh,int8 varlow)" `341 
v L "var1" 2 591 "int16" `345 
f B "make32" 2 591 "int32(int16 var1)" `344 
v L "var1" 2 592 "int16" `347 
v L "var2" 2 592 "int16" `348 
f G "make32" 2 592 "int32(int16 var1,int16 var2)" `346 
v L "var1" 2 593 "int16" `347 
v L "var2" 2 593 "int8" `351 
f G "make32" 2 593 "int32(int16 var1,int8 var2)" `349 
v L "var1" 2 594 "int16" `353 
v L "var2" 2 594 "int8" `354 
v L "var3" 2 594 "int8" `355 
f G "make32" 2 594 "int32(int16 var1,int8 var2,int8 var3)" `352 
v L "var1" 2 595 "int8" `357 
f G "make32" 2 595 "int32(int8 var1)" `356 
v L "var1" 2 596 "int8" `347 
v L "var2" 2 596 "int8" `360 
f G "make32" 2 596 "int32(int8 var1,int8 var2)" `358 
v L "var1" 2 597 "int8" `353 
v L "var2" 2 597 "int8" `354 
v L "var3" 2 597 "int8" `364 
f G "make32" 2 597 "int32(int8 var1,int8 var2,int8 var3)" `361 
v L "var1" 2 598 "int8" `366 
v L "var2" 2 598 "int8" `367 
v L "var3" 2 598 "int8" `368 
v L "var4" 2 598 "int8" `369 
f G "make32" 2 598 "int32(int8 var1,int8 var2,int8 var3,int8 var4)" `365 
v L "var1" 2 599 "int8" `347 
v L "var2" 2 599 "int16" `372 
f G "make32" 2 599 "int32(int8 var1,int16 var2)" `370 
v L "var1" 2 600 "int8" `353 
v L "var2" 2 600 "int16" `354 
v L "var3" 2 600 "int8" `376 
f G "make32" 2 600 "int32(int8 var1,int16 var2,int8 var3)" `373 
v L "var1" 2 601 "int8" `353 
v L "var2" 2 601 "int8" `354 
v L "var3" 2 601 "int16" `380 
f G "make32" 2 601 "int32(int8 var1,int8 var2,int16 var3)" `377 
v L "var" 2 602 "int8" `382 
v L "bit" 2 602 "int8" `383 
f B "bit_set" 2 602 "void(int8 var,int8 bit)" `381 
v L "var" 2 603 "int16" `382 
v L "bit" 2 603 "int8" `386 
f G "bit_set" 2 603 "void(int16 var,int8 bit)" `384 
v L "var" 2 604 "int32" `382 
v L "bit" 2 604 "int8" `389 
f G "bit_set" 2 604 "void(int32 var,int8 bit)" `387 
v L "var" 2 605 "int8" `391 
v L "bit" 2 605 "int8" `392 
f B "bit_clear" 2 605 "void(int8 var,int8 bit)" `390 
v L "var" 2 606 "int16" `391 
v L "bit" 2 606 "int8" `395 
f G "bit_clear" 2 606 "void(int16 var,int8 bit)" `393 
v L "var" 2 607 "int32" `391 
v L "bit" 2 607 "int8" `398 
f G "bit_clear" 2 607 "void(int32 var,int8 bit)" `396 
v L "var" 2 608 "int8" `400 
v L "bit" 2 608 "int8" `401 
f B "bit_test" 2 608 "int8(int8 var,int8 bit)" `399 
v L "var" 2 609 "int16" `400 
v L "bit" 2 609 "int8" `404 
f G "bit_test" 2 609 "int8(int16 var,int8 bit)" `402 
v L "var" 2 610 "int32" `400 
v L "bit" 2 610 "int8" `407 
f G "bit_test" 2 610 "int8(int32 var,int8 bit)" `405  "#use delay() Prototypes:"
v L "count" 2 613 "int8" `409 
f B "delay_cycles" 2 613 "void(int8 count)" `408 
v L "time" 2 614 "int16" `411 
f B "delay_ms" 2 614 "void(int16 time)" `410 
v L "time" 2 615 "int16" `413 
f B "delay_us" 2 615 "void(int16 time)" `412  "#use rs232() Prototypes:"
v L "cdata" 2 618 "int8" `415 
f B "putchar" 2 618 "void(int8 cdata)" `414 
v L "cdata" 2 619 "int8" `417 
v L "stream" 2 619 "int8" `418 
f G "putchar" 2 619 "void(int8 cdata,int8 stream)" `416 
v L "string" 2 620 "*int8" `420 
f B "puts" 2 620 "void(*int8 string)" `419 
v L "string" 2 621 "*int8" `422 
v L "stream" 2 621 "int8" `423 
f G "puts" 2 621 "void(*int8 string,int8 stream)" `421 
f B "getch" 2 622 "int8()" `424 
v L "stream" 2 623 "int8" `426 
f G "getch" 2 623 "int8(int8 stream)" `425 
v L "string" 2 624 "*int8" `428 
f B "gets" 2 624 "void(*int8 string)" `427 
v L "string" 2 625 "*int8" `430 
v L "stream" 2 625 "int8" `431 
f G "gets" 2 625 "void(*int8 string,int8 stream)" `429 
f B "kbhit" 2 626 "int8()" `432 
v L "stream" 2 627 "int8" `434 
f G "kbhit" 2 627 "int8(int8 stream)" `433 
v L "string" 2 628 "*int8" `436 
f B "printf" 2 628 "void(*int8 string,*int8 _VA_LIST)" `435 
v L "stream" 2 629 "int8" `439 
v L "string" 2 629 "*int8" `440 
f B "fprintf" 2 629 "void(int8 stream,*int8 string,*int8 _VA_LIST)" `438 
f B "putc_send" 2 630 "void()" `442 
v L "stream" 2 631 "int8" `444 
f B "fputc_send" 2 631 "void(int8 stream)" `443 
f B "rcv_buffer_full" 2 632 "int8()" `445 
v L "stream" 2 633 "int8" `447 
f G "rcv_buffer_full" 2 633 "int8(int8 stream)" `446 
f B "rcv_buffer_bytes" 2 634 "int16()" `448 
v L "stream" 2 635 "int8" `450 
f G "rcv_buffer_bytes" 2 635 "int16(int8 stream)" `449 
f B "tx_buffer_full" 2 636 "int8()" `451 
v L "stream" 2 637 "int8" `453 
f G "tx_buffer_full" 2 637 "int8(int8 stream)" `452 
f B "tx_buffer_bytes" 2 638 "int16()" `454 
v L "stream" 2 639 "int8" `456 
f G "tx_buffer_bytes" 2 639 "int16(int8 stream)" `455  "#use i2c() Prototypes:"
f B "i2c_read" 2 642 "int8()" `457 
v L "stream" 2 643 "int8" `459 
f G "i2c_read" 2 643 "int8(int8 stream)" `458 
v L "stream" 2 644 "int8" `461 
v L "ack" 2 644 "int8" `462 
f G "i2c_read" 2 644 "int8(int8 stream,int8 ack)" `460 
v L "data" 2 645 "int8" `464 
f B "i2c_write" 2 645 "int8(int8 data)" `463 
v L "stream" 2 646 "int8" `466 
v L "data" 2 646 "int8" `467 
f G "i2c_write" 2 646 "int8(int8 stream,int8 data)" `465 
f B "i2c_start" 2 647 "void()" `468 
v L "stream" 2 648 "int8" `470 
f G "i2c_start" 2 648 "void(int8 stream)" `469 
v L "stream" 2 649 "int8" `472 
v L "restart" 2 649 "int8" `473 
f G "i2c_start" 2 649 "void(int8 stream,int8 restart)" `471 
f B "i2c_stop" 2 650 "void()" `474 
v L "stream" 2 651 "int8" `476 
f G "i2c_stop" 2 651 "void(int8 stream)" `475 
f B "i2c_isr_state" 2 652 "int8()" `477 
v L "addr" 2 653 "int8" `479 
f B "i2c_slaveaddr" 2 653 "void(int8 addr)" `478 
v L "stream" 2 654 "int8" `481 
v L "addr" 2 654 "int8" `482 
f G "i2c_slaveaddr" 2 654 "void(int8 stream,int8 addr)" `480 
f B "i2c_poll" 2 655 "int8()" `483 
v L "stream" 2 656 "int8" `485 
f G "i2c_poll" 2 656 "int8(int8 stream)" `484 
v L "baud" 2 657 "int32" `487 
f B "i2c_init" 2 657 "void(int32 baud)" `486 
v L "stream" 2 658 "int8" `489 
v L "baud" 2 658 "int32" `490 
f G "i2c_init" 2 658 "void(int8 stream,int32 baud)" `488  "#use spi() Prototypes:"
f B "spi_xfer" 2 661 "int8()" `491 
f G "spi_xfer" 2 662 "int16()" `492 
f G "spi_xfer" 2 663 "int32()" `493 
v L "data" 2 664 "int8" `495 
f G "spi_xfer" 2 664 "int8(int8 data)" `494 
v L "data" 2 665 "int16" `497 
f G "spi_xfer" 2 665 "int16(int16 data)" `496 
v L "data" 2 666 "int32" `499 
f G "spi_xfer" 2 666 "int32(int32 data)" `498 
v L "stream" 2 667 "int8" `501 
v L "data" 2 667 "int8" `502 
f G "spi_xfer" 2 667 "int8(int8 stream,int8 data)" `500 
v L "stream" 2 668 "int8" `501 
v L "data" 2 668 "int16" `505 
f G "spi_xfer" 2 668 "int16(int8 stream,int16 data)" `503 
v L "stream" 2 669 "int8" `501 
v L "data" 2 669 "int32" `508 
f G "spi_xfer" 2 669 "int32(int8 stream,int32 data)" `506 
v L "stream" 2 670 "int8" `510 
v L "data" 2 670 "int8" `511 
v L "bits" 2 670 "int8" `512 
f G "spi_xfer" 2 670 "int8(int8 stream,int8 data,int8 bits)" `509 
v L "stream" 2 671 "int8" `510 
v L "data" 2 671 "int16" `511 
v L "bits" 2 671 "int8" `516 
f G "spi_xfer" 2 671 "int16(int8 stream,int16 data,int8 bits)" `513 
v L "stream" 2 672 "int8" `510 
v L "data" 2 672 "int32" `511 
v L "bits" 2 672 "int8" `520 
f G "spi_xfer" 2 672 "int32(int8 stream,int32 data,int8 bits)" `517 
v L "baud" 2 673 "int32" `522 
f B "spi_init" 2 673 "void(int32 baud)" `521 
v L "stream" 2 674 "int8" `524 
v L "baud" 2 674 "int32" `525 
f G "spi_init" 2 674 "void(int8 stream,int32 baud)" `523 
v L "baud" 2 675 "int32" `527 
f B "spi_speed" 2 675 "void(int32 baud)" `526 
v L "stream" 2 676 "int8" `529 
v L "baud" 2 676 "int32" `530 
f G "spi_speed" 2 676 "void(int8 stream,int32 baud)" `528 
v L "stream" 2 677 "int8" `532 
v L "baud" 2 677 "int32" `533 
v L "clock" 2 677 "int32" `534 
f G "spi_speed" 2 677 "void(int8 stream,int32 baud,int32 clock)" `531 
v L "data" 2 678 "int8" `536 
f B "spi_prewrite" 2 678 "void(int8 data)" `535 
v L "data" 2 679 "int16" `538 
f G "spi_prewrite" 2 679 "void(int16 data)" `537 
v L "data" 2 680 "int32" `540 
f G "spi_prewrite" 2 680 "void(int32 data)" `539 
v L "??65535" 2 681 "int8" `542 
v L "data" 2 681 "int8" `543 
f G "spi_prewrite" 2 681 "void(int8 ,int8 data)" `541 
v L "??65535" 2 682 "int8" `542 
v L "data" 2 682 "int16" `546 
f G "spi_prewrite" 2 682 "void(int8 ,int16 data)" `544 
v L "??65535" 2 683 "int8" `542 
v L "data" 2 683 "int32" `549 
f G "spi_prewrite" 2 683 "void(int8 ,int32 data)" `547 
f B "spi_xfer_in" 2 684 "int8()" `550 
f G "spi_xfer_in" 2 685 "int16()" `551 
f G "spi_xfer_in" 2 686 "int32()" `552 
v L "bits" 2 687 "int8" `554 
f G "spi_xfer_in" 2 687 "int8(int8 bits)" `553 
v L "bits" 2 688 "int8" `556 
f G "spi_xfer_in" 2 688 "int16(int8 bits)" `555 
v L "bits" 2 689 "int8" `558 
f G "spi_xfer_in" 2 689 "int32(int8 bits)" `557 
v L "stream" 2 690 "int8" `560 
v L "bits" 2 690 "int8" `561 
f G "spi_xfer_in" 2 690 "int8(int8 stream,int8 bits)" `559 
v L "stream" 2 691 "int8" `560 
v L "bits" 2 691 "int8" `564 
f G "spi_xfer_in" 2 691 "int16(int8 stream,int8 bits)" `562 
v L "stream" 2 692 "int8" `560 
v L "bits" 2 692 "int8" `567 
f G "spi_xfer_in" 2 692 "int32(int8 stream,int8 bits)" `565  "#use rtos() Prototypes:"
f B "rtos_run" 2 695 "void()" `568 
f B "rtos_yield" 2 696 "void()" `569 
v L "task" 2 697 "int8" `571 
f B "rtos_enable" 2 697 "void(int8 task)" `570 
v L "task" 2 698 "int8" `573 
f B "rtos_disable" 2 698 "void(int8 task)" `572 
f B "rtos_terminate" 2 699 "void()" `574 
v L "flag" 2 700 "int8" `576 
f B "rtos_await" 2 700 "void(int8 flag)" `575 
v L "sem" 2 701 "int8" `578 
f B "rtos_wait" 2 701 "void(int8 sem)" `577 
v L "sem" 2 702 "int8" `580 
f B "rtos_signal" 2 702 "void(int8 sem)" `579 
v L "task" 2 703 "int8" `582 
v L "msg" 2 703 "int8" `583 
f B "rtos_msg_send" 2 703 "void(int8 task,int8 msg)" `581 
f B "rtos_msg_read" 2 704 "int8()" `584 
f B "rtos_msg_poll" 2 705 "int8()" `585 
v L "task" 2 706 "int8" `587 
f B "rtos_overrun" 2 706 "int8(int8 task)" `586 
v L "task" 2 707 "int8" `589 
v L "stat" 2 707 "*int8" `590 
f B "rtos_stats" 2 707 "void(int8 task,*int8 stat)" `588  "#use timer() Prototypes:"
f B "get_ticks" 2 710 "int8()" `591 
f G "get_ticks" 2 711 "int16()" `592 
f G "get_ticks" 2 712 "int32()" `593 
v L "stream" 2 713 "int8" `595 
f G "get_ticks" 2 713 "int8(int8 stream)" `594 
v L "stream" 2 714 "int8" `597 
f G "get_ticks" 2 714 "int16(int8 stream)" `596 
v L "stream" 2 715 "int8" `599 
f G "get_ticks" 2 715 "int32(int8 stream)" `598 
v L "value" 2 716 "int8" `601 
f B "set_ticks" 2 716 "void(int8 value)" `600 
v L "value" 2 717 "int16" `603 
f G "set_ticks" 2 717 "void(int16 value)" `602 
v L "value" 2 718 "int32" `605 
f G "set_ticks" 2 718 "void(int32 value)" `604 
v L "stream" 2 719 "int8" `607 
v L "value" 2 719 "int8" `608 
f G "set_ticks" 2 719 "void(int8 stream,int8 value)" `606 
v L "stream" 2 720 "int8" `607 
v L "value" 2 720 "int16" `611 
f G "set_ticks" 2 720 "void(int8 stream,int16 value)" `609 
v L "stream" 2 721 "int8" `607 
v L "value" 2 721 "int32" `614 
f G "set_ticks" 2 721 "void(int8 stream,int32 value)" `612  "#use pwm() Prototypes:"
f B "pwm_on" 2 724 "void()" `615 
v L "stream" 2 725 "int8" `617 
f G "pwm_on" 2 725 "void(int8 stream)" `616 
f B "pwm_off" 2 726 "void()" `618 
v L "stream" 2 727 "int8" `620 
f G "pwm_off" 2 727 "void(int8 stream)" `619 
v L "duty" 2 728 "int16" `622 
f B "pwm_set_duty" 2 728 "void(int16 duty)" `621 
v L "stream" 2 729 "int8" `624 
v L "duty" 2 729 "int16" `625 
f G "pwm_set_duty" 2 729 "void(int8 stream,int16 duty)" `623 
v L "percent" 2 730 "int16" `627 
f B "pwm_set_duty_percent" 2 730 "void(int16 percent)" `626 
v L "stream" 2 731 "int8" `629 
v L "percent" 2 731 "int16" `630 
f G "pwm_set_duty_percent" 2 731 "void(int8 stream,int16 percent)" `628 
v L "frequency" 2 732 "int32" `632 
f B "pwm_set_frequency" 2 732 "void(int32 frequency)" `631 
v L "stream" 2 733 "int8" `634 
v L "frequency" 2 733 "int32" `635 
f G "pwm_set_frequency" 2 733 "void(int8 stream,int32 frequency)" `633  "#use capture() Prototypes:"
f B "get_capture_time" 2 736 "int16()" `636 
v L "stream" 2 737 "int8" `638 
f G "get_capture_time" 2 737 "int16(int8 stream)" `637 
f B "get_capture_event" 2 738 "int8()" `639 
v L "stream" 2 739 "int8" `641 
f G "get_capture_event" 2 739 "int8(int8 stream)" `640  "Enviroment Prototypes:"
c L "get_capture_event" 2 1 2 "FUNCTION"
v L "address" 2 752 "int32" `643 
f B "goto_address" 2 752 "void(int32 address)" `642 
v L "label" 2 753 "int32" `645 
f B "label_address" 2 753 "int32(int32 label)" `644  "Program Memory Prototypes:"
v L "address" 2 756 "int32" `647 
v L "dataptr" 2 756 "*int8" `648 
v L "count" 2 756 "int16" `649 
f B "read_program_memory" 2 756 "void(int32 address,*int8 dataptr,int16 count)" `646 
v L "address" 2 757 "int32" `651 
f B "read_program_eeprom" 2 757 "int16(int32 address)" `650 
v L "address" 2 758 "int32" `653 
f B "erase_program_eeprom" 2 758 "void(int32 address)" `652 
v L "address" 2 759 "int32" `655 
v L "dataptr" 2 759 "*int8" `656 
v L "count" 2 759 "int16" `657 
f B "write_program_memory" 2 759 "void(int32 address,*int8 dataptr,int16 count)" `654 
v L "address" 2 760 "int32" `659 
v L "data" 2 760 "int16" `660 
f B "write_program_eeprom" 2 760 "void(int32 address,int16 data)" `658  "INT"
c L "write_program_eeprom" 2 1 4 "FUNCTION"
v L "interrupt" 2 767 "int32" `662 
f B "enable_interrupts" 2 767 "void(int32 interrupt)" `661 
v L "interrupt" 2 768 "int32" `664 
f B "disable_interrupts" 2 768 "void(int32 interrupt)" `663 
v L "interrupt" 2 769 "int32" `666 
f B "clear_interrupt" 2 769 "void(int32 interrupt)" `665 
v L "interrupt" 2 770 "int32" `668 
f B "interrupt_active" 2 770 "int8(int32 interrupt)" `667 
v L "interrupt" 2 771 "int32" `670 
f B "interrupt_enabled" 2 771 "int8(int32 interrupt)" `669 
v L "source" 2 772 "int8" `672 
v L "edge" 2 772 "int8" `673 
f B "ext_int_edge" 2 772 "void(int8 source,int8 edge)" `671 
v L "address" 2 773 "int16" `675 
f B "jump_to_irs" 2 773 "void(int16 address)" `674  "Constants used in EXT_INT_EDGE() are:"
d G "L_TO_H" 2 775 "0x40"
d G "H_TO_L" 2 776 "0"
d G "GLOBAL" 2 778 "0xF2C0"
d G "PERIPH" 2 779 "0xF240"
d G "INT_RTCC" 2 780 "0x00F220"
d G "INT_TIMER0" 2 781 "0x00F220"
d G "INT_TIMER1" 2 782 "0x009D01"
d G "INT_TIMER2" 2 783 "0x009D02"
d G "INT_TIMER3" 2 784 "0x00A002"
d G "INT_EXT_L2H" 2 785 "0x5000F210"
d G "INT_EXT_H2L" 2 786 "0x6000F210"
d G "INT_EXT" 2 787 "0x00F210"
d G "INT_EXT1_L2H" 2 788 "0x5001F008"
d G "INT_EXT1_H2L" 2 789 "0x6001F008"
d G "INT_EXT1" 2 790 "0x00F008"
d G "INT_EXT2_L2H" 2 791 "0x5002F010"
d G "INT_EXT2_H2L" 2 792 "0x6002F010"
d G "INT_EXT2" 2 793 "0x00F010"
d G "INT_EXT3_L2H" 2 794 "0x5003F020"
d G "INT_EXT3_H2L" 2 795 "0x6003F020"
d G "INT_EXT3" 2 796 "0x00F020"
d G "INT_RB" 2 797 "0x00FFF208"
d G "INT_AD" 2 798 "0x009D40"
d G "INT_RDA" 2 799 "0x009D20"
d G "INT_TBE" 2 800 "0x009D10"
d G "INT_SSP" 2 801 "0x009D08"
d G "INT_CCP1" 2 802 "0x009D04"
d G "INT_CCP2" 2 803 "0x00A001"
d G "INT_BUSCOL" 2 804 "0x00A008"
d G "INT_COMP" 2 805 "0x00A040"
d G "INT_TIMER4" 2 806 "0x00A308"
d G "INT_CCP3" 2 807 "0x00A301"
d G "INT_CCP4" 2 808 "0x00A302"
d G "INT_CCP5" 2 809 "0x00A304"
d G "INT_OSCF" 2 810 "0x00A080"
d G "INT_ETH" 2 811 "0x00A020"
D G "__P18CXXXX_H__" 3 4 ""
D G "__18CXX" 3 7 ""
D G "_asm" 3 21 "#asm"
D G "_endasm" 3 22 "#endasm"
D G "__18F67J60" 3 47 ""
V G "STKPTRbits" 4 16 "{int1 STKPTR0,int1 STKPTR1,int1 STKPTR2,int1 STKPTR3,int1 STKPTR4,int1 ,int1 STKUNF,int1 STKFUL}" `704 
V G "TBLPTRUbits" 4 33 "{int1 TBLPTRU0,int1 TBLPTRU1,int1 TBLPTRU2,int1 TBLPTRU3,int1 TBLPTRU4,int1 ACSS}" `716 
V G "INTCONbits" 4 56 "{int1 RBIF,int1 INT0IF,int1 TMR0IF,int1 RBIE,int1 INT0IE,int1 TMR0IE,int1 PEIE_GIEL,int1 GIE_GIEH}" `732 
V G "INTCON2bits" 4 69 "{int1 RBIP,int1 INT3IP,int1 TMR0IP,int1 INTEDG3,int1 INTEDG4,int1 INTEDG5,int1 INTEDG6,int1 RBPU}" `743 
V G "INTCON3bits" 4 82 "{int1 INT1IF,int1 INT2IF,int1 INT3IF,int1 INT1IE,int1 INT2IE,int1 INT3IE,int1 INT1IP,int1 INT2IP}" `754 
V G "STATUSbits" 4 138 "{int1 C,int1 DC,int1 Z,int1 OV,int1 N}" `785 
V G "T0CONbits" 4 155 "{int1 T0PS0,int1 T0PS1,int1 T0PS2,int1 PSA,int1 T0SE,int1 T0CS,int1 T08BIT,int1 TMR0ON}" `798 
V G "OSCCONbits" 4 166 "{int1 SCS0,int1 SCS1,int1 ,int1 OSTS,int3 ,int1 IDLEN}" `807 
V G "ECON1bits" 4 178 "{int2 ,int1 RXEN,int1 TXRTS,int1 CSUMEN,int1 DMAST,int1 RXRST,int1 TXRST}" `817 
V G "WDTCONbits" 4 184 "{int1 SWDTEN}" `821 
V G "RCONbits" 4 196 "{int1 BOR,int1 POR,int1 PD,int1 TO,int1 RI,int2 ,int1 IPEN}" `831 
V G "T1CONbits" 4 213 "{int1 TMR1ON,int1 TMR1CS,int1 T1SYNC,int1 T1OSCEN,int1 T1CKPS4,int1 T1CKPS5,int1 T1RUN,int1 RD16}" `844 
V G "T2CONbits" 4 229 "{int1 T2CKPS0,int1 T2CKPS1,int1 TMR2ON,int1 TOUTPS0,int1 TOUTPS1,int1 TOUTPS2,int1 TOUTPS3}" `856 
V G "SSP1STATbits" 4 246 "{int1 BF,int1 UA,int1 R,int1 S,int1 P,int1 D,int1 CKE,int1 SMP}" `869 
V G "SSP1CON1bits" 4 259 "{int1 SSPM0,int1 SSPM1,int1 SSPM2,int1 SSPM3,int1 CKP,int1 SSPEN,int1 SSPOV,int1 WCOL}" `880 
V G "SSP1CON2bits" 4 272 "{int1 SEN,int1 RSEN,int1 PEN,int1 RCEN,int1 ACKEN,int1 ACKDT,int1 ACKSTAT,int1 GCEN}" `891 
V G "ADCON0bits" 4 289 "{int1 ADON,int1 GO,int1 CHS0,int1 CHS1,int1 CHS2,int1 CHS3,int1 reserved,int1 ADCAL}" `904 
V G "ADCON1bits" 4 300 "{int1 PCFG0,int1 PCFG1,int1 PCFG2,int1 PCFG3,int1 VCFG4,int1 VCFG1}" `913 
V G "ADCON2bits" 4 313 "{int1 ADCS0,int1 ADCS1,int1 ADCS2,int1 ACQT3,int1 ACQT4,int1 ACQT2,int1 ,int1 ADFM}" `924 
V G "CCP1CONbits" 4 330 "{int1 CCP1M0,int1 CCP1M1,int1 CCP1M2,int1 CCP1M3,int1 DC1B4,int1 DC1B5,int1 P1M6,int1 P1M1}" `937 
V G "CCP2CONbits" 4 347 "{int1 CCP2M0,int1 CCP2M1,int1 CCP2M2,int1 CCP2M3,int1 DC2B4,int1 DC2B5,int1 P2M6,int1 P2M1}" `950 
V G "CCP3CONbits" 4 364 "{int1 CCP3M0,int1 CCP3M1,int1 CCP3M2,int1 CCP3M3,int1 DC3B4,int1 DC3B5,int1 P3M6,int1 P3M1}" `963 
V G "ECCP1ASbits" 4 377 "{int1 PSSBD0,int1 PSSBD1,int1 PSSAC2,int1 PSSAC3,int1 ECCPAS4,int1 ECCPAS5,int1 ECCPAS6,int1 ECCPASE}" `974 
V G "CVRCONbits" 4 390 "{int1 CVR0,int1 CVR1,int1 CVR2,int1 CVR3,int1 CVRSS,int1 CVRR,int1 CVROE,int1 CVREN}" `985 
V G "CMCONbits" 4 403 "{int1 CM0,int1 CM1,int1 CM2,int1 CIS,int1 C1INV,int1 C2INV,int1 C1OUT,int1 C2OUT}" `996 
V G "T3CONbits" 4 420 "{int1 TMR3ON,int1 TMR3CS,int1 T3SYNC,int1 T3CCP3,int1 T3CKPS4,int1 T3CKPS5,int1 T3CCP6,int1 RD16}" `1009 
V G "TXSTA1bits" 4 439 "{int1 TX9D,int1 TRMT,int1 BRGH,int1 SENDB,int1 SYNC,int1 TXEN,int1 TX,int1 CSRC}" `1023 
V G "RCSTA1bits" 4 452 "{int1 RX9D,int1 OERR,int1 FERR,int1 ADDEN,int1 CREN,int1 SREN,int1 RX,int1 SPEN}" `1034 
V G "EECON1bits" 4 464 "{int1 ,int1 WR,int1 WREN,int1 WRERR,int1 FREE}" `1043 
V G "IPR3bits" 4 473 "{int1 CCP3IP,int1 CCP4IP,int1 CCP5IP,int1 TMR4IP}" `1050 
V G "PIR3bits" 4 482 "{int1 CCP3IF,int1 CCP4IF,int1 CCP5IF,int1 TMR4IF}" `1057 
V G "PIE3bits" 4 491 "{int1 CCP3IE,int1 CCP4IE,int1 CCP5IE,int1 TMR4IE}" `1064 
V G "IPR2bits" 4 504 "{int1 CCP2IP,int1 TMR3IP,int1 ,int1 BCL1IP,int1 WOLIP,int1 ETHIP,int1 CMIP,int1 OSCFIP}" `1075 
V G "PIR2bits" 4 517 "{int1 CCP2IF,int1 TMR3IF,int1 ,int1 BCL1IF,int1 WOLIF,int1 ETHIF,int1 CMIF,int1 OSCFIF}" `1086 
V G "PIE2bits" 4 530 "{int1 CCP2IE,int1 TMR3IE,int1 ,int1 BCL1IE,int1 WOLIE,int1 ETHIE,int1 CMIE,int1 OSCFIE}" `1097 
V G "IPR1bits" 4 542 "{int1 TMR1IP,int1 TMR2IP,int1 CCP1IP,int1 SSP1IP,int1 TX1IP,int1 RC1IP,int1 ADIP}" `1107 
V G "PIR1bits" 4 554 "{int1 TMR1IF,int1 TMR2IF,int1 CCP1IF,int1 SSP1IF,int1 TX1IF,int1 RC1IF,int1 ADIF}" `1117 
V G "PIE1bits" 4 566 "{int1 TMR1IE,int1 TMR2IE,int1 CCP1IE,int1 SSP1IE,int1 TX1IE,int1 RC1IE,int1 ADIE}" `1127 
V G "OSCTUNEbits" 4 576 "{int4 ,int1 PPRE,int1 PPST5,int1 PLLEN,int1 PPST1}" `1135 
V G "TRISGbits" 4 583 "{int4 ,int1 TRISG4}" `1140 
V G "TRISFbits" 4 596 "{int1 ,int1 TRISF1,int1 TRISF2,int1 TRISF3,int1 TRISF4,int1 TRISF5,int1 TRISF6,int1 TRISF7}" `1151 
V G "TRISEbits" 4 609 "{int1 TRISE0,int1 TRISE1,int1 TRISE2,int1 TRISE3,int1 TRISE4,int1 TRISE5,int1 TRISE6,int1 TRISE7}" `1162 
V G "TRISDbits" 4 622 "{int1 TRISD0,int1 TRISD1,int1 TRISD2,int1 TRISD3,int1 TRISD4,int1 TRISD5,int1 TRISD6,int1 TRISD7}" `1173 
V G "TRISCbits" 4 635 "{int1 TRISC0,int1 TRISC1,int1 TRISC2,int1 TRISC3,int1 TRISC4,int1 TRISC5,int1 TRISC6,int1 TRISC7}" `1184 
V G "TRISBbits" 4 648 "{int1 TRISB0,int1 TRISB1,int1 TRISB2,int1 TRISB3,int1 TRISB4,int1 TRISB5,int1 TRISB6,int1 TRISB7}" `1195 
V G "TRISAbits" 4 661 "{int1 TRISA0,int1 TRISA1,int1 TRISA2,int1 TRISA3,int1 TRISA4,int1 TRISA5,int1 TRISA6,int1 TRISA7}" `1206 
V G "LATGbits" 4 668 "{int4 ,int1 LATG4}" `1211 
V G "LATFbits" 4 681 "{int1 ,int1 LATF1,int1 LATF2,int1 LATF3,int1 LATF4,int1 LATF5,int1 LATF6,int1 LATF7}" `1222 
V G "LATEbits" 4 694 "{int1 LATE0,int1 LATE1,int1 LATE2,int1 LATE3,int1 LATE4,int1 LATE5,int1 LATE6,int1 LATE7}" `1233 
V G "LATDbits" 4 707 "{int1 LATD0,int1 LATD1,int1 LATD2,int1 LATD3,int1 LATD4,int1 LATD5,int1 LATD6,int1 LATD7}" `1244 
V G "LATCbits" 4 720 "{int1 LATC0,int1 LATC1,int1 LATC2,int1 LATC3,int1 LATC4,int1 LATC5,int1 LATC6,int1 LATC7}" `1255 
V G "LATBbits" 4 733 "{int1 LATB0,int1 LATB1,int1 LATB2,int1 LATB3,int1 LATB4,int1 LATB5,int1 LATB6,int1 LATB7}" `1266 
V G "LATAbits" 4 746 "{int1 LATA0,int1 LATA1,int1 LATA2,int1 LATA3,int1 LATA4,int1 LATA5,int1 REPU,int1 RDPU}" `1277 
V G "PORTGbits" 4 753 "{int4 ,int1 RG4}" `1282 
V G "PORTFbits" 4 766 "{int1 ,int1 RF1,int1 RF2,int1 RF3,int1 RF4,int1 RF5,int1 RF6,int1 RF7}" `1293 
V G "PORTEbits" 4 779 "{int1 RE0,int1 RE1,int1 RE2,int1 RE3,int1 RE4,int1 RE5,int1 RE6,int1 RE7}" `1304 
V G "PORTDbits" 4 792 "{int1 RD0,int1 RD1,int1 RD2,int1 RD3,int1 RD4,int1 RD5,int1 RD6,int1 RD7}" `1315 
V G "PORTCbits" 4 805 "{int1 RC0,int1 RC1,int1 RC2,int1 RC3,int1 RC4,int1 RC5,int1 RC6,int1 RC7}" `1326 
V G "PORTBbits" 4 818 "{int1 RB0,int1 RB1,int1 RB2,int1 RB3,int1 RB4,int1 RB5,int1 RB6,int1 RB7}" `1337 
V G "PORTAbits" 4 831 "{int1 RA0,int1 RA1,int1 RA2,int1 RA3,int1 RA4,int1 RA5,int1 RA6,int1 RA7}" `1348 
V G "BAUDCON1bits" 4 846 "{int1 ABDEN,int1 WUE,int1 ,int1 BRG1,int1 TXCKP,int1 RXDTP,int1 RCIDL,int1 ABDOVF}" `1360 
V G "ECCP1DELbits" 4 865 "{int1 PDC0,int1 PDC1,int1 PDC2,int1 PDC3,int1 PDC4,int1 PDC5,int1 PDC6,int1 PRSEN}" `1374 
V G "T4CONbits" 4 881 "{int1 T4CKPS0,int1 T4CKPS1,int1 TMR4ON,int1 T4OUTPS0,int1 T4OUTPS1,int1 T4OUTPS2,int1 T4OUTPS3}" `1386 
V G "CCP4CONbits" 4 896 "{int1 CCP4M0,int1 CCP4M1,int1 CCP4M2,int1 CCP4M3,int1 DC4B4,int1 DC4B1}" `1397 
V G "CCP5CONbits" 4 911 "{int1 CCP5M0,int1 CCP5M1,int1 CCP5M2,int1 CCP5M3,int1 DC5B4,int1 DC5B1}" `1408 
V G "ECCP3ASbits" 4 924 "{int1 PSSBD0,int1 PSSBD1,int1 PSSAC2,int1 PSSAC3,int1 ECCPAS4,int1 ECCPAS5,int1 ECCPAS6,int1 ECCPASE}" `1419 
V G "ECCP3DELbits" 4 937 "{int1 PDC0,int1 PDC1,int1 PDC2,int1 PDC3,int1 PDC4,int1 PDC5,int1 PDC6,int1 PRSEN}" `1430 
V G "ECCP2ASbits" 4 950 "{int1 PSSBD0,int1 PSSBD1,int1 PSSAC2,int1 PSSAC3,int1 ECCPAS4,int1 ECCPAS5,int1 ECCPAS6,int1 ECCPASE}" `1441 
V G "ECCP2DELbits" 4 963 "{int1 PDC0,int1 PDC1,int1 PDC2,int1 PDC3,int1 PDC4,int1 PDC5,int1 PDC6,int1 PRSEN}" `1452 
V G "EIRbits" 4 977 "{int1 RXERIF,int1 TXERIF,int1 ,int1 TXIF,int1 LINKIF,int1 DMAIF,int1 PKTIF}" `1463 
V G "ECON2bits" 4 986 "{int5 ,int1 ETHEN,int1 PKTDEC,int1 AUTOINC}" `1470 
V G "ESTATbits" 4 998 "{int1 PHYRDY,int1 TXABRT,int1 RXBUSY,int1 ,int1 LATECOL,int1 ,int1 BUFER}" `1480 
V G "EIEbits" 4 1010 "{int1 RXERIE,int1 TXERIE,int1 ,int1 TXIE,int1 LINKIE,int1 DMAIE,int1 PKTIE}" `1490 
V G "ERXFCONbits" 4 1089 "{int1 BCEN,int1 MCEN,int1 HTEN,int1 MPEN,int1 PMEN,int1 CRCEN,int1 ANDOR,int1 UCEN}" `1534 
V G "MICMDbits" 4 1146 "{int1 MIIRD,int1 MIISCAN}" `1564 
V G "MICONbits" 4 1153 "{int7 ,int1 RSTMII}" `1569 
V G "MACON4bits" 4 1176 "{int4 ,int1 NOBKOFF,int1 BPEN,int1 DEFER}" `1583 
V G "MACON3bits" 4 1189 "{int1 FULDPX,int1 FRMLNEN,int1 HFRMEN,int1 PHDREN,int1 TXCRCEN,int1 PADCFG5,int1 PADCFG6,int1 PADCFG2}" `1594 
V G "MACON1bits" 4 1198 "{int1 MARXEN,int1 PASSALL,int1 RXPAUS,int1 TXPAUS}" `1601 
V G "EFLOCONbits" 4 1210 "{int1 FCEN0,int1 FCEN1,int1 FULDPXS}" `1609 
V G "MISTATbits" 4 1219 "{int1 BUSY,int1 SCAN,int1 NVALID,int1 LINKFL}" `1616 
D G "Reset" 3 80 "()            reset_cpu()"
D G "far" 3 81 ""
D G "ClrWdt" 3 82 "()         restart_wdt()"
D G "Nop" 3 83 "()            delay_cycles(1)"
D G "__CCS__" 3 85 ""
C L "jump_to_irs" 3 1 1 "FUNCTION"
V L "s1" 3 88 "*sint8" `1625 
V L "s2" 3 88 "int32" `1626 
f G "strcmppgm2ram" 3 88 "sint8(*sint8 s1,int32 s2)" `1624 
V L "s" 3 89 "int32" `1628 
V L "c" 3 89 "int8" `1629 
f G "strchrpgm" 3 89 "*sint8(int32 s,int8 c)" `1627 
V L "s1" 3 90 "*sint8" `1631 
V L "s2" 3 90 "int32" `1632 
f G "strstrrampgm" 3 90 "*sint8(*sint8 s1,int32 s2)" `1630 
V L "s" 3 91 "int32" `1634 
f G "strlenpgm" 3 91 "int8(int32 s)" `1633 
V L "d" 3 92 "*int8" `1636 
V L "s" 3 92 "int32" `1637 
V L "n" 3 92 "int16" `1638 
f G "memcpypgm2ram" 3 92 "void(*int8 d,int32 s,int16 n)" `1635  "char* strupr(char *s);   now in string.h"
V L "d" 3 94 "*sint8" `1640 
V L "s" 3 94 "int32" `1641 
f G "strcpypgm2ram" 3 94 "void(*sint8 d,int32 s)" `1639 
C L "strcpypgm2ram" 1 305 1 "FUNCTION"
D G "BUTTON1_PRESSED" 1 313 "()  (!input(PIN_A4))"
D G "USER_LED1" 1 314 "PIN_B3"
D G "USER_LED2" 1 315 "PIN_B4"
D G "USER_LED3" 1 316 "PIN_B5"
D G "LED_ON" 1 317 "output_low"
D G "LED_OFF" 1 318 "output_high"
D G "STANDARD_ADC_STRING" 1 319 ""AN2""
D G "STANDARD_ADC_CHANNEL" 1 320 "2"
D G "LCD_ENABLE_PIN" 1 322 "PIN_F3"
D G "LCD_RS_PIN" 1 323 "PIN_F1"
D G "LCD_RW_PIN" 1 324 "PIN_F2"
D G "LCD_DATA4" 1 325 "PIN_F4"
D G "LCD_DATA5" 1 326 "PIN_F5"
D G "LCD_DATA6" 1 327 "PIN_F6"
D G "LCD_DATA7" 1 328 "PIN_F7"
D G "__LCD_C__" 5 76 ""
C L "strcpypgm2ram" 5 2 2 "FUNCTION"
C L "strcpypgm2ram" 5 2 1 "FUNCTION"
C L "strcpypgm2ram" 5 2 1 "FUNCTION"
C L "strcpypgm2ram" 5 2 1 "FUNCTION"
C L "strcpypgm2ram" 5 2 1 "FUNCTION"
C L "strcpypgm2ram" 5 2 1 "FUNCTION"
C L "strcpypgm2ram" 5 2 2 "FUNCTION"
T G "LCD_PIN_MAP" 5 90 "{int1 enable,int1 rs,int1 rw,int1 unused,int4 data}" `1657  "this is to improve compatability with previous LCD drivers that accepted"
D G "lcd_output_enable" 5 112 "(x) output_bit(LCD_ENABLE_PIN, x)"
D G "lcd_enable_tris" 5 113 "()  output_drive(LCD_ENABLE_PIN)"
D G "lcd_output_rs" 5 120 "(x) output_bit(LCD_RS_PIN, x)"
D G "lcd_rs_tris" 5 121 "()  output_drive(LCD_RS_PIN)"
D G "lcd_output_rw" 5 128 "(x) output_bit(LCD_RW_PIN, x)"
D G "lcd_rw_tris" 5 129 "()  output_drive(LCD_RW_PIN)"
D G "LCD_TYPE" 5 179 "2" "0=5x7, 1=5x10, 2=2 lines"
D G "LCD_LINE_TWO" 5 183 "0x40" "LCD RAM address for the second line"
D G "LCD_LINE_LENGTH" 5 187 "20"
f G "lcd_read_nibble" 5 190 "int8()" `1658 
F G "lcd_read_byte" 5 193 "int8()" `1659 
V L "low" 5 194 "int8" `1660 
V L "high" 5 194 "int8" `1661 
F G "lcd_read_nibble" 5 240 "int8()" `1658 
V L "n" 5 242 "int8" `1662 
C L "lcd_read_nibble" 5 2 1 "FUNCTION"
V L "n" 5 256 "int8" `1664 
F G "lcd_send_nibble" 5 257 "void(int8 n)" `1663 
C L "lcd_send_nibble" 5 2 1 "FUNCTION"
V L "address" 5 274 "int8" `1666 
V L "n" 5 274 "int8" `1667 
F G "lcd_send_byte" 5 275 "void(int8 address,int8 n)" `1665 
V G "g_LcdX" 5 296 "int8" `1668 
V G "g_LcdY" 5 296 "int8" `1669 
F G "lcd_init" 5 300 "void()" `1670 
V L "i" 5 301 "int8" `1671 
V L "LCD_INIT_STRING" 5 302 "int8[4]" `1672 
C L "lcd_init" 5 2 2 "FUNCTION"
V L "x" 5 345 "int8" `1674 
V L "y" 5 345 "int8" `1675 
F G "lcd_gotoxy" 5 346 "void(int8 x,int8 y)" `1673 
V L "address" 5 347 "int8" `1676 
V L "c" 5 363 "sint8" `1678 
F G "lcd_putc" 5 364 "void(sint8 c)" `1677 
V L "x" 5 406 "int8" `1680 
V L "y" 5 406 "int8" `1681 
F G "lcd_getc" 5 407 "sint8(int8 x,int8 y)" `1679 
V L "value" 5 408 "sint8" `1682 
C L "lcd_getc" 5 2 1 "FUNCTION"
C L "lcd_set_cgram_char" 5 2 5 "FUNCTION"
V L "which" 5 424 "int8" `1684 
V L "ptr" 5 424 "*int8" `1685 
F G "lcd_set_cgram_char" 5 425 "void(int8 which,*int8 ptr)" `1683 
V L "i" 5 426 "int16" `1686 
C L "lcd_set_cgram_char" 5 2 1 "FUNCTION"
C L "lcd_set_cgram_char" 5 2 1 "FUNCTION"
V L "on" 5 443 "int8" `1688 
F G "lcd_cursor_on" 5 444 "void(int8 on)" `1687 
C L "lcd_cursor_on" 5 2 1 "FUNCTION"
C L "lcd_cursor_on" 5 2 1 "FUNCTION"
F G "init_user_io" 1 338 "void(*int8 s1,*sint8 s2,int16 n)" `1689 
C L "init_user_io" 1 350 1 "FUNCTION"
C L "init_user_io" 1 350 1 "FUNCTION"
D G "EEPROM_SELECT" 1 361 "PIN_C1" "o"
D G "EEPROM_DI" 1 362 "PIN_C5" "o"
D G "EEPROM_DO" 1 363 "PIN_C4" "i"
D G "EEPROM_CLK" 1 364 "PIN_C3" "o"
D G "EEPROM_USE_SPI" 1 365 "1"
D G "EEPROM_ADDRESS" 6 48 "long"
F G "init_ext_eeprom" 6 54 "void()" `1692 
V L "i" 6 55 "int1" `1693 
C L "init_ext_eeprom" 6 2 1 "FUNCTION"
F G "ext_eeprom_ready" 6 63 "int8()" `1694 
V L "cmd" 6 64 "int8[1]" `1695 
V L "i" 6 64 "int8" `1696 
V L "data" 6 64 "int8" `1697 
C L "ext_eeprom_ready" 6 2 1 "FUNCTION"
C L "ext_eeprom_ready" 6 2 1 "FUNCTION"
C L "ext_eeprom_ready" 6 2 1 "FUNCTION"
C L "ext_eeprom_ready" 6 2 1 "FUNCTION"
C L "ext_eeprom_ready" 6 2 1 "FUNCTION"
V L "address" 6 86 "sint32" `1699 
V L "data" 6 86 "int8" `1700 
F G "write_ext_eeprom" 6 86 "void(sint32 address,int8 data,*sint8 s1,*sint8 s2)" `1698 
V L "cmd" 6 88 "int8[4]" `1701 
V L "i" 6 89 "int8" `1702 
C L "write_ext_eeprom" 6 2 1 "FUNCTION"
C L "write_ext_eeprom" 6 2 1 "FUNCTION"
C L "write_ext_eeprom" 6 2 1 "FUNCTION"
C L "write_ext_eeprom" 6 2 1 "FUNCTION"
C L "write_ext_eeprom" 6 2 1 "FUNCTION"
C L "write_ext_eeprom" 6 2 1 "FUNCTION"
C L "write_ext_eeprom" 6 2 1 "FUNCTION"
C L "write_ext_eeprom" 6 2 1 "FUNCTION"
C L "write_ext_eeprom" 6 2 1 "FUNCTION"
V L "address" 6 117 "sint32" `1704 
F G "read_ext_eeprom" 6 117 "int8(sint32 address,*sint8 s1,*sint8 s2,int16 n)" `1703 
V L "i" 6 118 "int8" `1705 
V L "data" 6 118 "int8" `1706 
V L "cmd" 6 119 "int8[3]" `1707 
C L "read_ext_eeprom" 6 2 1 "FUNCTION"
C L "read_ext_eeprom" 6 2 1 "FUNCTION"
C L "read_ext_eeprom" 6 2 1 "FUNCTION"
C L "read_ext_eeprom" 6 2 1 "FUNCTION"
C L "read_ext_eeprom" 6 2 1 "FUNCTION"
C L "read_ext_eeprom" 6 2 1 "FUNCTION"
D G "__SPIFLASH_H" 1 368 "" "prevent spiflash.h from being loaded/used"
D G "SPIFlashReadArray" 1 369 "(dwAddress, pData, wLen)  read_ext_eeprom_buf(dwAddress, pData, wLen)"
D G "SPIFlashInit" 1 370 "()                             init_ext_eeprom()"
V G "g_SpiFlashCurrWrite" 1 371 "sint32" `1708 
D G "SPIFlashBeginWrite" 1 372 "(addy)                   g_SpiFlashCurrWrite=addy"
D G "SPIFlashWrite" 1 373 "(d)                           write_ext_eeprom(g_SpiFlashCurrWrite++, d)"
D G "SPIFlashStopWrite" 1 374 "()"
D G "SPIFlashWriteBytes" 1 375 "(dwAddress, pData, wLen) write_ext_eeprom_buf(dwAddress, pData, wLen)"
D G "LED_ACTIVITY_BLINK" 1 681 "()"
D G "STACK_USE_CCS_INI" 1 706 "0"
D G "UITask" 1 707 "()"
D G "GetSystemClock" 1 716 "()      getenv("CLOCK")"
D G "GetInstructionClock" 1 717 "()   (GetSystemClock()/4)"
D G "GetPeripheralClock" 1 718 "()   (unsigned int32)GetInstructionClock()"
D G "_STDINT" 7 19 ""
T G "int8_t" 7 23 "sint8" `1709 
T G "uint8_t" 7 24 "int8" `1710 
T G "int16_t" 7 25 "sint16" `1711 
T G "uint16_t" 7 26 "int16" `1712 
T G "int32_t" 7 27 "sint32" `1713 
T G "uint32_t" 7 28 "int32" `1714 
D G "INT8_MAX" 7 37 " (128)"
D G "INT8_MIN" 7 38 " (-127)"
D G "UINT8_MAX" 7 39 " (255)"
D G "INT16_MAX" 7 41 " (32767)"
D G "INT16_MIN" 7 42 " (-32768)"
D G "UINT16_MAX" 7 43 " (65535)"
D G "INT32_MAX" 7 45 " (2147483647)"
D G "INT32_MIN" 7 46 " (-2147483648)"
D G "UINT32_MAX" 7 47 " (4294967295)"
T G "int_least8_t" 7 61 "sint8" `1715 
T G "uint_least8_t" 7 62 "int8" `1716 
T G "int_least16_t" 7 63 "sint16" `1717 
T G "uint_least16_t" 7 64 "int16" `1718 
T G "int_least32_t" 7 65 "sint32" `1719 
T G "uint_least32_t" 7 66 "int32" `1720 
D G "INT_LEAST8_MAX" 7 75 " (128)"
D G "INT_LEAST8_MIN" 7 76 " (-127)"
D G "UINT_LEAST8_MAX" 7 77 " (255)"
D G "INT_LEAST16_MAX" 7 79 " (32767)"
D G "INT_LEAST16_MIN" 7 80 " (-32768)"
D G "UINT_LEAST16_MAX" 7 81 " (65535)"
D G "INT_LEAST32_MAX" 7 83 " (2147483647)"
D G "INT_LEAST32_MIN" 7 84 " (-2147483648)"
D G "UINT_LEAST32_MAX" 7 85 " (4294967295)"
T G "int_fast8_t" 7 112 "sint8" `1721 
T G "uint_fast8_t" 7 113 "int8" `1722 
D G "INT_FAST8_MAX" 7 114 " (128)"
D G "INT_FAST8_MIN" 7 115 " (-127)"
D G "UINT_FAST8_MAX" 7 116 " (255)"
T G "int_fast16_t" 7 117 "sint16" `1723 
T G "uint_fast16_t" 7 118 "int16" `1724 
T G "int_fast32_t" 7 121 "sint32" `1725 
T G "uint_fast32_t" 7 122 "int32" `1726 
D G "INT_FAST16_MAX" 7 124 " (32767)"
D G "INT_FAST16_MIN" 7 125 " (-32768)"
D G "UINT_FAST16_MAX" 7 126 " (65535)"
D G "INT_FAST32_MAX" 7 128 " (2147483647)"
D G "INT_FAST32_MIN" 7 129 " (-2147483648)"
D G "UINT_FAST32_MAX" 7 130 " (4294967295)"
D G "MIN" 1 727 "(a,b)  ((a > b) ? b : a)"
D G "__CCS_STACKTSK2_H__" 8 8 ""
D G "debug_mpfs2" 8 11 "(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q)"
D G "SIZEOF_MAC_HEADER" 8 20 "14"
D G "__DELAY_H" 8 23 ""
D G "Delay10us" 8 24 "(x) delay_us((uint16_t)10*(uint16_t)x)"
D G "DelayMs" 8 25 "(x)   delay_ms(x)"
D G "__WF_DEBUG_STRINGS_H" 8 27 "" "don't include this file"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
D G "__TCPIP_HITECH_WORKAROUND_H" 9 50 ""
D G "TCPIP_STACK_VERSION" 9 52 ""v5.42"		" "TCP/IP stack version"
D G "_STRING" 10 12 ""
D G "_STDDEF" 11 13 ""
D G "ptrdiff_t" 11 18 "unsigned int16"
D G "size_t" 11 24 "unsigned int16"
D G "wchar_t" 11 26 "char"
D G "NULL" 11 27 "0"
D G "offsetof" 11 29 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 12 12 ""
D G "islower" 12 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 12 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 12 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 12 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 12 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 12 19 "(x)  ((x)==' ')"
D G "isxdigit" 12 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 12 21 "(x)  ((x)<' ')"
D G "isprint" 12 22 "(x)  ((x)>=' ')"
D G "isgraph" 12 23 "(x)  ((x)>' ')"
D G "ispunct" 12 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "memmove" 10 19 10 "FUNCTION"
V L "s1" 10 34 "*int8" `1728 
V L "s2" 10 34 "*sint8" `1729 
V L "n" 10 34 "int16" `1730 
F G "memmove" 10 35 "*sint8(*int8 s1,*sint8 s2,int16 n)" `1727 
V L "sc1" 10 36 "*sint8" `1731 
V L "sc2" 10 37 "*sint8" `1732 
D G "strcopy" 10 54 "strcpy"
C L "strncpy" 10 19 4 "FUNCTION"
V L "s1" 10 61 "*sint8" `1734 
V L "s2" 10 61 "*sint8" `1735 
V L "n" 10 61 "int16" `1736 
F G "strncpy" 10 62 "*sint8(*sint8 s1,*sint8 s2,int16 n)" `1733 
V L "s" 10 63 "*sint8" `1737 
C L "strcat" 10 19 3 "FUNCTION"
V L "s1" 10 78 "*sint8" `1739 
V L "s2" 10 78 "*sint8" `1740 
F G "strcat" 10 79 "*sint8(*sint8 s1,*sint8 s2,*sint8 s1,*sint8 s2)" `1738 
V L "s" 10 80 "*sint8" `1741 
C L "strncat" 10 19 2 "FUNCTION"
V L "s1" 10 96 "*sint8" `1743 
V L "s2" 10 96 "*sint8" `1744 
V L "n" 10 96 "int16" `1745 
F G "strncat" 10 97 "*sint8(*sint8 s1,*sint8 s2,int16 n,*sint8 s1,*sint8 s2)" `1742 
V L "s" 10 98 "*sint8" `1746 
C L "memcmp" 10 19 3 "FUNCTION"
V L "s1" 10 120 "*int8" `1748 
V L "s2" 10 120 "*sint8" `1749 
V L "n" 10 120 "int16" `1750 
F G "memcmp" 10 121 "sint8(*int8 s1,*sint8 s2,int16 n,*sint8 s,int8 c)" `1747 
V L "su1" 10 122 "*sint8" `1751 
V L "su2" 10 122 "*sint8" `1752 
C L "strcmp" 10 19 2 "FUNCTION"
V L "s1" 10 134 "*sint8" `1754 
V L "s2" 10 134 "*sint8" `1755 
F G "strcmp" 10 135 "sint8(*sint8 s1,*sint8 s2,*sint8 s2)" `1753 
C L "strcoll" 10 19 2 "FUNCTION"
V L "s1" 10 144 "*sint8" `1757 
V L "s2" 10 144 "*sint8" `1758 
F G "strcoll" 10 145 "sint8(*sint8 s1,*sint8 s2)" `1756 
C L "strncmp" 10 19 4 "FUNCTION"
V L "s1" 10 157 "*sint8" `1760 
V L "s2" 10 157 "*sint8" `1761 
V L "n" 10 157 "int16" `1762 
F G "strncmp" 10 158 "sint8(*sint8 s1,*sint8 s2,int16 n)" `1759 
C L "strxfrm" 10 19 3 "FUNCTION"
V L "s1" 10 169 "*sint8" `1764 
V L "s2" 10 169 "*sint8" `1765 
V L "n" 10 169 "int16" `1766 
F G "strxfrm" 10 170 "int16(*sint8 s1,*sint8 s2,int16 n)" `1763 
V L "s" 10 171 "*sint8" `1767 
V L "n1" 10 172 "int8" `1768 
C L "memchr" 10 19 3 "FUNCTION"
V L "s" 10 191 "*int8" `1770 
V L "c" 10 191 "int8" `1771 
V L "n" 10 191 "int16" `1772 
F G "memchr" 10 192 "*sint8(*int8 s,int8 c,int16 n)" `1769 
V L "uc" 10 193 "sint8" `1773 
V L "su" 10 194 "*sint8" `1774 
C L "strchr" 10 19 2 "FUNCTION"
V L "s" 10 205 "*sint8" `1776 
V L "c" 10 205 "int8" `1777 
F G "strchr" 10 206 "*sint8(*sint8 s,int8 c)" `1775 
C L "strcspn" 10 19 4 "FUNCTION"
V L "s1" 10 217 "*sint8" `1779 
V L "s2" 10 217 "*sint8" `1780 
F G "strcspn" 10 218 "int8(*sint8 s1,*sint8 s2)" `1778 
V L "sc1" 10 219 "*sint8" `1781 
V L "sc2" 10 219 "*sint8" `1782 
C L "strpbrk" 10 19 4 "FUNCTION"
V L "s1" 10 232 "*sint8" `1784 
V L "s2" 10 232 "*sint8" `1785 
F G "strpbrk" 10 233 "*sint8(*sint8 s1,*sint8 s2)" `1783 
V L "sc1" 10 234 "*sint8" `1786 
V L "sc2" 10 234 "*sint8" `1787 
C L "strrchr" 10 19 2 "FUNCTION"
V L "s" 10 247 "*sint8" `1789 
V L "c" 10 247 "int8" `1790 
F G "strrchr" 10 248 "*sint8(*sint8 s,int8 c)" `1788 
V L "p" 10 249 "*sint8" `1791 
C L "strspn" 10 19 2 "FUNCTION"
V L "s1" 10 262 "*sint8" `1793 
V L "s2" 10 262 "*sint8" `1794 
F G "strspn" 10 263 "int8(*sint8 s1,*sint8 s2,sint32 num,int16 strxfrm,*sint8 s)" `1792 
V L "sc1" 10 264 "*sint8" `1795 
V L "sc2" 10 264 "*sint8" `1796 
C L "strstr" 10 19 6 "FUNCTION"
V L "s1" 10 281 "*sint8" `1798 
V L "s2" 10 281 "*sint8" `1799 
F G "strstr" 10 282 "*sint8(*sint8 s1,*sint8 s2)" `1797 
V L "s" 10 283 "*sint8" `1800 
V L "t" 10 283 "*sint8" `1801 
C L "strtok" 10 19 13 "FUNCTION"
V L "s1" 10 320 "*sint8" `1803 
V L "s2" 10 320 "*sint8" `1804 
F G "strtok" 10 321 "*sint8(*sint8 s1,*sint8 s2,*sint8 s,*sint8 uc,sint16 strxfrm)" `1802 
V L "beg" 10 322 "*sint8" `1805 
V L "end" 10 322 "*sint8" `1806 
V L "save" 10 323 "*sint8" `1807 
C L "strlen" 10 19 6 "FUNCTION"
V L "s" 10 369 "*sint8" `1809 
F G "strlen" 10 370 "int8(*sint8 s,*sint8 uc)" `1808 
V L "sc" 10 371 "*sint8" `1810 
C L "stricmp" 10 19 2 "FUNCTION"
V L "s1" 10 380 "*sint8" `1812 
V L "s2" 10 380 "*sint8" `1813 
F G "stricmp" 10 381 "sint8(*sint8 s1,*sint8 s2)" `1811 
C L "strlwr" 10 19 3 "FUNCTION"
V L "s" 10 394 "*sint8" `1817 
F G "strlwr" 10 395 "*sint8(*sint8 s)" `1816 
V L "p" 10 396 "*sint8" `1818 
C L "strupr" 10 19 3 "FUNCTION"
V L "s" 10 408 "*sint8" `1820 
F G "strupr" 10 409 "*sint8(*sint8 s)" `1819 
V L "p" 10 410 "*sint8" `1821 
D G "_STDLIB" 13 12 ""
D G "RAND_MAX" 13 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 13 25 "1"
T G "div_t" 13 33 "{sint16 quot,sint16 rem}" `1825 
T G "ldiv_t" 13 38 "{sint32 quot,sint32 rem}" `1829  "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atoi" 11 3 6 "FUNCTION"
C L "atoi" 13 43 2 "FUNCTION"
C L "atoi" 13 46 1 "*"
C L "atoi" 13 46 1 "*"
V L "s" 13 50 "*sint8" `1831 
f G "atoi" 13 50 "sint16(*sint8 s)" `1830  "Syntax: signed int32  atoi32(char * s)"
D G "atoi32" 13 56 "(s) atol(s)"
C L "atoi" 13 46 3 "FUNCTION"
V L "num" 13 79 "sint32" `1833 
V L "base" 13 79 "int16" `1834 
V L "s" 13 79 "*sint8" `1835 
f G "itoa" 13 79 "*sint8(sint32 num,int16 base,*sint8 s,int32 ,int32 )" `1832  "Standard template: signed int16  atol(char * s)"
C L "itoa" 13 81 1 "*"
C L "itoa" 13 81 1 "*"
V L "s" 13 85 "*sint8" `1837 
f G "atol" 13 85 "sint32(*sint8 s)" `1836  "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 13 87 1 "*"
C L "atol" 13 87 1 "*"
C L "atol" 13 87 1 "*"
C L "atol" 13 87 1 "*"
V L "s" 13 93 "*sint8" `1839 
V L "endptr" 13 93 "*sint8" `1840 
V L "base" 13 93 "sint16" `1841 
f G "strtol" 13 93 "sint32(*sint8 s,*sint8 endptr,sint16 base)" `1838  "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 13 95 1 "*"
C L "strtol" 13 95 1 "*"
C L "strtol" 13 95 1 "*"
C L "strtol" 13 95 1 "*"
V L "s" 13 101 "*sint8" `1843 
V L "endptr" 13 101 "*sint8" `1844 
V L "base" 13 101 "sint16" `1845 
f G "strtoul" 13 101 "int32(*sint8 s,*sint8 endptr,sint16 base)" `1842  "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 13 95 2 "FUNCTION"
C L "strtoul" 13 103 1 "*"
C L "strtoul" 13 103 1 "*"
C L "strtoul" 13 103 1 "*"
V L "s" 13 110 "*sint8" `1847 
V L "endptr" 13 110 "*sint8" `1848 
f G "strtof" 13 110 "float(*sint8 s,*sint8 endptr,float )" `1846  "provided for compatibility"
D G "strtof48" 13 116 "(s, e) strtof(s, e)"
D G "strtod" 13 117 "(s, e) strtof(s, e)"
C L "strtof" 13 103 1 "FUNCTION"
C L "strtof" 13 120 1 "*"
D G "atof" 13 124 "(s)   strtof(s, 0)"
C L "strtof" 13 120 1 "FUNCTION"
C L "strtof" 13 143 1 "*"
C L "strtof" 13 143 1 "*"
C L "strtof" 13 143 1 "*"
V L "s" 13 149 "*sint8" `1850 
f G "atoe" 13 149 "float(*sint8 s,sint16 )" `1849  "Pseudo-random sequence generation functions"
C L "atoe" 13 143 1 "FUNCTION"
C L "atoe" 13 160 1 "*"
C L "atoe" 13 160 1 "*"
C L "atoe" 13 160 1 "*"
C L "atoe" 13 160 1 "*"
C L "atoe" 13 160 1 "*"
f G "rand" 13 169 "int16()" `1851  "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 13 171 1 "*"
C L "rand" 13 171 1 "*"
C L "rand" 13 171 1 "*"
C L "rand" 13 171 1 "*"
C L "rand" 13 171 1 "*"
C L "rand" 13 171 1 "*"
C L "rand" 13 171 1 "*"
C L "rand" 13 171 1 "*"
C L "rand" 13 171 1 "*"
C L "rand" 13 171 1 "*"
C L "rand" 13 171 1 "*"
C L "rand" 13 171 1 "*"
C L "rand" 13 171 1 "*"
C L "rand" 13 171 1 "*"
C L "rand" 13 171 1 "*"
V L "seed" 13 191 "int32" `1853 
f G "srand" 13 191 "void(int32 seed,float )" `1852  "Memory management functions"
C L "srand" 13 171 3 "FUNCTION"
V L "string" 13 205 "*sint8" `1855 
f G "system" 13 205 "sint8(*sint8 string,float ,float )" `1854  "Searching and sorting utilities"
C L "system" 13 171 1 "FUNCTION"
C L "system" 13 211 1 "*"
C L "system" 13 211 1 "*"
C L "system" 13 211 1 "*"
C L "system" 13 211 1 "*"
C L "system" 13 211 1 "*"
C L "system" 13 211 1 "*"
C L "system" 13 211 1 "*"
C L "system" 13 211 1 "*"
C L "system" 13 211 1 "*"
C L "system" 13 211 1 "*"
C L "system" 13 211 4 "*"
C L "system" 13 229 1 "*"
C L "system" 13 229 1 "*"
C L "system" 13 229 1 "*"
C L "system" 13 229 1 "*"
C L "system" 13 229 1 "*"
C L "system" 13 229 1 "*"
C L "system" 13 229 1 "*"
C L "system" 13 229 1 "*"
D G "labs" 13 249 "abs"
V L "numer" 13 251 "sint16" `1857 
V L "denom" 13 251 "sint16" `1858 
f G "div" 13 251 "div_t(sint16 numer,sint16 denom)" `1856 
V L "numer" 13 252 "sint32" `1860 
V L "denom" 13 252 "sint32" `1861 
f G "ldiv" 13 252 "ldiv_t(sint32 numer,sint32 denom)" `1859  "Multibyte character functions"
C L "ldiv" 13 229 4 "FUNCTION"
C L "ldiv" 11 2 7 "FUNCTION"
C L "ldiv" 10 2 7 "FUNCTION"
V L "numer" 13 274 "sint16" `1857 
V L "denom" 13 274 "sint16" `1864 
F G "div" 13 275 "div_t(sint16 numer,sint16 denom)" `1856 
V L "val" 13 276 "div_t" `1862 
V L "numer" 13 282 "sint32" `1860 
V L "denom" 13 282 "sint32" `1871 
F G "ldiv" 13 283 "ldiv_t(sint32 numer,sint32 denom)" `1859 
V L "val" 13 284 "ldiv_t" `1869 
V L "s" 13 361 "*sint8" `1877 
F G "atoe" 13 362 "float(*sint8 s)" `1849 
V L "pow10" 13 363 "float" `1876 
V L "result" 13 364 "float" `1877 
V L "sign" 13 365 "int8" `1878 
V L "expsign" 13 366 "int8" `1879 
V L "c" 13 367 "sint8" `1880 
V L "ptr" 13 368 "int8" `1881 
V L "i" 13 369 "int8" `1882 
V L "exp" 13 370 "float" `1883 
V L "expcnt" 13 371 "int8" `1884 
C L "atoe" 13 397 1 "FUNCTION"
V L "s" 13 429 "*sint8" `1897 
F G "atoi" 13 430 "sint16(*sint8 s)" `1830 
V L "result" 13 431 "sint16" `1896 
V L "sign" 13 432 "int16" `1897 
V L "base" 13 432 "int16" `1898 
V L "index" 13 432 "int16" `1899 
V L "c" 13 433 "sint8" `1900 
C L "atoi" 13 397 1 "FUNCTION"
C L "atoi" 13 397 1 "FUNCTION"
C L "atoi" 13 397 1 "FUNCTION"
C L "atoi" 13 397 1 "FUNCTION"
C L "atoi" 13 397 1 "FUNCTION"
C L "atoi" 13 397 1 "FUNCTION"
V L "s" 13 498 "*sint8" `1902 
F G "atol" 13 499 "sint32(*sint8 s)" `1836 
V L "result" 13 500 "sint32" `1901 
V L "sign" 13 501 "int16" `1902 
V L "base" 13 501 "int16" `1903 
V L "index" 13 501 "int16" `1904 
V L "c" 13 502 "sint8" `1905 
C L "atol" 13 397 1 "FUNCTION"
C L "atol" 13 397 1 "FUNCTION"
C L "atol" 13 397 1 "FUNCTION"
C L "atol" 13 397 1 "FUNCTION"
C L "mult_with10" 13 397 1 "FUNCTION"
V L "num" 13 565 "sint32" `1907 
F G "mult_with10" 13 566 "sint32(sint32 num,*sint8 ldiv,*sint8 s,int16 n)" `1906 
V L "num" 13 770 "sint32" `1833 
V L "base" 13 770 "int16" `1834 
V L "s" 13 770 "*sint8" `1911 
F G "itoa" 13 771 "*sint8(sint32 num,int16 base,*sint8 s)" `1832 
V L "temp" 13 772 "int32" `1908 
V L "i" 13 773 "int8" `1909 
V L "sign" 13 773 "int8" `1910 
V L "cnt" 13 773 "int8" `1911 
V L "c" 13 774 "sint8" `1912 
C L "itoa" 13 397 1 "FUNCTION"
C L "itoa" 13 397 1 "FUNCTION"
C L "itoa" 13 397 1 "FUNCTION"
C L "itoa" 13 397 1 "FUNCTION"
C L "itoa" 13 397 1 "FUNCTION"
V L "s" 13 885 "*sint8" `1847 
V L "endptr" 13 885 "*sint8" `1915 
F G "strtof" 13 886 "float(*sint8 s,*sint8 endptr)" `1846 
V L "pow10" 13 887 "float" `1913 
V L "result" 13 888 "float" `1914 
V L "skip" 13 889 "int1" `1915 
V L "sign" 13 889 "int1" `1916 
V L "point" 13 889 "int1" `1917 
V L "c" 13 890 "sint8" `1918 
V L "ptr" 13 891 "int8" `1919 
V L "s" 13 1103 "*sint8" `1843 
V L "endptr" 13 1103 "*sint8" `1844 
V L "base" 13 1103 "sint16" `1924 
F G "strtoul" 13 1104 "int32(*sint8 s,*sint8 endptr,sint16 base)" `1842 
V L "sc" 13 1105 "*sint8" `1921 
V L "s1" 13 1105 "*sint8" `1922 
V L "sd" 13 1105 "*sint8" `1923 
V L "x" 13 1106 "int32" `1924 
V L "sign" 13 1107 "sint8" `1925 
V L "digits" 13 1108 "sint8[1]" `1926 
C L "strtoul" 13 397 1 "FUNCTION"
C L "strtoul" 13 397 1 "FUNCTION"
C L "strtoul" 13 397 1 "FUNCTION"
V L "s" 13 1165 "*sint8" `1839 
V L "endptr" 13 1165 "*sint8" `1840 
V L "base" 13 1165 "sint16" `1931 
F G "strtol" 13 1166 "sint32(*sint8 s,*sint8 endptr,sint16 base)" `1838 
V L "sc" 13 1167 "*sint8" `1928 
V L "s1" 13 1167 "*sint8" `1929 
V L "sd" 13 1167 "*sint8" `1930 
V L "x" 13 1168 "sint32" `1931 
V L "sign" 13 1169 "sint8" `1932 
V L "digits" 13 1170 "sint8[1]" `1933 
C L "strtol" 13 397 1 "FUNCTION"
C L "strtol" 13 397 1 "FUNCTION"
C L "strtol" 13 397 1 "FUNCTION"
V L "string" 13 1228 "*sint8" `1936 
F G "system" 13 1229 "sint8(*sint8 string)" `1854 
V L "s" 13 1233 "*sint8" `1936 
V L "n" 13 1233 "int16" `1937 
F G "mblen" 13 1234 "sint8(*sint8 s,int16 n)" `1935 
V L "pwc" 13 1238 "*sint8" `1939 
V L "s" 13 1238 "*sint8" `1940 
V L "n" 13 1238 "int16" `1941 
F G "mbtowc" 13 1239 "sint8(*sint8 pwc,*sint8 s,int16 n,int16 point,s1 @MULFF)" `1938 
V L "s" 13 1244 "*sint8" `1943 
V L "wchar" 13 1244 "sint8" `1944 
F G "wctomb" 13 1245 "sint8(*sint8 s,sint8 wchar)" `1942 
V L "pwcs" 13 1250 "*sint8" `1946 
V L "s" 13 1250 "*sint8" `1947 
V L "n" 13 1250 "int16" `1948 
F G "mbstowcs" 13 1251 "int16(*sint8 pwcs,*sint8 s,int16 n)" `1945 
V L "s" 13 1256 "*sint8" `1950 
V L "pwcs" 13 1256 "*sint8" `1951 
V L "n" 13 1256 "int16" `1952 
F G "wcstombs" 13 1257 "int16(*sint8 s,*sint8 pwcs,int16 n)" `1949 
V G "_Randseed" 13 1266 "int32" `1953 
F G "rand" 13 1269 "int16()" `1851 
V L "seed" 13 1274 "int32" `1958 
F G "srand" 13 1275 "void(int32 seed)" `1852 
V L "p1" 13 1284 "*sint8" `1958 
V L "p2" 13 1284 "*sint8" `1959 
T G "*_Cmpfun" 13 1284 "sint8(*sint8 p1,*sint8 p2)" `1957 
V L "qdata" 13 1291 "*sint8" `1962 
V L "qitems" 13 1291 "int16" `1963 
V L "qsize" 13 1291 "int16" `1964 
V L "cmp" 13 1291 "_Cmpfun" `1965 
F G "qsort" 13 1291 "void(*sint8 qdata,int16 qitems,int16 qsize,_Cmpfun cmp)" `1961 
V L "m" 13 1292 "int16" `1966 
V L "j" 13 1292 "int16" `1967 
V L "i" 13 1292 "int16" `1968 
V L "l" 13 1292 "int16" `1969 
V L "done" 13 1293 "int1" `1970 
V L "t" 13 1294 "int8[16]" `1971 
V L "key" 13 1319 "*sint8" `1977 
V L "base" 13 1319 "*sint8" `1978 
V L "num" 13 1319 "int16" `1979 
V L "width" 13 1319 "int16" `1980 
V L "cmp" 13 1319 "_Cmpfun" `1981 
F G "bsearch" 13 1320 "*sint8(*sint8 key,*sint8 base,int16 num,int16 width,_Cmpfun cmp)" `1976 
V L "p" 13 1321 "*sint8" `1982 
V L "q" 13 1321 "*sint8" `1983 
V L "n" 13 1322 "int16" `1984 
V L "pivot" 13 1323 "int16" `1985 
V L "val" 13 1324 "sint16" `1986 
C L "bsearch" 13 397 1 "FUNCTION"
D G "__GENERIC_TYPE_DEFS_H_" 14 48 ""
D G "__EXTENSION" 14 54 ""
D G "__PACKED" 14 58 ""
E G "FALSE" 14 64 "0" `1988 
E G "TRUE" 14 64 "1" `1989 
T G "BOOL" 14 64 "_BOOL" `1990  "Undefined size *"
E G "CLEAR" 14 65 "0" `1992 
E G "SET" 14 65 "1" `1993 
T G "BIT" 14 65 "_BIT" `1994 
D G "PUBLIC" 14 67 "" "Function attributes"
D G "PROTECTED" 14 68 ""
D G "PRIVATE" 14 69 "static"
T G "INT" 14 72 "sint16" `1995 
T G "INT8" 14 73 "sint8" `1996 
T G "INT16" 14 74 "sint16" `1997 
T G "INT32" 14 75 "sint32" `1998  "MPLAB C Compiler for PIC18 does not support 64-bit integers *"
T G "UINT" 14 83 "int16" `1999 
T G "UINT8" 14 84 "int8" `2000 
T G "UINT16" 14 85 "int16" `2001  "24-bit type only available on C18 *"
T G "UINT32" 14 90 "int32" `2002  "other name for 32-bit integer *"
T G "UINT8_VAL" 14 110 "{UINT8 Val}" `2015 
T G "UINT8_BITS" 14 110 "{UINT8 Val}" `2016 
T G "UINT16_VAL" 14 140 "{UINT16 Val,UINT8[2] v}" `2042 
T G "UINT16_BITS" 14 140 "{UINT16 Val,UINT8[2] v}" `2043  "24-bit type only available on C18 *"
T G "UINT32_VAL" 14 241 "{UINT32 Val,UINT16[2] w,UINT8[4] v}" `2096  "MPLAB C Compiler for PIC18 does not support 64-bit integers *"
T G "VOID" 14 336 "void" `2097 
T G "CHAR8" 14 338 "sint8" `2098 
T G "UCHAR8" 14 339 "int8" `2099 
T G "BYTE" 14 344 "int8" `2100  "8-bit unsigned  *"
T G "WORD" 14 345 "int16" `2101  "16-bit unsigned *"
T G "DWORD" 14 346 "int32" `2102  "32-bit unsigned *"
T G "QWORD" 14 349 "?" `2103  "64-bit unsigned *"
T G "CHAR" 14 350 "sint8" `2104  "8-bit signed    *"
T G "SHORT" 14 351 "sint16" `2105  "16-bit signed   *"
T G "LONG" 14 352 "sint32" `2106  "32-bit signed   *"
T G "LONGLONG" 14 355 "?" `2107  "64-bit signed   *"
T G "BYTE_VAL" 14 370 "{BYTE Val}" `2120 
T G "BYTE_BITS" 14 370 "{BYTE Val}" `2121 
T G "WORD_VAL" 14 400 "{WORD Val,BYTE[2] v}" `2147 
T G "WORD_BITS" 14 400 "{WORD Val,BYTE[2] v}" `2148 
T G "DWORD_VAL" 14 459 "{DWORD Val,WORD[2] w,BYTE[4] v}" `2201  "MPLAB C Compiler for PIC18 does not support 64-bit integers *"
T G "QWORD_VAL" 14 547 "{QWORD Val,DWORD[2] d,WORD[4] w,BYTE[8] v}" `2283  "__GENERIC_TYPE_DEFS_H_ *"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
D G "__COMPILER_H" 15 56 ""
D G "COMPILER_MPLAB_C18" 15 61 ""
D G "_STDIO" 17 12 ""
D G "PTR_BASE" 15 123 "unsigned int16"
D G "ROM_PTR_BASE" 15 124 "unsigned int32"
D G "__attribute__" 15 162 "(a)"
D G "FAR" 15 164 "far"
D G "ROM" 15 168 "rom"
D G "__HARDWAREPROFILE_H__" 18 4 ""
D G "NETWORK_INTERFACES" 9 64 " (1u)	"
C G "" 9 66 1 "*"
C G "" 9 66 1 "*"
D G "TCP_ETH_RAM" 9 72 "0u"
D G "TCP_ETH_RAM_BASE_ADDRESS" 9 74 " (BASE_TCB_ADDR)"
D G "TCP_PIC_RAM" 9 76 "1u"
D G "TCP_PIC_RAM_BASE_ADDRESS" 9 78 " ((PTR_BASE)&TCPBufferInPIC[0])"
D G "TCP_SPI_RAM" 9 80 "2u"
C G "" 9 82 1 "*"
C G "" 9 82 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
C G "" 19 9 1 "*"
D G "__TCPIPCONFIG_H" 19 62 ""
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 19 71 1 "*"
C G "" 19 71 35 "*"
C G "" 19 113 1 "*"
C G "" 19 113 1 "*"
C G "" 19 113 4 "*"
C G "" 19 121 1 "*"
C G "" 19 121 1 "*"
C G "" 19 121 1 "*"
C G "" 19 121 1 "*"
C G "" 19 121 1 "*"
C G "" 19 121 4 "*"
C G "" 19 133 3 "*"
C G "" 19 138 1 "*"
C G "" 19 138 1 "*"
C G "" 19 138 1 "*"
C G "" 19 138 1 "*"
C G "" 19 138 3 "*"
C G "" 19 148 1 "*"
C G "" 19 148 4 "*"
C G "" 19 159 1 "*"
C G "" 19 159 1 "*"
D G "MY_DEFAULT_HOST_NAME" 19 164 ""CCS_EXAMPLES""
D G "MY_DEFAULT_MAC_BYTE1" 19 173 " (0x00)" "Use the default of 00-04-A3-00-00-00"
D G "MY_DEFAULT_MAC_BYTE2" 19 174 " (0x20)" "if using an ENCX24J600, MRF24WB0M, or"
D G "MY_DEFAULT_MAC_BYTE3" 19 175 " (0x30)" "PIC32MX6XX/7XX internal Ethernet"
D G "MY_DEFAULT_MAC_BYTE4" 19 176 " (0x40)" "controller and wish to use the"
D G "MY_DEFAULT_MAC_BYTE5" 19 177 " (0x50)" "internal factory programmed MAC"
D G "MY_DEFAULT_MAC_BYTE6" 19 178 " (0x60)" "address instead."
D G "MY_DEFAULT_IP_ADDR_BYTE1" 19 180 " (192ul)"
D G "MY_DEFAULT_IP_ADDR_BYTE2" 19 181 " (168ul)"
D G "MY_DEFAULT_IP_ADDR_BYTE3" 19 182 " (100ul)"
D G "MY_DEFAULT_IP_ADDR_BYTE4" 19 183 " (120ul)"
D G "MY_DEFAULT_MASK_BYTE1" 19 185 " (255ul)"
D G "MY_DEFAULT_MASK_BYTE2" 19 186 " (255ul)"
D G "MY_DEFAULT_MASK_BYTE3" 19 187 " (255ul)"
D G "MY_DEFAULT_MASK_BYTE4" 19 188 " (0ul)"
D G "MY_DEFAULT_GATE_BYTE1" 19 190 " (192ul)"
D G "MY_DEFAULT_GATE_BYTE2" 19 191 " (168ul)"
D G "MY_DEFAULT_GATE_BYTE3" 19 192 " (100ul)"
D G "MY_DEFAULT_GATE_BYTE4" 19 193 " (1ul)"
D G "MY_DEFAULT_PRIMARY_DNS_BYTE1" 19 195 " (192ul)"
D G "MY_DEFAULT_PRIMARY_DNS_BYTE2" 19 196 " (168ul)"
D G "MY_DEFAULT_PRIMARY_DNS_BYTE3" 19 197 " (100ul)"
D G "MY_DEFAULT_PRIMARY_DNS_BYTE4" 19 198 " (1ul)"
D G "MY_DEFAULT_SECONDARY_DNS_BYTE1" 19 200 " (0ul)"
D G "MY_DEFAULT_SECONDARY_DNS_BYTE2" 19 201 " (0ul)"
D G "MY_DEFAULT_SECONDARY_DNS_BYTE3" 19 202 " (0ul)"
D G "MY_DEFAULT_SECONDARY_DNS_BYTE4" 19 203 " (0ul)"
C G "" 19 234 1 "*"
C G "" 19 234 1 "*"
C G "" 19 234 4 "*"
C G "" 19 242 1 "*"
C G "" 19 242 1 "*"
D G "STACK_CLIENT_MODE" 19 247 ""
C G "" 19 249 1 "*"
C G "" 19 249 1 "*"
D G "TCP_PIC_RAM_SIZE" 19 259 " (0ul)"
D G "TCP_SPI_RAM_SIZE" 19 260 " (0ul)"
D G "TCP_SPI_RAM_BASE_ADDRESS" 19 261 " (0x00)"
D G "TCP_SOCKET_TYPES" 19 264 ""
D G "TCP_PURPOSE_GENERIC_TCP_CLIENT" 19 265 "0"
D G "TCP_PURPOSE_GENERIC_TCP_SERVER" 19 266 "1"
D G "TCP_PURPOSE_TELNET" 19 267 "2"
D G "TCP_PURPOSE_FTP_COMMAND" 19 268 "3"
D G "TCP_PURPOSE_FTP_DATA" 19 269 "4"
D G "TCP_PURPOSE_TCP_PERFORMANCE_TX" 19 270 "5"
D G "TCP_PURPOSE_TCP_PERFORMANCE_RX" 19 271 "6"
D G "TCP_PURPOSE_UART_2_TCP_BRIDGE" 19 272 "7"
D G "TCP_PURPOSE_HTTP_SERVER" 19 273 "8"
D G "TCP_PURPOSE_DEFAULT" 19 274 "9"
D G "TCP_PURPOSE_BERKELEY_SERVER" 19 275 "10"
D G "TCP_PURPOSE_BERKELEY_CLIENT" 19 276 "11"
D G "END_OF_TCP_SOCKET_TYPES" 19 277 ""
T G "TCPSocketInitializer_t" 19 286 "{BYTE vSocketPurpose,BYTE vMemoryMedium,WORD wTXBufferSize,WORD wRXBufferSize}" `2289 
V G "TCPSocketInitializer" 19 289 "TCPSocketInitializer_t[1]" `2290 
D G "MAX_HTTP_CONNECTIONS" 19 314 "1"
D G "MAX_UDP_SOCKETS" 19 318 "7"
C G "" 19 321 1 "*"
C G "" 19 321 4 "*"
C G "" 19 329 1 "*"
C G "" 19 329 1 "*"
C G "" 19 329 1 "*"
C G "" 19 329 1 "*"
C G "" 19 329 1 "*"
C G "" 19 329 1 "*"
C G "" 19 329 1 "*"
D G "SSL_RSA_KEY_SIZE" 19 405 " (512ul)"
C G "" 9 88 1 "*"
C G "" 9 88 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 2 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
D G "__STACK_TSK_H" 20 62 ""
T G "MAC_ADDR" 20 82 "{BYTE[6] v}" `2293  "Definition to represent an IP address"
D G "IP_ADDR" 20 85 "DWORD_VAL"
T G "NODE_INFO" 20 92 "{DWORD_VAL IPAddr,MAC_ADDR MACAddr}" `2297  "Application-dependent structure used to contain address information"
T G "APP_CONFIG" 20 141 "{DWORD_VAL MyIPAddr,DWORD_VAL MyMask,DWORD_VAL MyGateway,DWORD_VAL PrimaryDNSServer,DWORD_VAL SecondaryDNSServer,DWORD_VAL DefaultIPAddr,DWORD_VAL DefaultMask,BYTE[16] NetBIOSName}" `2313 
V G "AppConfig" 20 144 "APP_CONFIG" `2314 
f G "StackInit" 20 148 "void(*sint8 searchString,int16 count,sint8 c)" `2315 
f G "StackTask" 20 149 "void(int16 count,sint8 c)" `2316 
f G "StackApplications" 20 150 "void(sint8 c)" `2317  "Header file for Helpers.c"
D G "__HELPERS_H" 21 52 ""
C L "StackApplications" 21 1 1 "FUNCTION"
D G "DebugPrint" 21 78 "(a)"
V L "dwSeed" 21 81 "DWORD" `2319 
f G "LFSRSeedRand" 21 81 "DWORD(DWORD dwSeed,*sint8 dwSeed,int16 destSize,sint16 nStrings,*int8 _VA_LIST)" `2318 
f G "LFSRRand" 21 82 "WORD(int16 LFSRRand,sint16 nStrings,*int8 _VA_LIST)" `2320 
f G "GenerateRandomDWORD" 21 83 "DWORD(sint16 GenerateRandomDWORD,*int8 _VA_LIST)" `2321 
V L "Value" 21 84 "WORD" `2323 
V L "Buffer" 21 84 "*BYTE" `2324 
f G "uitoa" 21 84 "void(WORD Value,*BYTE Buffer,*AppConfig NetBIOSName,* bIsDHCPEnabled)" `2322 
V L "URL" 21 85 "*BYTE" `2326 
f G "UnencodeURL" 21 85 "void(*BYTE URL)" `2325 
V L "cSourceData" 21 86 "*BYTE" `2328 
V L "wSourceLen" 21 86 "WORD" `2329 
V L "cDestData" 21 86 "*BYTE" `2330 
V L "wDestLen" 21 86 "WORD" `2331 
f G "Base64Decode" 21 86 "WORD(*BYTE cSourceData,WORD wSourceLen,*BYTE cDestData,WORD wDestLen,* URL,b0 count)" `2327 
V L "cSourceData" 21 87 "*BYTE" `2333 
V L "wSourceLen" 21 87 "WORD" `2334 
V L "cDestData" 21 87 "*BYTE" `2335 
V L "wDestLen" 21 87 "WORD" `2336 
f G "Base64Encode" 21 87 "WORD(*BYTE cSourceData,WORD wSourceLen,*BYTE cDestData,WORD wDestLen)" `2332 
V L "str" 21 88 "*BYTE" `2338 
V L "IPAddress" 21 88 "*DWORD_VAL" `2339 
f G "StringToIPAddress" 21 88 "int8(*BYTE str,*DWORD_VAL IPAddress)" `2337 
V L "Dest" 21 89 "*BYTE" `2341 
V L "BufferLen" 21 89 "BYTE" `2342 
f G "ReadStringUART" 21 89 "BYTE(*BYTE Dest,BYTE BufferLen)" `2340 
V L "AsciiChars" 21 90 "WORD_VAL" `2344 
f G "hexatob" 21 90 "BYTE(WORD_VAL AsciiChars)" `2343 
V L "b" 21 91 "BYTE" `2346 
f G "btohexa_high" 21 91 "BYTE(BYTE b,* Dest,? BufferLen,* hexatob,*b0 AsciiChars,* btohexa_high,*b0 b,* vHostname,*b0 wHostnameLen,*b0 wPort,* vFilePath,*b0 wFilePathLen)" `2345 
V L "b" 21 92 "BYTE" `2348 
f G "btohexa_low" 21 92 "BYTE(BYTE b,* hexatob,*b0 AsciiChars,* btohexa_high,*b0 b,* btohexa_low,*b0 wHostnameLen,*b0 wPort,* vFilePath,*b0 wFilePathLen)" `2347 
V L "a" 21 93 "*BYTE" `2350 
V L "b" 21 93 "*" `2351 
f G "stricmppgm2ram" 21 93 "sint8(*BYTE a,* b,*b0 b,* btohexa_low,*b0 stricmppgm2ram,*b0 a,* vFilePath,*b0 wFilePathLen)" `2349 
V L "searchString" 21 94 "*sint8" `2354 
V L "count" 21 94 "int16" `2355 
V L "c" 21 94 "sint8" `2356 
f G "strnchr" 21 94 "*sint8(*sint8 searchString,int16 count,sint8 c,*b0 searchString)" `2353 
V L "destStr" 21 95 "*sint8" `2358 
V L "destSize" 21 95 "int16" `2359 
V L "nStrings" 21 95 "sint16" `2360 
f G "strncpy_m" 21 95 "int16(*sint8 destStr,int16 destSize,sint16 nStrings,*int8 _VA_LIST,b0 wMaxLen,int8 bSearchCaseInsensitive)" `2357 
V L "str" 21 98 "*" `2363 
V L "IPAddress" 21 98 "*DWORD_VAL" `2364 
f G "ROMStringToIPAddress" 21 98 "int8(* str,*DWORD_VAL IPAddress)" `2362 
V L "v" 21 105 "WORD" `2366 
f G "swaps" 21 105 "WORD(WORD v)" `2365 
V L "v" 21 110 "DWORD" `2368 
f G "swapl" 21 110 "DWORD(DWORD v)" `2367 
V L "buffer" 21 113 "*BYTE" `2370 
V L "len" 21 113 "WORD" `2371 
f G "CalcIPChecksum" 21 113 "WORD(*BYTE buffer,WORD len)" `2369 
V L "val" 21 117 "DWORD" `2373 
V L "bits" 21 117 "BYTE" `2374 
f G "leftRotateDWORD" 21 117 "DWORD(DWORD val,BYTE bits)" `2372 
V L "Name" 21 123 "*" `2376 
f G "FormatNetBIOSName" 21 123 "void(* Name)" `2375  "Protocols understood by the ExtractURLFields() function.  IMPORTANT: If you"
C L "FormatNetBIOSName" 21 127 2 "FUNCTION"
E G "PROTOCOL_HTTP" 21 132 "0" `2379 
E G "PROTOCOL_HTTPS" 21 133 "1" `2380 
E G "PROTOCOL_MMS" 21 134 "2" `2381 
E G "PROTOCOL_RTSP" 21 135 "3" `2382 
T G "PROTOCOLS" 21 135 "" `2383 
V L "vURL" 21 137 "*BYTE" `2385 
V L "protocol" 21 137 "*PROTOCOLS" `2386 
V L "vUsername" 21 137 "*BYTE" `2387 
V L "wUsernameLen" 21 137 "*WORD" `2388 
V L "vPassword" 21 137 "*BYTE" `2389 
V L "wPasswordLen" 21 137 "*WORD" `2390 
V L "vHostname" 21 137 "*BYTE" `2391 
V L "wHostnameLen" 21 137 "*WORD" `2392 
V L "wPort" 21 137 "*WORD" `2393 
V L "vFilePath" 21 137 "*BYTE" `2394 
V L "wFilePathLen" 21 137 "*WORD" `2395 
f G "ExtractURLFields" 21 137 "BYTE(*BYTE vURL,*PROTOCOLS protocol,*BYTE vUsername,*WORD wUsernameLen,*BYTE vPassword,*WORD wPasswordLen,*BYTE vHostname,*WORD wHostnameLen,*WORD wPort,*BYTE vFilePath,*WORD wFilePathLen)" `2384 
V L "vExpression" 21 138 "*BYTE" `2397 
V L "vFind" 21 138 "*" `2398 
V L "vReplacement" 21 138 "*" `2399 
V L "wMaxLen" 21 138 "WORD" `2400 
V L "bSearchCaseInsensitive" 21 138 "int8" `2401 
f G "Replace" 21 138 "SHORT(*BYTE vExpression,* vFind,* vReplacement,WORD wMaxLen,int8 bSearchCaseInsensitive)" `2396  "*                  General Delay rouines"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 22 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
C L "Replace" 23 1 1 "*"
D G "__TICK_H" 23 54 ""
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 9 1 1 "*"
C L "Replace" 23 58 5 "FUNCTION"
T G "TICK" 23 63 "DWORD" `2402  "This value is used by TCP and other modules to implement timeout actions."
D G "TICKS_PER_SECOND" 23 69 " ((GetPeripheralClock()+128ull)/256ull)	" "Internal core clock drives timer with 1:256 prescaler"
D G "TICK_SECOND" 23 73 " ((QWORD)TICKS_PER_SECOND)"
D G "TICK_MINUTE" 23 75 " ((QWORD)TICKS_PER_SECOND*60ull)"
D G "TICK_HOUR" 23 77 " ((QWORD)TICKS_PER_SECOND*3600ull)"
f G "TickInit" 23 80 "void()" `2403 
f G "TickGet" 23 81 "DWORD()" `2404 
f G "TickGetDiv256" 23 82 "DWORD()" `2405 
f G "TickGetDiv64K" 23 83 "DWORD()" `2406 
V L "dwTickValue" 23 84 "DWORD" `2408 
f G "TickConvertToMilliseconds" 23 84 "DWORD(DWORD dwTickValue)" `2407 
f G "TickUpdate" 23 85 "void()" `2409  "*                  MAC Module Defs for Microchip Stack"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
C L "TickUpdate" 24 1 1 "*"
D G "__MAC_H" 24 57 ""
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
C L "TickUpdate" 26 1 1 "*"
D G "__ETH97J60_H" 26 55 ""
C L "TickUpdate" 27 1 34 "FUNCTION"
T G "TXSTATUS" 26 82 "{BYTE[7] v}" `2434 
T G "RXSTATUS" 26 105 "{BYTE[4] v}" `2456  "* PHY Register Locations"
D G "PHCON1" 26 112 "0x00"
D G "PHSTAT1" 26 113 "0x01"
D G "PHCON2" 26 114 "0x10"
D G "PHSTAT2" 26 115 "0x11"
D G "PHIE" 26 116 "0x12"
D G "PHIR" 26 117 "0x13"
D G "PHLCON" 26 118 "0x14"
C L "TickUpdate" 26 125 1 "FUNCTION"
C L "TickUpdate" 26 125 1 "FUNCTION"
C L "TickUpdate" 26 125 1 "FUNCTION"
C L "TickUpdate" 26 125 1 "FUNCTION"
C L "TickUpdate" 26 125 1 "FUNCTION"
C L "TickUpdate" 26 125 1 "FUNCTION"
C L "TickUpdate" 26 125 1 "FUNCTION"
T G "PHYREG" 26 206 "{WORD Val,WORD_VAL VAL}" `2528  "* Individual Register Bits"
D G "EIE_PKTIE" 26 215 " (1<<6)"
D G "EIE_DMAIE" 26 216 " (1<<5)"
D G "EIE_LINKIE" 26 217 " (1<<4)"
D G "EIE_TXIE" 26 218 " (1<<3)"
D G "EIE_TXERIE" 26 219 " (1<<1)"
D G "EIE_RXERIE" 26 220 " (1)"
D G "EIR_PKTIF" 26 223 " (1<<6)"
D G "EIR_DMAIF" 26 224 " (1<<5)"
D G "EIR_LINKIF" 26 225 " (1<<4)"
D G "EIR_TXIF" 26 226 " (1<<3)"
D G "EIR_TXERIF" 26 227 " (1<<1)"
D G "EIR_RXERIF" 26 228 " (1)"
D G "ESTAT_BUFER" 26 231 " (1<<6)"
D G "ESTAT_RXBUSY" 26 232 " (1<<2)"
D G "ESTAT_TXABRT" 26 233 " (1<<1)"
D G "ESTAT_PHYRDY" 26 234 " (1)"
D G "ECON2_AUTOINC" 26 237 " (1<<7)"
D G "ECON2_PKTDEC" 26 238 " (1<<6)"
D G "ECON2_ETHEN" 26 239 " (1<<5)"
D G "ECON1_TXRST" 26 242 " (1<<7)"
D G "ECON1_RXRST" 26 243 " (1<<6)"
D G "ECON1_DMAST" 26 244 " (1<<5)"
D G "ECON1_CSUMEN" 26 245 " (1<<4)"
D G "ECON1_TXRTS" 26 246 " (1<<3)"
D G "ECON1_RXEN" 26 247 " (1<<2)"
D G "ERXFCON_UCEN" 26 250 " (1<<7)"
D G "ERXFCON_ANDOR" 26 251 " (1<<6)"
D G "ERXFCON_CRCEN" 26 252 " (1<<5)"
D G "ERXFCON_PMEN" 26 253 " (1<<4)"
D G "ERXFCON_MPEN" 26 254 " (1<<3)"
D G "ERXFCON_HTEN" 26 255 " (1<<2)"
D G "ERXFCON_MCEN" 26 256 " (1<<1)"
D G "ERXFCON_BCEN" 26 257 " (1)"
D G "MACON1_TXPAUS" 26 260 " (1<<3)"
D G "MACON1_RXPAUS" 26 261 " (1<<2)"
D G "MACON1_PASSALL" 26 262 " (1<<1)"
D G "MACON1_MARXEN" 26 263 " (1)"
D G "MACON3_PADCFG2" 26 266 " (1<<7)"
D G "MACON3_PADCFG1" 26 267 " (1<<6)"
D G "MACON3_PADCFG0" 26 268 " (1<<5)"
D G "MACON3_TXCRCEN" 26 269 " (1<<4)"
D G "MACON3_PHDREN" 26 270 " (1<<3)"
D G "MACON3_HFRMEN" 26 271 " (1<<2)"
D G "MACON3_FRMLNEN" 26 272 " (1<<1)"
D G "MACON3_FULDPX" 26 273 " (1)"
D G "MACON4_DEFER" 26 276 " (1<<6)"
D G "MICMD_MIISCAN" 26 279 " (1<<1)"
D G "MICMD_MIIRD" 26 280 " (1)"
D G "MISTAT_NVALID" 26 283 " (1<<2)"
D G "MISTAT_SCAN" 26 284 " (1<<1)"
D G "MISTAT_BUSY" 26 285 " (1)"
D G "EFLOCON_FCEN1" 26 288 " (1<<1)"
D G "EFLOCON_FCEN0" 26 289 " (1)"
D G "PHCON1_PDPXMD" 26 296 " (1ul<<8)"
D G "PHSTAT1_LLSTAT" 26 299 " (1ul<<2)"
D G "PHCON2_FRCLNK" 26 302 " (1ul<<14)"
D G "PHCON2_HDLDIS" 26 303 " (1ul<<8)"
D G "PHCON2_RXAPDIS" 26 304 " (1ul<<4)"
D G "PHSTAT2_TXSTAT" 26 307 " (1ul<<13)"
D G "PHSTAT2_RXSTAT" 26 308 " (1ul<<12)"
D G "PHSTAT2_COLSTAT" 26 309 " (1ul<<11)"
D G "PHSTAT2_LSTAT" 26 310 " (1ul<<10)"
D G "PHIE_PLNKIE" 26 313 " (1ul<<4)"
D G "PHIE_PGEIE" 26 314 " (1ul<<1)"
D G "PHIR_PLNKIF" 26 317 " (1ul<<4)"
D G "PHIR_PGIF" 26 318 " (1ul<<2)"
D G "PHLCON_LACFG3" 26 321 " (1ul<<11)"
D G "PHLCON_LACFG2" 26 322 " (1ul<<10)"
D G "PHLCON_LACFG1" 26 323 " (1ul<<9)"
D G "PHLCON_LACFG0" 26 324 " (1ul<<8)"
D G "PHLCON_LBCFG3" 26 325 " (1ul<<7)"
D G "PHLCON_LBCFG2" 26 326 " (1ul<<6)"
D G "PHLCON_LBCFG1" 26 327 " (1ul<<5)"
D G "PHLCON_LBCFG0" 26 328 " (1ul<<4)"
D G "PHLCON_LFRQ1" 26 329 " (1ul<<3)"
D G "PHLCON_LFRQ0" 26 330 " (1ul<<2)"
D G "PHLCON_STRCH" 26 331 " (1ul<<1)"
D G "MAC_TX_BUFFER_SIZE" 24 94 " (1500ul)"
C L "TickUpdate" 24 96 2 "FUNCTION"
T G "ETHER_HEADER" 24 108 "{MAC_ADDR DestMACAddr,MAC_ADDR SourceMACAddr,WORD_VAL Type}" `2533 
D G "MAC_IP" 24 111 " (0x00u)"
D G "MAC_ARP" 24 112 " (0x06u)"
D G "MAC_UNKNOWN" 24 113 " (0xFFu)"
D G "RESERVED_HTTP_MEMORY" 24 117 "0ul"
D G "RESERVED_SSL_MEMORY" 24 121 "0ul"
D G "RAMSIZE" 24 159 " (8*1024ul)"
D G "TXSTART" 24 160 " (RAMSIZE - (1ul+1518ul+7ul) - TCP_ETH_RAM_SIZE - RESERVED_HTTP_MEMORY - RESERVED_SSL_MEMORY)"
D G "RXSTART" 24 161 " (0ul)" "Should be an even memory address; must be 0 for errata"
D G "RXSTOP" 24 162 " ((TXSTART-2ul) | 0x0001ul)" "Odd for errata workaround"
D G "RXSIZE" 24 163 " (RXSTOP-RXSTART+1ul)"
D G "BASE_TX_ADDR" 24 164 " (TXSTART + 1ul)"
D G "BASE_TCB_ADDR" 24 165 " (BASE_TX_ADDR + (1514ul+7ul))"
D G "BASE_HTTPB_ADDR" 24 166 " (BASE_TCB_ADDR + TCP_ETH_RAM_SIZE)"
D G "BASE_SSLB_ADDR" 24 167 " (BASE_HTTPB_ADDR + RESERVED_HTTP_MEMORY)"
V L "offset" 24 174 "WORD" `2535 
V L "len" 24 174 "WORD" `2536 
f G "MACCalcRxChecksum" 24 174 "WORD(WORD offset,WORD len)" `2534 
V L "len" 24 175 "WORD" `2538 
f G "CalcIPBufferChecksum" 24 175 "WORD(WORD len,{int1 b0,int1 b1,int1 b2,int1 b3,int1 b4,int1 b5,int1 b6,int1 b7,int1 b8,int1 b9,int1 b10,int1 b11,int1 b12,int1 b13,int1 b14,int1 b15,int1 b16,int1 b17,int1 b18,int1 b19,int1 b20,int1 b21,int1 b22,int1 b23,int1 b24,int1 b25,int1 b26,int1 b27,int1 b28,int1 b29,int1 b30,int1 b31} type,b0 dataLen)" `2537 
f G "MACPowerDown" 24 177 "void(b0 MACPowerDown)" `2539 
f G "MACEDPowerDown" 24 178 "void()" `2540 
f G "MACPowerUp" 24 179 "void()" `2541 
V L "Register" 24 183 "BYTE" `2543 
V L "Data" 24 183 "WORD" `2544 
f G "WritePHYReg" 24 183 "void(BYTE Register,WORD Data,* stricmp,b0 Base64Decode)" `2542 
V L "Register" 24 184 "BYTE" `2546 
f G "ReadPHYReg" 24 184 "PHYREG(BYTE Register)" `2545 
V L "DestMACAddr" 24 186 "MAC_ADDR" `2548 
f G "SetRXHashTableEntry" 24 186 "void(MAC_ADDR DestMACAddr,*AppConfig stricmp,b0 Base64Decode)" `2547  "ENC28J60 specific"
V L "NewConfig" 24 189 "BYTE" `2550 
f G "SetCLKOUT" 24 189 "void(BYTE NewConfig)" `2549 
f G "GetCLKOUT" 24 190 "BYTE()" `2551  "* Macro:           void SetLEDConfig(WORD NewConfig)"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
C L "GetCLKOUT" 24 192 1 "*"
D G "SetLEDConfig" 24 240 "(NewConfig)      WritePHYReg(PHLCON, NewConfig)"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
C L "GetCLKOUT" 24 243 1 "*"
D G "GetLEDConfig" 24 289 "()      ReadPHYReg(PHLCON).Val"
f G "MACInit" 24 292 "void()" `2552 
f G "MACProcess" 24 293 "void()" `2553 
f G "MACIsLinked" 24 294 "int8()" `2554 
V L "remote" 24 296 "*MAC_ADDR" `2556 
V L "type" 24 296 "*BYTE" `2557 
f G "MACGetHeader" 24 296 "int8(*MAC_ADDR remote,*BYTE type)" `2555 
V L "offset" 24 297 "WORD" `2559 
f G "MACSetReadPtrInRx" 24 297 "void(WORD offset)" `2558 
V L "address" 24 298 "int16" `2561 
f G "MACSetWritePtr" 24 298 "int16(int16 address)" `2560 
V L "address" 24 299 "int16" `2563 
f G "MACSetReadPtr" 24 299 "int16(int16 address)" `2562 
f G "MACGet" 24 300 "BYTE()" `2564 
V L "val" 24 301 "*BYTE" `2566 
V L "len" 24 301 "WORD" `2567 
f G "MACGetArray" 24 301 "WORD(*BYTE val,WORD len)" `2565 
f G "MACDiscardRx" 24 302 "void()" `2568 
f G "MACGetFreeRxSize" 24 303 "WORD()" `2569 
V L "destAddr" 24 304 "int16" `2571 
V L "sourceAddr" 24 304 "int16" `2572 
V L "len" 24 304 "WORD" `2573 
f G "MACMemCopyAsync" 24 304 "void(int16 destAddr,int16 sourceAddr,WORD len)" `2570 
f G "MACIsMemCopyDone" 24 305 "int8(* localIP,*b41 RESERVED_HTTP_MEMORY,* BufferLen,*b0 Base64Decode)" `2574 
V L "remote" 24 307 "*MAC_ADDR" `2576 
V L "type" 24 307 "BYTE" `2577 
V L "dataLen" 24 307 "WORD" `2578 
f G "MACPutHeader" 24 307 "void(*MAC_ADDR remote,BYTE type,WORD dataLen)" `2575 
f G "MACIsTxReady" 24 308 "int8(b0 Offset)" `2579 
V L "val" 24 309 "BYTE" `2581 
f G "MACPut" 24 309 "void(BYTE val)" `2580 
V L "val" 24 310 "*BYTE" `2583 
V L "len" 24 310 "WORD" `2584 
f G "MACPutArray" 24 310 "void(*BYTE val,WORD len)" `2582 
f G "MACFlush" 24 311 "void()" `2585  "ROM function variants for PIC18"
V L "val" 24 316 "*" `2587 
V L "len" 24 316 "WORD" `2588 
f G "MACPutROMArray" 24 316 "void(* val,WORD len)" `2586  "PIC32MX with embedded ETHC functions"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
C L "MACPutROMArray" 28 1 1 "*"
D G "__IP_H" 28 55 ""
D G "IP_PROT_ICMP" 28 58 " (1u)"
D G "IP_PROT_TCP" 28 59 " (6u)"
D G "IP_PROT_UDP" 28 60 " (17u)"
C L "MACPutROMArray" 28 1 1 "FUNCTION"
T G "IP_HEADER" 28 76 "{BYTE VersionIHL,BYTE TypeOfService,WORD TotalLength,WORD Identification,WORD FragmentInfo,BYTE TimeToLive,BYTE Protocol,WORD HeaderChecksum,DWORD_VAL SourceAddress,DWORD_VAL DestAddress}" `2600  "IP Pseudo header as defined by RFC 793 (needed for TCP and UDP"
C L "MACPutROMArray" 28 1 1 "FUNCTION"
T G "PSEUDO_HEADER" 28 87 "{DWORD_VAL SourceAddress,DWORD_VAL DestAddress,BYTE Zero,BYTE Protocol,WORD Length}" `2607 
D G "SwapPseudoHeader" 28 89 "(h)  (h.Length = swaps(h.Length))"
C L "MACPutROMArray" 28 92 1 "*"
C L "MACPutROMArray" 28 92 1 "*"
C L "MACPutROMArray" 28 92 1 "*"
C L "MACPutROMArray" 28 92 1 "*"
C L "MACPutROMArray" 28 92 1 "*"
C L "MACPutROMArray" 28 92 1 "*"
D G "IPIsTxReady" 28 107 "()       MACIsTxReady()"
C L "MACPutROMArray" 28 110 1 "*"
C L "MACPutROMArray" 28 110 1 "*"
C L "MACPutROMArray" 28 110 1 "*"
C L "MACPutROMArray" 28 110 1 "*"
C L "MACPutROMArray" 28 110 1 "*"
C L "MACPutROMArray" 28 110 1 "*"
C L "MACPutROMArray" 28 110 1 "*"
D G "IPSetTxBuffer" 28 126 "(b) MACSetWritePtr(b + BASE_TX_ADDR + sizeof(ETHER_HEADER) + sizeof(IP_HEADER))"
C L "MACPutROMArray" 28 130 1 "*"
C L "MACPutROMArray" 28 130 1 "*"
C L "MACPutROMArray" 28 130 1 "*"
C L "MACPutROMArray" 28 130 1 "*"
C L "MACPutROMArray" 28 130 1 "*"
C L "MACPutROMArray" 28 130 1 "*"
C L "MACPutROMArray" 28 130 1 "*"
C L "MACPutROMArray" 28 130 1 "*"
C L "MACPutROMArray" 28 130 1 "*"
C L "MACPutROMArray" 28 130 1 "*"
C L "MACPutROMArray" 28 130 1 "*"
C L "MACPutROMArray" 28 130 1 "*"
C L "MACPutROMArray" 28 130 1 "*"
C L "MACPutROMArray" 28 130 1 "*"
C L "MACPutROMArray" 28 130 1 "*"
C L "MACPutROMArray" 28 130 1 "*"
V L "remote" 28 154 "*NODE_INFO" `2609 
V L "protocol" 28 155 "BYTE" `2610 
V L "len" 28 156 "WORD" `2611 
f G "IPPutHeader" 28 156 "WORD(*NODE_INFO remote,BYTE protocol,WORD len)" `2608  "* Function:        BOOL IPGetHeader( IP_ADDR    *localIP,"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
C L "IPPutHeader" 28 159 1 "*"
V L "localIP" 28 185 "*DWORD_VAL" `2613 
V L "remote" 28 186 "*NODE_INFO" `2614 
V L "protocol" 28 187 "*BYTE" `2615 
V L "len" 28 188 "*WORD" `2616 
f G "IPGetHeader" 28 188 "int8(*DWORD_VAL localIP,*NODE_INFO remote,*BYTE protocol,*WORD len)" `2612  "* Macro:           IPDiscard()"
C L "IPGetHeader" 28 191 1 "*"
C L "IPGetHeader" 28 191 1 "*"
C L "IPGetHeader" 28 191 1 "*"
C L "IPGetHeader" 28 191 1 "*"
C L "IPGetHeader" 28 191 1 "*"
D G "IPDiscard" 28 206 "()         MACDiscard()"
C L "IPGetHeader" 28 210 1 "*"
C L "IPGetHeader" 28 210 1 "*"
C L "IPGetHeader" 28 210 1 "*"
C L "IPGetHeader" 28 210 1 "*"
C L "IPGetHeader" 28 210 1 "*"
C L "IPGetHeader" 28 210 1 "*"
D G "IPGetArray" 28 225 "(a, b)    MACGetArray(a, b)"
C L "IPGetHeader" 28 230 1 "*"
C L "IPGetHeader" 28 230 1 "*"
C L "IPGetHeader" 28 230 1 "*"
C L "IPGetHeader" 28 230 1 "*"
C L "IPGetHeader" 28 230 1 "*"
C L "IPGetHeader" 28 230 1 "*"
C L "IPGetHeader" 28 230 1 "*"
C L "IPGetHeader" 28 230 1 "*"
V L "Offset" 28 246 "WORD" `2618 
f G "IPSetRxBuffer" 28 246 "void(WORD Offset)" `2617  "*                  ARP Module Defs for Microchip TCP/IP Stack"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
C L "IPSetRxBuffer" 29 1 1 "*"
D G "__ARP_H" 29 56 ""
f G "ARPInit" 29 59 "void()" `2619 
D G "ARP_OPERATION_REQ" 29 64 "0x0001u" "Operation code indicating an ARP Request"
D G "ARP_OPERATION_RESP" 29 65 "0x0002u" "Operation code indicating an ARP Response"
D G "HW_ETHERNET" 29 67 " (0x0001u)" "ARP Hardware type as defined by IEEE 802.3"
D G "ARP_IP" 29 68 " (0x0800u)" "ARP IP packet type as defined by IEEE 802.3"
C L "ARPInit" 29 1 1 "FUNCTION"
C L "ARPInit" 29 1 1 "FUNCTION"
C L "ARPInit" 29 1 1 "FUNCTION"
C L "ARPInit" 29 1 1 "FUNCTION"
C L "ARPInit" 29 1 1 "FUNCTION"
C L "ARPInit" 29 1 1 "FUNCTION"
C L "ARPInit" 29 1 1 "FUNCTION"
C L "ARPInit" 29 1 1 "FUNCTION"
C L "ARPInit" 29 1 1 "FUNCTION"
C L "ARPInit" 29 1 1 "FUNCTION"
T G "ARP_PACKET" 29 88 "{WORD HardwareType,WORD Protocol,BYTE MACAddrLen,BYTE ProtocolLen,WORD Operation,MAC_ADDR SenderMACAddr,DWORD_VAL SenderIPAddr,MAC_ADDR TargetMACAddr,DWORD_VAL TargetIPAddr}" `2630 
f G "ARPProcess" 29 90 "int8()" `2631 
V L "IPAddr" 29 91 "*DWORD_VAL" `2633 
f G "ARPResolve" 29 91 "void(*DWORD_VAL IPAddr)" `2632 
V L "IPAddr" 29 92 "*DWORD_VAL" `2635 
V L "MACAddr" 29 92 "*MAC_ADDR" `2636 
f G "ARPIsResolved" 29 92 "int8(*DWORD_VAL IPAddr,*MAC_ADDR MACAddr)" `2634 
V L "p" 29 93 "*ARP_PACKET" `2638 
f G "SwapARPPacket" 29 93 "void(*ARP_PACKET p)" `2637 
V L "SrcIPAddr" 29 108 "DWORD" `2640 
V L "DestIPAddr" 29 108 "DWORD" `2641 
V L "op_req" 29 108 "BYTE" `2642 
f G "ARPSendPkt" 29 108 "int8(DWORD SrcIPAddr,DWORD DestIPAddr,BYTE op_req)" `2639 
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
C L "ARPSendPkt" 30 1 1 "*"
D G "__XEEPROM_H" 30 52 ""
C L "ARPSendPkt" 25 1 1 "FUNCTION"
T G "XEE_RESULT" 30 56 "BOOL" `2643 
D G "XEE_SUCCESS" 30 57 "FALSE"
C L "ARPSendPkt" 30 71 10 "FUNCTION"
f G "You_cannot_call_the_XEEInit_function_without_defining_EEPROM_CS_" 30 81 "void()" `2644 
f G "You_cannot_call_the_XEEBeginWrite_function_without_defining_EEPR" 30 82 "int8()" `2645 
f G "You_cannot_call_the_XEEWrite_function_without_defining_EEPROM_CS" 30 83 "int8()" `2646 
f G "You_cannot_call_the_XEEWriteArray_function_without_defining_EEPR" 30 84 "void()" `2647 
f G "You_cannot_call_the_XEEEndWrite_function_without_defining_EEPROM" 30 85 "int8()" `2648 
f G "You_cannot_call_the_XEEBeginRead_function_without_defining_EEPRO" 30 86 "int8()" `2649 
f G "You_cannot_call_the_XEERead_function_without_defining_EEPROM_CS_" 30 87 "BYTE()" `2650 
f G "You_cannot_call_the_XEEReadArray_function_without_defining_EEPRO" 30 88 "int8()" `2651 
f G "You_cannot_call_the_XEEEndRead_function_without_defining_EEPROM_" 30 89 "int8()" `2652 
f G "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 30 90 "int8()" `2653 
D G "XEEInit" 30 91 "()				You_cannot_call_the_XEEInit_function_without_defining_EEPROM_CS_TRIS_in_HardwareProfile_h_first()"
D G "XEEBeginWrite" 30 92 "(a) 		You_cannot_call_the_XEEBeginWrite_function_without_defining_EEPROM_CS_TRIS_in_HardwareProfile_h_first()"
D G "XEEWrite" 30 93 "(a)				You_cannot_call_the_XEEWrite_function_without_defining_EEPROM_CS_TRIS_in_HardwareProfile_h_first()"
D G "XEEWriteArray" 30 94 "(a,b)		You_cannot_call_the_XEEWriteArray_function_without_defining_EEPROM_CS_TRIS_in_HardwareProfile_h_first()"
D G "XEEEndWrite" 30 95 "()			You_cannot_call_the_XEEEndWrite_function_without_defining_EEPROM_CS_TRIS_in_HardwareProfile_h_first()"
D G "XEEBeginRead" 30 96 "(a)			You_cannot_call_the_XEEBeginRead_function_without_defining_EEPROM_CS_TRIS_in_HardwareProfile_h_first()"
D G "XEERead" 30 97 "(a)				You_cannot_call_the_XEERead_function_without_defining_EEPROM_CS_TRIS_in_HardwareProfile_h_first()"
D G "XEEReadArray" 30 98 "(a, b, c)	You_cannot_call_the_XEEReadArray_function_without_defining_EEPROM_CS_TRIS_in_HardwareProfile_h_first()"
D G "XEEEndRead" 30 99 "()			You_cannot_call_the_XEEEndRead_function_without_defining_EEPROM_CS_TRIS_in_HardwareProfile_h_first()"
D G "XEEIsBusy" 30 100 "()				You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_CS_TRIS_in_HardwareProfile_h_first()"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 31 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 1 1 "*"
D G "__SPIRAM_H" 32 52 ""
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 25 1 1 "FUNCTION"
C L "You_cannot_call_the_XEEIsBusy_function_without_defining_EEPROM_C" 32 71 10 "FUNCTION"
f G "You_cannot_call_the_SPIRAMInit_function_without_defining_SPIRAM_" 32 81 "void()" `2654 
f G "You_cannot_call_the_SPIRAMGetArray_function_without_defining_SPI" 32 82 "void()" `2655 
f G "You_cannot_call_the_SPIRAMPutArray_function_without_defining_SPI" 32 83 "void()" `2656 
f G "You_cannot_call_the_SPIRAMPutString_function_without_defining_SP" 32 84 "void()" `2657 
f G "You_cannot_call_the_SPIRAMPutROMArray_function_without_defining_" 32 85 "void()" `2658 
f G "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 32 86 "void()" `2659 
D G "SPIRAMInit" 32 87 "()				You_cannot_call_the_SPIRAMInit_function_without_defining_SPIRAM_CS_TRIS_in_HardwareProfile_h_first()"
D G "SPIRAMGetArray" 32 88 "(a,b,c)		You_cannot_call_the_SPIRAMGetArray_function_without_defining_SPIRAM_CS_TRIS_in_HardwareProfile_h_first()"
D G "SPIRAMPutArray" 32 89 "(a,b,c)		You_cannot_call_the_SPIRAMPutArray_function_without_defining_SPIRAM_CS_TRIS_in_HardwareProfile_h_first()"
D G "SPIRAMPutString" 32 90 "(a,b)		You_cannot_call_the_SPIRAMPutString_function_without_defining_SPIRAM_CS_TRIS_in_HardwareProfile_h_first()"
D G "SPIRAMPutROMArray" 32 91 "(a,b,c)	You_cannot_call_the_SPIRAMPutROMArray_function_without_defining_SPIRAM_CS_TRIS_in_HardwareProfile_h_first()"
D G "SPIRAMPutROMString" 32 92 "(a,b)		You_cannot_call_the_SPIRAMPutROMString_function_without_defining_SPIRAM_CS_TRIS_in_HardwareProfile_h_first()"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "*"
D G "__TCP_HITECH_WORKAROUND_H" 33 53 ""
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 3 "FUNCTION"
T G "TCP_SOCKET" 33 61 "BYTE" `2660 
D G "INVALID_SOCKET" 33 63 " (0xFE)	" "The socket is invalid or could not be opened"
D G "UNKNOWN_SOCKET" 33 64 " (0xFF)	" "The socket is not known"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 3 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
E G "TCP_GET_DNS_MODULE" 33 75 "0" `2662  "Special state for TCP client mode sockets"
E G "TCP_DNS_RESOLVE" 33 76 "1" `2663  "Special state for TCP client mode sockets"
E G "TCP_GATEWAY_SEND_ARP" 33 77 "2" `2664  "Special state for TCP client mode sockets"
E G "TCP_GATEWAY_GET_ARP" 33 79 "3" `2665  "Socket is listening for connections"
E G "TCP_LISTEN" 33 80 "4" `2666  "A SYN has been sent, awaiting an SYN+ACK"
E G "TCP_SYN_SENT" 33 81 "5" `2667  "A SYN has been received, awaiting an ACK"
E G "TCP_SYN_RECEIVED" 33 82 "6" `2668  "Socket is connected and connection is established"
E G "TCP_ESTABLISHED" 33 83 "7" `2669  "FIN WAIT state 1"
E G "TCP_FIN_WAIT_1" 33 84 "8" `2670  "FIN WAIT state 2"
E G "TCP_FIN_WAIT_2" 33 85 "9" `2671  "Socket is closing"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
E G "TCP_CLOSING" 33 87 "10" `2672  "Waiting to close the socket"
E G "TCP_CLOSE_WAIT" 33 88 "11" `2673  "The final ACK has been sent"
E G "TCP_LAST_ACK" 33 89 "12" `2674  "Socket is idle and unallocated"
E G "TCP_CLOSED" 33 91 "13" `2675  "Special state for TCP client mode sockets.  Socket is idle, but still allocated pending application closure of the handle."
E G "TCP_CLOSED_BUT_RESERVED" 33 92 "14" `2676 
T G "TCP_STATE" 33 92 "" `2677 
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
E G "SSL_NONE" 33 97 "0" `2679  "Handshake is progressing (no application data allowed)"
E G "SSL_HANDSHAKING" 33 98 "1" `2680  "Connection is established and secured"
E G "SSL_ESTABLISHED" 33 99 "2" `2681  "Connection has been closed (no applicaiton data is allowed)"
E G "SSL_CLOSED" 33 100 "3" `2682 
T G "SSL_STATE" 33 100 "" `2683  "Section:"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 3 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
T G "TCB_STUB" 33 154 "{int16 bufferTxStart,int16 bufferRxStart,int16 bufferEnd,int16 txHead,int16 txTail,int16 rxHead,int16 rxTail,DWORD eventTime,WORD eventTime2}" `2716  "Remainder of TCP Control Block data."
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 2 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
T G "TCB" 33 190 "{DWORD retryInterval,DWORD MySEQ,DWORD RemoteSEQ,int16 txUnackedTail,WORD_VAL remotePort,WORD_VAL localPort,WORD remoteWindow,WORD wFutureDataSize}" `2742  "Information about a socket"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
T G "SOCKET_INFO" 33 197 "{NODE_INFO remote,WORD_VAL remotePort}" `2746  "Section:"
C L "You_cannot_call_the_SPIRAMPutROMString_function_without_defining" 33 1 1 "FUNCTION"
f G "TCPInit" 33 204 "void(* sHoleSize,b0 bFINSent,b0 niRemoteMACIP)" `2747 
V L "hTCP" 33 205 "TCP_SOCKET" `2749 
f G "TCPGetRemoteInfo" 33 205 "*SOCKET_INFO(TCP_SOCKET hTCP,b0 niRemoteMACIP)" `2748 
V L "hTCP" 33 206 "TCP_SOCKET" `2751 
f G "TCPWasReset" 33 206 "int8(TCP_SOCKET hTCP,Protocol bTXASAPWithoutTimerReset,{int1 b0,int1 b1,int1 b2,int1 b3,int1 b4,int1 b5,int1 b6,int1 b7,int1 b8,int1 b9,int1 b10,int1 b11,int1 b12,int1 b13,int1 b14,int1 b15,int1 b16,int1 b17,int1 b18,int1 b19,int1 b20,int1 b21,int1 b22,int1 b23,int1 b24,int1 b25,int1 b26,int1 b27,int1 b28,int1 b29,int1 b30,int1 b31} bRemoteHostIsROM,b0 niRemoteMACIP,b0 bRXNoneACKed1,int8 bRXNoneACKed2)" `2750 
V L "hTCP" 33 207 "TCP_SOCKET" `2753 
f G "TCPIsConnected" 33 207 "int8(TCP_SOCKET hTCP,b0 niRemoteMACIP,b0 bRXNoneACKed1,int8 bRXNoneACKed2)" `2752 
V L "hTCP" 33 208 "TCP_SOCKET" `2755 
f G "TCPDisconnect" 33 208 "void(TCP_SOCKET hTCP,int8 bRXNoneACKed2)" `2754 
V L "hTCP" 33 209 "TCP_SOCKET" `2757 
f G "TCPClose" 33 209 "void(TCP_SOCKET hTCP,Protocol bTXASAPWithoutTimerReset,* wRemoteMSS,b0 bFINSent,b0 niRemoteMACIP,b0 bRXNoneACKed1,int8 bRXNoneACKed2)" `2756 
V L "hTCP" 33 210 "TCP_SOCKET" `2759 
f G "TCPIsPutReady" 33 210 "WORD(TCP_SOCKET hTCP,b0 bFINSent,b0 niRemoteMACIP,b0 bRXNoneACKed1,int8 bRXNoneACKed2)" `2758 
V L "hTCP" 33 211 "TCP_SOCKET" `2761 
V L "byte" 33 211 "BYTE" `2762 
f G "TCPPut" 33 211 "int8(TCP_SOCKET hTCP,BYTE byte,int8 bRXNoneACKed2)" `2760 
V L "hTCP" 33 212 "TCP_SOCKET" `2764 
V L "Data" 33 212 "*BYTE" `2765 
V L "Len" 33 212 "WORD" `2766 
f G "TCPPutArray" 33 212 "WORD(TCP_SOCKET hTCP,*BYTE Data,WORD Len,*b41 RESERVED_HTTP_MEMORY,* dataLen,b0 Base64Decode)" `2763 
V L "hTCP" 33 213 "TCP_SOCKET" `2768 
V L "Data" 33 213 "*BYTE" `2769 
f G "TCPPutString" 33 213 "*BYTE(TCP_SOCKET hTCP,*BYTE Data)" `2767 
V L "hTCP" 33 214 "TCP_SOCKET" `2771 
f G "TCPIsGetReady" 33 214 "WORD(TCP_SOCKET hTCP,Protocol bTXASAPWithoutTimerReset)" `2770 
V L "hTCP" 33 215 "TCP_SOCKET" `2773 
f G "TCPGetRxFIFOFree" 33 215 "WORD(TCP_SOCKET hTCP,b1 eventTime,{int1 b0,int1 b1,int1 b2,int1 b3,int1 b4,int1 b5,int1 b6,int1 b7,int1 b8,int1 b9,int1 b10,int1 b11,int1 b12,int1 b13,int1 b14,int1 b15,int1 b16,int1 b17,int1 b18,int1 b19,int1 b20,int1 b21,int1 b22,int1 b23,int1 b24,int1 b25,int1 b26,int1 b27,int1 b28,int1 b29,int1 b30,int1 b31} TCPIsPutReady,b0 a,{int1 b0,int1 b1,int1 b2,int1 b3,int1 b4,int1 b5,int1 b6,int1 b7,int1 b8,int1 b9,int1 b10,int1 b11,int1 b12,int1 b13,int1 b14,int1 b15,int1 b16,int1 b17,int1 b18,int1 b19,int1 b20,int1 b21,int1 b22,int1 b23,int1 b24,int1 b25,int1 b26,int1 b27,int1 b28,int1 b29,int1 b30,int1 b31} MY_DEFAULT_GATE_BYTE1)" `2772 
V L "hTCP" 33 216 "TCP_SOCKET" `2775 
V L "byte" 33 216 "*BYTE" `2776 
f G "TCPGet" 33 216 "int8(TCP_SOCKET hTCP,*BYTE byte,{int1 b0,int1 b1,int1 b2,int1 b3,int1 b4,int1 b5,int1 b6,int1 b7,int1 b8,int1 b9,int1 b10,int1 b11,int1 b12,int1 b13,int1 b14,int1 b15,int1 b16,int1 b17,int1 b18,int1 b19,int1 b20,int1 b21,int1 b22,int1 b23,int1 b24,int1 b25,int1 b26,int1 b27,int1 b28,int1 b29,int1 b30,int1 b31} MY_DEFAULT_GATE_BYTE1)" `2774 
V L "hTCP" 33 217 "TCP_SOCKET" `2778 
V L "buffer" 33 217 "*BYTE" `2779 
V L "count" 33 217 "WORD" `2780 
f G "TCPGetArray" 33 217 "WORD(TCP_SOCKET hTCP,*BYTE buffer,WORD count,b0 bFINSent,b0 niRemoteMACIP,b0 bRXNoneACKed1,int8 bRXNoneACKed2)" `2777 
V L "hTCP" 33 218 "TCP_SOCKET" `2782 
V L "wStart" 33 218 "WORD" `2783 
f G "TCPPeek" 33 218 "BYTE(TCP_SOCKET hTCP,WORD wStart,int8 bRXNoneACKed2)" `2781 
V L "hTCP" 33 219 "TCP_SOCKET" `2785 
V L "vBuffer" 33 219 "*BYTE" `2786 
V L "wLen" 33 219 "WORD" `2787 
V L "wStart" 33 219 "WORD" `2788 
f G "TCPPeekArray" 33 219 "WORD(TCP_SOCKET hTCP,*BYTE vBuffer,WORD wLen,WORD wStart)" `2784 
V L "hTCP" 33 220 "TCP_SOCKET" `2790 
V L "cFind" 33 220 "BYTE" `2791 
V L "wStart" 33 220 "WORD" `2792 
V L "wSearchLen" 33 220 "WORD" `2793 
V L "bTextCompare" 33 220 "int8" `2794 
f G "TCPFindEx" 33 220 "WORD(TCP_SOCKET hTCP,BYTE cFind,WORD wStart,WORD wSearchLen,int8 bTextCompare,Protocol bTXASAPWithoutTimerReset,b0 wLen,b0 TCPFindEx,{int1 b0,int1 b1,int1 b2,int1 b3,int1 b4,int1 b5,int1 b6,int1 b7,int1 b8,int1 b9,int1 b10,int1 b11,int1 b12,int1 b13,int1 b14,int1 b15,int1 b16,int1 b17,int1 b18,int1 b19,int1 b20,int1 b21,int1 b22,int1 b23,int1 b24,int1 b25,int1 b26,int1 b27,int1 b28,int1 b29,int1 b30,int1 b31} cFind)" `2789 
V L "hTCP" 33 221 "TCP_SOCKET" `2796 
V L "cFindArray" 33 221 "*BYTE" `2797 
V L "wLen" 33 221 "WORD" `2798 
V L "wStart" 33 221 "WORD" `2799 
V L "wSearchLen" 33 221 "WORD" `2800 
V L "bTextCompare" 33 221 "int8" `2801 
f G "TCPFindArrayEx" 33 221 "WORD(TCP_SOCKET hTCP,*BYTE cFindArray,WORD wLen,WORD wStart,WORD wSearchLen,int8 bTextCompare)" `2795 
V L "hTCP" 33 222 "TCP_SOCKET" `2803 
f G "TCPDiscard" 33 222 "void(TCP_SOCKET hTCP,b1 dwRemoteIP)" `2802 
V L "remote" 33 223 "*NODE_INFO" `2805 
V L "localIP" 33 223 "*DWORD_VAL" `2806 
V L "len" 33 223 "WORD" `2807 
f G "TCPProcess" 33 223 "int8(*NODE_INFO remote,*DWORD_VAL localIP,WORD len)" `2804 
f G "TCPTick" 33 224 "void()" `2808 
V L "hTCP" 33 225 "TCP_SOCKET" `2810 
f G "TCPFlush" 33 225 "void(TCP_SOCKET hTCP)" `2809  "Create a server socket and ignore dwRemoteHost."
D G "TCP_OPEN_SERVER" 33 228 "0u"
D G "TCP_OPEN_RAM_HOST" 33 237 "You_need_to_enable_STACK_USE_DNS_to_use_TCP_OPEN_RAM_HOST"
D G "TCP_OPEN_ROM_HOST" 33 239 "You_need_to_enable_STACK_USE_DNS_to_use_TCP_OPEN_ROM_HOST"
D G "TCP_OPEN_IP_ADDRESS" 33 242 "3u"
D G "TCP_OPEN_NODE_INFO" 33 244 "4u"
V L "dwRemoteHost" 33 255 "DWORD" `2812 
V L "vRemoteHostType" 33 255 "BYTE" `2813 
V L "wPort" 33 255 "WORD" `2814 
V L "vSocketPurpose" 33 255 "BYTE" `2815 
f G "TCPOpen" 33 255 "TCP_SOCKET(DWORD dwRemoteHost,BYTE vRemoteHostType,WORD wPort,BYTE vSocketPurpose,sint8 c)" `2811 
V L "hTCP" 33 258 "TCP_SOCKET" `2817 
V L "cFindArray" 33 258 "*" `2818 
V L "wLen" 33 258 "WORD" `2819 
V L "wStart" 33 258 "WORD" `2820 
V L "wSearchLen" 33 258 "WORD" `2821 
V L "bTextCompare" 33 258 "int8" `2822 
f G "TCPFindROMArrayEx" 33 258 "WORD(TCP_SOCKET hTCP,* cFindArray,WORD wLen,WORD wStart,WORD wSearchLen,int8 bTextCompare)" `2816  "Summary:"
D G "TCPFindROMArray" 33 268 "(a,b,c,d,e)		TCPFindROMArrayEx(a,b,c,d,0,e)"
V L "hTCP" 33 270 "TCP_SOCKET" `2824 
V L "Data" 33 270 "*" `2825 
V L "Len" 33 270 "WORD" `2826 
f G "TCPPutROMArray" 33 270 "WORD(TCP_SOCKET hTCP,* Data,WORD Len)" `2823 
V L "hTCP" 33 271 "TCP_SOCKET" `2828 
V L "Data" 33 271 "*" `2829 
f G "TCPPutROMString" 33 271 "*BYTE(TCP_SOCKET hTCP,* Data)" `2827 
V L "hTCP" 33 279 "TCP_SOCKET" `2831 
f G "TCPGetTxFIFOFull" 33 279 "WORD(TCP_SOCKET hTCP)" `2830  "Alias to TCPIsGetReady provided for API completeness"
D G "TCPGetRxFIFOFull" 33 281 "(a)					TCPIsGetReady(a)"
D G "TCPGetTxFIFOFree" 33 283 "(a) 				TCPIsPutReady(a)"
D G "TCP_ADJUST_GIVE_REST_TO_RX" 33 285 "0x01u	" "Resize flag: extra bytes go to RX"
D G "TCP_ADJUST_GIVE_REST_TO_TX" 33 286 "0x02u	" "Resize flag: extra bytes go to TX"
D G "TCP_ADJUST_PRESERVE_RX" 33 287 "0x04u	" "Resize flag: attempt to preserve RX buffer"
D G "TCP_ADJUST_PRESERVE_TX" 33 288 "0x08u	" "Resize flag: attempt to preserve TX buffer"
V L "hTCP" 33 289 "TCP_SOCKET" `2833 
V L "wMinRXSize" 33 289 "WORD" `2834 
V L "wMinTXSize" 33 289 "WORD" `2835 
V L "vFlags" 33 289 "BYTE" `2836 
f G "TCPAdjustFIFOSize" 33 289 "int8(TCP_SOCKET hTCP,WORD wMinRXSize,WORD wMinTXSize,BYTE vFlags)" `2832  "Summary:"
D G "TCPFind" 33 315 "(a,b,c,d)					TCPFindEx(a,b,c,0,d)"
D G "TCPFindArray" 33 326 "(a,b,c,d,e)				TCPFindArrayEx(a,b,c,d,0,e)"
D G "TCPListen" 33 337 "(port)			TCPOpen(0, TCP_OPEN_SERVER, port, TCP_PURPOSE_DEFAULT)"
D G "TCPConnect" 33 348 "(remote,port)	TCPOpen((DWORD)remote, TCP_OPEN_NODE_INFO, port, TCP_PURPOSE_DEFAULT)"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
C L "TCPAdjustFIFOSize" 34 1 1 "*"
D G "__ICMP_H" 34 54 ""
V L "remote" 34 56 "*NODE_INFO" `2838 
V L "len" 34 56 "WORD" `2839 
f G "ICMPProcess" 34 56 "void(*NODE_INFO remote,WORD len)" `2837 
f G "ICMPBeginUsage" 34 58 "int8()" `2840 
V L "dwRemoteIP" 34 59 "DWORD" `2842 
f G "ICMPSendPing" 34 59 "void(DWORD dwRemoteIP)" `2841 
V L "szRemoteHost" 34 60 "*BYTE" `2844 
f G "ICMPSendPingToHost" 34 60 "void(*BYTE szRemoteHost)" `2843 
f G "ICMPGetReply" 34 61 "LONG()" `2845 
f G "ICMPEndUsage" 34 62 "void()" `2846 
V L "szRemoteHost" 34 65 "*" `2848 
f G "ICMPSendPingToHostROM" 34 65 "void(* szRemoteHost)" `2847 
D G "TickGetDiff" 8 64 "(a, b)  (a-b)"
D G "MY_MAC_BYTE1" 8 66 "AppConfig.MyMACAddr.v[0]"
D G "MY_MAC_BYTE2" 8 67 "AppConfig.MyMACAddr.v[1]"
D G "MY_MAC_BYTE3" 8 68 "AppConfig.MyMACAddr.v[2]"
D G "MY_MAC_BYTE4" 8 69 "AppConfig.MyMACAddr.v[3]"
D G "MY_MAC_BYTE5" 8 70 "AppConfig.MyMACAddr.v[4]"
D G "MY_MAC_BYTE6" 8 71 "AppConfig.MyMACAddr.v[5]"
D G "MY_MASK_BYTE1" 8 73 "AppConfig.MyMask.v[0]"
D G "MY_MASK_BYTE2" 8 74 "AppConfig.MyMask.v[1]"
D G "MY_MASK_BYTE3" 8 75 "AppConfig.MyMask.v[2]"
D G "MY_MASK_BYTE4" 8 76 "AppConfig.MyMask.v[3]"
D G "MY_IP" 8 78 "AppConfig.MyIPAddr"
D G "MY_IP_BYTE1" 8 80 "AppConfig.MyIPAddr.v[0]"
D G "MY_IP_BYTE2" 8 81 "AppConfig.MyIPAddr.v[1]"
D G "MY_IP_BYTE3" 8 82 "AppConfig.MyIPAddr.v[2]"
D G "MY_IP_BYTE4" 8 83 "AppConfig.MyIPAddr.v[3]"
D G "MY_GATE_BYTE1" 8 85 "AppConfig.MyGateway.v[0]"
D G "MY_GATE_BYTE2" 8 86 "AppConfig.MyGateway.v[1]"
D G "MY_GATE_BYTE3" 8 87 "AppConfig.MyGateway.v[2]"
D G "MY_GATE_BYTE4" 8 88 "AppConfig.MyGateway.v[3]"
f G "DHCPBoundOrDisabled" 8 145 "int8()" `2849  "A higher level version of MACIsLinked()."
C L "DHCPBoundOrDisabled" 8 148 5 "FUNCTION"
f G "IsLinked" 8 153 "int8()" `2850  "this macro called by stack when new tcp/ip traffic tx/rx."
f G "TickGetSafe" 8 173 "TICK()" `2851 
f G "GenerateRandomByteFromTimers" 8 176 "BYTE()" `2852 
V L "c" 1 747 "sint8" `2854 
F G "DebugPutc" 1 748 "void(sint8 c)" `2853 
D G "__CCS_STACKTSK2_C__" 35 11 ""
V G "AppConfig" 35 17 "APP_CONFIG" `2314 
F G "ISRTimer0" 35 22 "void()" `2855 
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
C G "" 36 1 1 "*"
D G "__STACKTSK_C" 36 57 ""
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
E G "SM_STACK_IDLE" 36 75 "0" `2857 
E G "SM_STACK_MAC" 36 76 "1" `2858 
E G "SM_STACK_IP" 36 77 "2" `2859 
E G "SM_STACK_ARP" 36 78 "3" `2860 
E G "SM_STACK_TCP" 36 79 "4" `2861 
E G "SM_STACK_UDP" 36 80 "5" `2862 
T G "SM_STACK" 36 80 "" `2863 
V G "smStack" 36 81 "SM_STACK" `2864 
V G "remoteNode" 36 83 "NODE_INFO" `2865 
C L "StackInit" 36 92 1 "*"
C L "StackInit" 36 92 1 "*"
C L "StackInit" 36 92 1 "*"
C L "StackInit" 36 92 1 "*"
C L "StackInit" 36 92 1 "*"
C L "StackInit" 36 92 1 "*"
C L "StackInit" 36 92 1 "*"
F G "StackInit" 36 108 "void()" `2315 
V L "once" 36 109 "BOOL" `2866 
C L "StackInit" 36 92 1 "FUNCTION"
C L "StackTask" 36 218 1 "*"
C L "StackTask" 36 218 1 "*"
C L "StackTask" 36 218 1 "*"
C L "StackTask" 36 218 1 "*"
C L "StackTask" 36 218 1 "*"
C L "StackTask" 36 218 1 "*"
C L "StackTask" 36 218 1 "*"
C L "StackTask" 36 218 1 "*"
C L "StackTask" 36 218 1 "*"
C L "StackTask" 36 218 1 "*"
F G "StackTask" 36 238 "void()" `2316 
V L "dataCount" 36 239 "WORD" `2867 
V L "tempLocalIP" 36 240 "DWORD_VAL" `2868 
V L "cFrameType" 36 241 "BYTE" `2869 
V L "cIPFrameType" 36 242 "BYTE" `2870  "WF_CS_TRIS"
C L "StackTask" 36 218 1 "FUNCTION"
C L "StackTask" 36 218 1 "FUNCTION"
C L "StackTask" 36 218 6 "FUNCTION"
C L "StackTask" 36 218 6 "FUNCTION"
C L "StackTask" 36 218 1 "FUNCTION"
C L "StackApplications" 36 444 1 "*"
C L "StackApplications" 36 444 1 "*"
C L "StackApplications" 36 444 1 "*"
C L "StackApplications" 36 444 1 "*"
C L "StackApplications" 36 444 1 "*"
C L "StackApplications" 36 444 1 "*"
C L "StackApplications" 36 444 1 "*"
F G "StackApplications" 36 460 "void()" `2317 
C L "StackApplications" 36 444 1 "FUNCTION"
D G "__HELPERS_C" 37 58 ""
D G "_STDARG" 38 13 ""
T G "va_list" 38 15 "*sint8" `2871 
D G "va_start" 38 17 "(a,b)  a=_VA_LIST"
D G "va_arg" 38 18 "(a,b)    *(b *)_va_arg(a)"
D G "va_end" 38 19 ""
D G "nargs" 38 20 "_nargs(&_va_list)"
V L "ptr" 38 22 "*sint8" `2873 
F G "_nargs" 38 22 "sint8(*sint8 ptr)" `2872 
V L "n" 38 23 "sint8" `2874 
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
V G "dwLFSRRandSeed" 37 65 "DWORD" `2875 
C L "LFSRSeedRand" 37 64 26 "FUNCTION"
V L "dwSeed" 37 102 "DWORD" `2877 
F G "LFSRSeedRand" 37 103 "DWORD(DWORD dwSeed)" `2318 
V L "dwOldSeed" 37 104 "DWORD" `2876 
V L "i" 37 105 "BYTE" `2877  "Save original seed to be returned later"
C L "LFSRSeedRand" 37 64 2 "FUNCTION"
C L "LFSRSeedRand" 37 64 1 "FUNCTION"
C L "LFSRSeedRand" 37 64 2 "FUNCTION"
C L "LFSRSeedRand" 37 64 1 "FUNCTION"
C L "LFSRRand" 37 64 23 "FUNCTION"
F G "LFSRRand" 37 161 "WORD()" `2320 
V L "i" 37 162 "BYTE" `2878  "Taps: 32 31 29 1"
C L "LFSRRand" 37 64 2 "FUNCTION"
C L "LFSRRand" 37 64 1 "FUNCTION"
C L "GenerateRandomDWORD" 37 64 29 "FUNCTION"
F G "GenerateRandomDWORD" 37 215 "DWORD()" `2321 
V L "vBitCount" 37 216 "BYTE" `2879 
V L "w" 37 217 "WORD" `2880 
V L "wTime" 37 217 "WORD" `2881 
V L "wLastValue" 37 217 "WORD" `2882 
V L "dwTotalTime" 37 218 "DWORD" `2883 
V L "randomResult" 37 223 "{DWORD dw,WORD[2] w}" `2887 
V L "ADCON0Save" 37 227 "BYTE" `2888 
V L "ADCON2Save" 37 227 "BYTE" `2889 
V L "T0CONSave" 37 228 "BYTE" `2890 
V L "TMR0HSave" 37 228 "BYTE" `2891 
V L "TMR0LSave" 37 228 "BYTE" `2892  "Save hardware SFRs"
C L "GenerateRandomDWORD" 37 64 1 "FUNCTION"
C L "GenerateRandomDWORD" 37 64 1 "FUNCTION"
C L "GenerateRandomDWORD" 37 64 1 "FUNCTION"
C L "GenerateRandomDWORD" 37 64 1 "FUNCTION"
C L "GenerateRandomDWORD" 37 64 1 "FUNCTION"
C L "GenerateRandomDWORD" 37 64 1 "FUNCTION"
C L "GenerateRandomDWORD" 37 64 1 "FUNCTION"
C L "GenerateRandomDWORD" 37 64 1 "FUNCTION"
C L "GenerateRandomDWORD" 37 64 1 "FUNCTION"
C L "GenerateRandomDWORD" 37 64 1 "FUNCTION"
C L "GenerateRandomDWORD" 37 64 1 "FUNCTION"
C L "StringToIPAddress" 37 64 15 "FUNCTION"
V L "str" 37 446 "*BYTE" `2338 
V L "IPAddress" 37 446 "*DWORD_VAL" `2895 
F G "StringToIPAddress" 37 447 "int8(*BYTE str,*DWORD_VAL IPAddress)" `2337 
V L "dwVal" 37 448 "DWORD_VAL" `2893 
V L "i" 37 449 "BYTE" `2894 
V L "charLen" 37 449 "BYTE" `2895 
V L "currentOctet" 37 449 "BYTE" `2896 
C L "StringToIPAddress" 37 64 1 "FUNCTION"
C L "StringToIPAddress" 37 64 3 "FUNCTION"
C L "StringToIPAddress" 37 64 1 "FUNCTION"
C L "ROMStringToIPAddress" 37 64 17 "FUNCTION"
V L "str" 37 543 "*" `2363 
V L "IPAddress" 37 543 "*DWORD_VAL" `2899 
F G "ROMStringToIPAddress" 37 544 "int8(* str,*DWORD_VAL IPAddress)" `2362 
V L "dwVal" 37 545 "DWORD_VAL" `2897 
V L "i" 37 546 "BYTE" `2898 
V L "charLen" 37 546 "BYTE" `2899 
V L "currentOctet" 37 546 "BYTE" `2900 
C L "ROMStringToIPAddress" 37 64 1 "FUNCTION"
C L "ROMStringToIPAddress" 37 64 3 "FUNCTION"
C L "ROMStringToIPAddress" 37 64 1 "FUNCTION"
C L "uitoa" 37 64 14 "FUNCTION"
V L "Value" 37 830 "WORD" `2323 
V L "Buffer" 37 830 "*BYTE" `2903 
F G "uitoa" 37 831 "void(WORD Value,*BYTE Buffer)" `2322 
V L "i" 37 832 "BYTE" `2901 
V L "Digit" 37 833 "WORD" `2902 
V L "Divisor" 37 834 "WORD" `2903 
V L "Printed" 37 835 "BOOL" `2904 
C L "hexatob" 37 64 14 "FUNCTION"
V L "AsciiChars" 37 934 "WORD_VAL" `2906 
F G "hexatob" 37 935 "BYTE(WORD_VAL AsciiChars)" `2343  "Convert lowercase to uppercase"
C L "hexatob" 37 64 1 "FUNCTION"
C L "hexatob" 37 64 1 "FUNCTION"
C L "btohexa_high" 37 64 13 "FUNCTION"
V L "b" 37 977 "BYTE" `2906 
F G "btohexa_high" 37 978 "BYTE(BYTE b)" `2345 
C L "btohexa_low" 37 64 13 "FUNCTION"
V L "b" 37 1003 "BYTE" `2906 
F G "btohexa_low" 37 1004 "BYTE(BYTE b)" `2347 
C L "stricmppgm2ram" 37 64 17 "FUNCTION"
V L "a" 37 1033 "*BYTE" `2350 
V L "b" 37 1033 "*" `2907 
F G "stricmppgm2ram" 37 1034 "sint8(*BYTE a,* b)" `2349 
V L "cA" 37 1035 "BYTE" `2905 
V L "cB" 37 1035 "BYTE" `2906  "Load first two characters"
C L "stricmppgm2ram" 37 64 1 "FUNCTION"
C L "stricmppgm2ram" 37 64 1 "FUNCTION"
C L "stricmppgm2ram" 37 64 1 "FUNCTION"
C L "stricmppgm2ram" 37 64 1 "FUNCTION"
C L "stricmppgm2ram" 37 64 1 "FUNCTION"
C L "stricmppgm2ram" 37 64 1 "FUNCTION"
C L "swaps" 37 64 10 "FUNCTION"
V L "v" 37 1089 "WORD" `2908 
F G "swaps" 37 1090 "WORD(WORD v)" `2365 
V L "t" 37 1091 "WORD_VAL" `2907 
V L "b" 37 1092 "BYTE" `2908 
C L "swapl" 37 64 10 "FUNCTION"
V L "v" 37 1121 "DWORD" `2910 
F G "swapl" 37 1123 "DWORD(DWORD v)" `2367  "Swap bytes 0 and 3"
C L "swapl" 37 64 1 "FUNCTION"
C L "CalcIPChecksum" 37 64 18 "FUNCTION"
V L "buffer" 37 1164 "*BYTE" `2370 
V L "count" 37 1164 "WORD" `2911 
F G "CalcIPChecksum" 37 1165 "WORD(*BYTE buffer,WORD count)" `2369 
V L "i" 37 1166 "WORD" `2909 
V L "val" 37 1167 "*WORD" `2910 
V L "sum" 37 1172 "{WORD[2] w,DWORD dw}" `2914 
C L "CalcIPChecksum" 37 64 1 "FUNCTION"
C L "CalcIPChecksum" 37 64 1 "FUNCTION"
C L "CalcIPChecksum" 37 64 1 "FUNCTION"
C L "CalcIPChecksum" 37 64 2 "FUNCTION"
C L "CalcIPChecksum" 37 64 1 "FUNCTION"
V G "toRotate" 37 1241 "DWORD_VAL" `2915  "Function:"
C L "FormatNetBIOSName" 37 64 34 "FUNCTION"
V L "Name" 37 1345 "*BYTE" `2917 
F G "FormatNetBIOSName" 37 1346 "void(*BYTE Name)" `2916 
V L "i" 37 1347 "BYTE" `2919 
C L "strnchr" 37 64 22 "FUNCTION"
V L "searchString" 37 1395 "*sint8" `2354 
V L "count" 37 1395 "int16" `2355 
V L "c" 37 1395 "sint8" `2923 
F G "strnchr" 37 1396 "*sint8(*sint8 searchString,int16 count,sint8 c)" `2353 
V L "c2" 37 1397 "sint8" `2920 
C L "strncpy_m" 37 64 20 "FUNCTION"
V L "destStr" 37 1442 "*sint8" `2358 
V L "destSize" 37 1442 "int16" `2359 
V L "nStrings" 37 1442 "sint16" `2360 
F G "strncpy_m" 37 1443 "int16(*sint8 destStr,int16 destSize,sint16 nStrings,*int8 _VA_LIST)" `2357 
V L "args" 37 1444 "va_list" `2921 
V L "str" 37 1445 "*sint8" `2922 
V L "end" 37 1446 "*sint8" `2923 
V L "len" 37 1447 "int16" `2924 
C L "strncpy_m" 37 64 1 "FUNCTION"
C G "" 37 1475 22 "*wUsernameLen"
C G "" 37 1475 26 "*wPasswordLen"
C G "" 37 1475 27 "*wHostnameLen"
C G "" 37 1475 8 "*wFilePathLen"
C G "" 37 1475 63 "*wFilePathLen"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
C G "" 40 1 1 "*"
D G "__TICK_C" 40 56 ""
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
V G "dwInternalTicks" 40 64 "DWORD" `2925 
V G "vTickReading" 40 67 "BYTE[6]" `2926 
f G "GetTickCopy" 40 69 "void()" `2927  "Function:"
C L "GetTickCopy" 40 60 13 "FUNCTION"
F G "TickInit" 40 95 "void()" `2403  "Use Timer0 for 8 bit processors"
C L "TickInit" 40 60 1 "FUNCTION"
C L "TickInit" 40 60 1 "FUNCTION"
C L "TickInit" 40 60 1 "FUNCTION"
C L "TickInit" 40 60 2 "FUNCTION"
C L "GetTickCopy" 40 60 13 "FUNCTION"
F G "GetTickCopy" 40 156 "void()" `2927  "Perform an Interrupt safe and synchronized read of the 48-bit"
C L "GetTickCopy" 40 60 1 "FUNCTION"
C L "GetTickCopy" 40 60 1 "FUNCTION"
C L "GetTickCopy" 40 60 1 "FUNCTION"
C L "GetTickCopy" 40 60 1 "FUNCTION"
C L "TickGet" 40 60 17 "FUNCTION"
F G "TickGet" 40 260 "DWORD()" `2404 
C L "TickGetDiv256" 40 60 17 "FUNCTION"
F G "TickGetDiv256" 40 290 "DWORD()" `2405 
V L "dw" 40 291 "DWORD" `2928 
C L "TickGetDiv256" 40 60 1 "FUNCTION"
C L "TickGetDiv256" 40 60 1 "FUNCTION"
C L "TickGetDiv256" 40 60 1 "FUNCTION"
C L "TickGetDiv64K" 40 60 17 "FUNCTION"
F G "TickGetDiv64K" 40 327 "DWORD()" `2406 
V L "dw" 40 328 "DWORD" `2929 
C L "TickGetDiv64K" 40 60 1 "FUNCTION"
C L "TickGetDiv64K" 40 60 1 "FUNCTION"
C L "TickGetDiv64K" 40 60 1 "FUNCTION"
C L "TickConvertToMilliseconds" 40 60 19 "FUNCTION"
V L "dwTickValue" 40 367 "DWORD" `2931 
F G "TickConvertToMilliseconds" 40 368 "DWORD(DWORD dwTickValue)" `2407 
C L "TickUpdate" 40 60 10 "FUNCTION"
F G "TickUpdate" 40 391 "void()" `2409 
C L "TickUpdate" 40 60 1 "FUNCTION"
C L "TickUpdate" 40 60 1 "FUNCTION"
D G "__ETH97J60_C" 41 60 ""
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
C G "" 39 1 1 "*"
D G "__MY_ENC_LED_CONFIG__" 41 73 "0x3472"
D G "HALF_DUPLEX" 41 81 ""
D G "LOW" 41 85 "(a) 					(a & 0xFF)"
D G "HIGH" 41 86 "(a) 				((a>>8) & 0xFF)"
D G "ETHER_IP" 41 88 " (0x00u)"
D G "ETHER_ARP" 41 89 " (0x06u)"
T G "ENC_PREAMBLE" 41 100 "{WORD NextPacketPointer,RXSTATUS StatusVector,MAC_ADDR DestMACAddr,MAC_ADDR SourceMACAddr,WORD_VAL Type}" `2939  "Internal MAC level variables and flags."
V G "NextPacketLocation" 41 104 "WORD_VAL" `2940 
V G "CurrentPacketLocation" 41 105 "WORD_VAL" `2941 
V G "flags" 41 117 "{int8 v}" `2951 
V G "wTXWatchdog" 41 118 "WORD" `2952  "Time of last transmission (high resolution); used for determining when TX hardware may need software intervention"
C L "MACInit" 41 133 1 "*"
C L "MACInit" 41 133 1 "*"
C L "MACInit" 41 133 1 "*"
C L "MACInit" 41 133 1 "*"
C L "MACInit" 41 133 1 "*"
C L "MACInit" 41 133 1 "*"
C L "MACInit" 41 133 1 "*"
C L "MACInit" 41 133 1 "*"
C L "MACInit" 41 133 1 "*"
C L "MACInit" 41 133 1 "*"
F G "MACInit" 41 152 "void()" `2552 
V L "i" 41 153 "BYTE" `2953 
C L "MACInit" 41 133 1 "FUNCTION"
C L "MACInit" 41 133 4 "FUNCTION"
C L "MACInit" 41 133 2 "FUNCTION"
C L "MACInit" 41 133 1 "FUNCTION"
C L "MACInit" 41 133 1 "FUNCTION"
C L "MACInit" 41 133 1 "FUNCTION"
C L "MACInit" 41 133 6 "FUNCTION"
C L "MACInit" 41 133 1 "FUNCTION"
C L "MACInit" 41 133 3 "FUNCTION"
C L "MACInit" 41 133 3 "FUNCTION"
C L "MACInit" 41 133 1 "FUNCTION"
C L "MACInit" 41 133 1 "FUNCTION"
C L "MACInit" 41 133 1 "FUNCTION"
C L "MACInit" 41 133 1 "FUNCTION"
C L "MACInit" 41 133 2 "FUNCTION"
C L "MACInit" 41 133 1 "FUNCTION"
C L "MACIsLinked" 41 133 1 "FUNCTION"
C L "MACIsLinked" 41 242 1 "*"
C L "MACIsLinked" 41 242 1 "*"
C L "MACIsLinked" 41 242 1 "*"
C L "MACIsLinked" 41 242 1 "*"
C L "MACIsLinked" 41 242 1 "*"
C L "MACIsLinked" 41 242 1 "*"
C L "MACIsLinked" 41 242 1 "*"
C L "MACIsLinked" 41 242 1 "*"
C L "MACIsLinked" 41 242 1 "*"
C L "MACIsLinked" 41 242 1 "*"
C L "MACIsLinked" 41 242 1 "*"
F G "MACIsLinked" 41 262 "int8()" `2554  "LLSTAT is a latching low link status bit.  Therefore, if the link"
C L "MACIsLinked" 41 242 4 "FUNCTION"
C L "MACIsTxReady" 41 272 1 "*"
C L "MACIsTxReady" 41 272 1 "*"
C L "MACIsTxReady" 41 272 1 "*"
C L "MACIsTxReady" 41 272 1 "*"
C L "MACIsTxReady" 41 272 1 "*"
C L "MACIsTxReady" 41 272 1 "*"
C L "MACIsTxReady" 41 272 1 "*"
C L "MACIsTxReady" 41 272 1 "*"
C L "MACIsTxReady" 41 272 1 "*"
C L "MACIsTxReady" 41 272 1 "*"
C L "MACIsTxReady" 41 272 1 "*"
F G "MACIsTxReady" 41 292 "int8()" `2579 
C L "MACIsTxReady" 41 272 2 "FUNCTION"
C L "MACDiscardRx" 41 308 1 "*"
C L "MACDiscardRx" 41 308 1 "*"
C L "MACDiscardRx" 41 308 1 "*"
C L "MACDiscardRx" 41 308 1 "*"
C L "MACDiscardRx" 41 308 1 "*"
C L "MACDiscardRx" 41 308 1 "*"
C L "MACDiscardRx" 41 308 1 "*"
C L "MACDiscardRx" 41 308 1 "*"
C L "MACDiscardRx" 41 308 1 "*"
C L "MACDiscardRx" 41 308 1 "*"
C L "MACDiscardRx" 41 308 1 "*"
F G "MACDiscardRx" 41 328 "void()" `2568 
V L "NewRXRDLocation" 41 329 "WORD_VAL" `2954  "Make sure the current packet was not already discarded"
C L "MACDiscardRx" 41 308 4 "FUNCTION"
C L "MACDiscardRx" 41 308 3 "FUNCTION"
C L "MACDiscardRx" 41 308 1 "FUNCTION"
C L "MACDiscardRx" 41 308 1 "FUNCTION"
C L "MACDiscardRx" 41 308 3 "FUNCTION"
C L "MACGetFreeRxSize" 41 361 1 "*"
C L "MACGetFreeRxSize" 41 361 1 "*"
C L "MACGetFreeRxSize" 41 361 1 "*"
C L "MACGetFreeRxSize" 41 361 1 "*"
C L "MACGetFreeRxSize" 41 361 1 "*"
C L "MACGetFreeRxSize" 41 361 1 "*"
C L "MACGetFreeRxSize" 41 361 1 "*"
C L "MACGetFreeRxSize" 41 361 1 "*"
F G "MACGetFreeRxSize" 41 378 "WORD()" `2569 
V L "ReadPT" 41 379 "WORD_VAL" `2955 
V L "WritePT" 41 379 "WORD_VAL" `2956  "Read the Ethernet hardware buffer write pointer.  Because packets can be"
C L "MACGetFreeRxSize" 41 361 3 "FUNCTION"
C L "MACGetFreeRxSize" 41 361 1 "FUNCTION"
C L "MACGetFreeRxSize" 41 361 1 "FUNCTION"
C L "MACGetFreeRxSize" 41 361 2 "FUNCTION"
C L "MACGetHeader" 41 412 1 "*"
C L "MACGetHeader" 41 412 1 "*"
C L "MACGetHeader" 41 412 1 "*"
C L "MACGetHeader" 41 412 1 "*"
C L "MACGetHeader" 41 412 1 "*"
C L "MACGetHeader" 41 412 1 "*"
C L "MACGetHeader" 41 412 1 "*"
C L "MACGetHeader" 41 412 1 "*"
C L "MACGetHeader" 41 412 1 "*"
C L "MACGetHeader" 41 412 1 "*"
C L "MACGetHeader" 41 412 1 "*"
C L "MACGetHeader" 41 412 1 "*"
C L "MACGetHeader" 41 412 1 "*"
C L "MACGetHeader" 41 412 1 "*"
C L "MACGetHeader" 41 412 1 "*"
V L "remote" 41 435 "*MAC_ADDR" `2556 
V L "type" 41 435 "*BYTE" `2959 
F G "MACGetHeader" 41 436 "int8(*MAC_ADDR remote,*BYTE type)" `2555 
V L "header" 41 437 "ENC_PREAMBLE" `2957  "Test if at least one packet has been received and is waiting"
C L "MACGetHeader" 41 412 2 "FUNCTION"
C L "MACGetHeader" 41 412 2 "FUNCTION"
C L "MACGetHeader" 41 412 1 "FUNCTION"
C L "MACGetHeader" 41 412 1 "FUNCTION"
C L "MACGetHeader" 41 412 1 "FUNCTION"
C L "MACGetHeader" 41 412 1 "FUNCTION"
C L "MACGetHeader" 41 412 2 "FUNCTION"
C L "MACGetHeader" 41 412 2 "FUNCTION"
C L "MACGetHeader" 41 412 1 "FUNCTION"
C L "MACGetHeader" 41 412 3 "FUNCTION"
C L "MACGetHeader" 41 412 1 "FUNCTION"
C L "MACGetHeader" 41 412 1 "FUNCTION"
C L "MACPutHeader" 41 536 1 "*"
C L "MACPutHeader" 41 536 1 "*"
C L "MACPutHeader" 41 536 1 "*"
C L "MACPutHeader" 41 536 1 "*"
C L "MACPutHeader" 41 536 1 "*"
C L "MACPutHeader" 41 536 1 "*"
C L "MACPutHeader" 41 536 1 "*"
C L "MACPutHeader" 41 536 1 "*"
C L "MACPutHeader" 41 536 1 "*"
C L "MACPutHeader" 41 536 1 "*"
C L "MACPutHeader" 41 536 1 "*"
C L "MACPutHeader" 41 536 1 "*"
C L "MACPutHeader" 41 536 1 "*"
C L "MACPutHeader" 41 536 1 "*"
C L "MACPutHeader" 41 536 1 "*"
C L "MACPutHeader" 41 536 1 "*"
V L "remote" 41 560 "*MAC_ADDR" `2576 
V L "type" 41 560 "BYTE" `2577 
V L "dataLen" 41 560 "WORD" `2961 
F G "MACPutHeader" 41 561 "void(*MAC_ADDR remote,BYTE type,WORD dataLen)" `2575  "Set the write pointer to the beginning of the transmit buffer"
C L "MACPutHeader" 41 536 1 "FUNCTION"
C L "MACPutHeader" 41 536 1 "FUNCTION"
C L "MACPutHeader" 41 536 2 "FUNCTION"
C L "MACPutHeader" 41 536 1 "FUNCTION"
C L "MACPutHeader" 41 536 1 "FUNCTION"
C L "MACFlush" 41 583 1 "*"
C L "MACFlush" 41 583 1 "*"
C L "MACFlush" 41 583 1 "*"
C L "MACFlush" 41 583 1 "*"
C L "MACFlush" 41 583 1 "*"
C L "MACFlush" 41 583 1 "*"
C L "MACFlush" 41 583 1 "*"
C L "MACFlush" 41 583 1 "*"
C L "MACFlush" 41 583 1 "*"
C L "MACFlush" 41 583 1 "*"
C L "MACFlush" 41 583 1 "*"
C L "MACFlush" 41 583 1 "*"
C L "MACFlush" 41 583 1 "*"
C L "MACFlush" 41 583 1 "*"
C L "MACFlush" 41 583 1 "*"
F G "MACFlush" 41 607 "void()" `2585  "Reset the Ethernet TX logic.  This is an errata workaround to"
C L "MACFlush" 41 583 2 "FUNCTION"
C L "MACFlush" 41 583 2 "FUNCTION"
V L "i" 41 616 "BYTE" `2958 
C L "MACFlush" 41 583 8 "FUNCTION"
C L "MACSetReadPtrInRx" 41 655 1 "*"
C L "MACSetReadPtrInRx" 41 655 1 "*"
C L "MACSetReadPtrInRx" 41 655 1 "*"
C L "MACSetReadPtrInRx" 41 655 1 "*"
C L "MACSetReadPtrInRx" 41 655 1 "*"
C L "MACSetReadPtrInRx" 41 655 1 "*"
C L "MACSetReadPtrInRx" 41 655 1 "*"
C L "MACSetReadPtrInRx" 41 655 1 "*"
C L "MACSetReadPtrInRx" 41 655 1 "*"
C L "MACSetReadPtrInRx" 41 655 1 "*"
C L "MACSetReadPtrInRx" 41 655 1 "*"
C L "MACSetReadPtrInRx" 41 655 1 "*"
C L "MACSetReadPtrInRx" 41 655 1 "*"
C L "MACSetReadPtrInRx" 41 655 1 "*"
V L "offset" 41 677 "WORD" `2960 
F G "MACSetReadPtrInRx" 41 678 "void(WORD offset)" `2558 
V L "ReadPT" 41 679 "WORD_VAL" `2959  "Determine the address of the beginning of the entire packet"
C L "MACSetReadPtrInRx" 41 655 1 "FUNCTION"
C L "MACSetReadPtrInRx" 41 655 1 "FUNCTION"
C L "MACSetReadPtrInRx" 41 655 1 "FUNCTION"
C L "MACSetWritePtr" 41 695 1 "*"
C L "MACSetWritePtr" 41 695 1 "*"
C L "MACSetWritePtr" 41 695 1 "*"
C L "MACSetWritePtr" 41 695 1 "*"
C L "MACSetWritePtr" 41 695 1 "*"
C L "MACSetWritePtr" 41 695 1 "*"
C L "MACSetWritePtr" 41 695 1 "*"
C L "MACSetWritePtr" 41 695 1 "*"
V L "address" 41 711 "int16" `2961 
F G "MACSetWritePtr" 41 712 "int16(int16 address)" `2560 
V L "oldVal" 41 713 "WORD" `2960 
C L "MACSetReadPtr" 41 720 1 "*"
C L "MACSetReadPtr" 41 720 1 "*"
C L "MACSetReadPtr" 41 720 1 "*"
C L "MACSetReadPtr" 41 720 1 "*"
C L "MACSetReadPtr" 41 720 1 "*"
C L "MACSetReadPtr" 41 720 1 "*"
C L "MACSetReadPtr" 41 720 1 "*"
C L "MACSetReadPtr" 41 720 1 "*"
V L "address" 41 736 "int16" `2962 
F G "MACSetReadPtr" 41 737 "int16(int16 address)" `2562 
V L "oldVal" 41 738 "WORD" `2961 
C L "MACCalcRxChecksum" 41 746 1 "*"
C L "MACCalcRxChecksum" 41 746 1 "*"
C L "MACCalcRxChecksum" 41 746 1 "*"
C L "MACCalcRxChecksum" 41 746 1 "*"
C L "MACCalcRxChecksum" 41 746 1 "*"
C L "MACCalcRxChecksum" 41 746 1 "*"
C L "MACCalcRxChecksum" 41 746 1 "*"
C L "MACCalcRxChecksum" 41 746 1 "*"
C L "MACCalcRxChecksum" 41 746 1 "*"
C L "MACCalcRxChecksum" 41 746 1 "*"
C L "MACCalcRxChecksum" 41 746 1 "*"
V L "offset" 41 765 "WORD" `2535 
V L "len" 41 765 "WORD" `2964 
F G "MACCalcRxChecksum" 41 766 "WORD(WORD offset,WORD len)" `2534 
V L "temp" 41 767 "WORD" `2962 
V L "RDSave" 41 768 "WORD" `2963  "Add the offset requested by firmware plus the Ethernet header"
C L "MACCalcRxChecksum" 41 746 1 "FUNCTION"
C L "CalcIPBufferChecksum" 41 786 1 "*"
C L "CalcIPBufferChecksum" 41 786 1 "*"
C L "CalcIPBufferChecksum" 41 786 1 "*"
C L "CalcIPBufferChecksum" 41 786 1 "*"
C L "CalcIPBufferChecksum" 41 786 1 "*"
C L "CalcIPBufferChecksum" 41 786 1 "*"
C L "CalcIPBufferChecksum" 41 786 1 "*"
C L "CalcIPBufferChecksum" 41 786 1 "*"
C L "CalcIPBufferChecksum" 41 786 1 "*"
C L "CalcIPBufferChecksum" 41 786 1 "*"
C L "CalcIPBufferChecksum" 41 786 1 "*"
C L "CalcIPBufferChecksum" 41 786 1 "*"
C L "CalcIPBufferChecksum" 41 786 1 "*"
C L "CalcIPBufferChecksum" 41 786 1 "*"
C L "CalcIPBufferChecksum" 41 786 1 "*"
C L "CalcIPBufferChecksum" 41 786 34 "*"
C L "CalcIPBufferChecksum" 41 865 1 "*"
C L "CalcIPBufferChecksum" 41 865 1 "*"
C L "CalcIPBufferChecksum" 41 865 1 "*"
C L "CalcIPBufferChecksum" 41 865 1 "*"
C L "CalcIPBufferChecksum" 41 865 1 "*"
C L "CalcIPBufferChecksum" 41 865 1 "*"
C L "CalcIPBufferChecksum" 41 865 1 "*"
C L "CalcIPBufferChecksum" 41 865 1 "*"
C L "CalcIPBufferChecksum" 41 865 1 "*"
C L "CalcIPBufferChecksum" 41 865 1 "*"
C L "CalcIPBufferChecksum" 41 865 1 "*"
C L "CalcIPBufferChecksum" 41 865 1 "*"
C L "CalcIPBufferChecksum" 41 865 1 "*"
V L "len" 41 886 "WORD" `2965 
F G "CalcIPBufferChecksum" 41 887 "WORD(WORD len)" `2537 
V L "Start" 41 888 "WORD" `2964 
V L "Checksum" 41 889 "DWORD_VAL" `2965 
V L "ChunkLen" 41 890 "WORD" `2966 
V L "DataBuffer" 41 891 "BYTE[20]" `2967  "Must be an even size"
V L "DataPtr" 41 892 "*WORD" `2968  "Save the read pointer starting address"
C L "CalcIPBufferChecksum" 41 865 2 "FUNCTION"
C L "CalcIPBufferChecksum" 41 865 1 "FUNCTION"
C L "CalcIPBufferChecksum" 41 865 1 "FUNCTION"
C L "CalcIPBufferChecksum" 41 865 1 "FUNCTION"
C L "CalcIPBufferChecksum" 41 865 1 "FUNCTION"
C L "CalcIPBufferChecksum" 41 865 2 "FUNCTION"
C L "CalcIPBufferChecksum" 41 865 1 "FUNCTION"
C L "MACMemCopyAsync" 41 936 1 "*"
C L "MACMemCopyAsync" 41 936 1 "*"
C L "MACMemCopyAsync" 41 936 1 "*"
C L "MACMemCopyAsync" 41 936 1 "*"
C L "MACMemCopyAsync" 41 936 1 "*"
C L "MACMemCopyAsync" 41 936 1 "*"
C L "MACMemCopyAsync" 41 936 1 "*"
C L "MACMemCopyAsync" 41 936 1 "*"
C L "MACMemCopyAsync" 41 936 1 "*"
C L "MACMemCopyAsync" 41 936 1 "*"
C L "MACMemCopyAsync" 41 936 1 "*"
C L "MACMemCopyAsync" 41 936 1 "*"
C L "MACMemCopyAsync" 41 936 1 "*"
C L "MACMemCopyAsync" 41 936 1 "*"
C L "MACMemCopyAsync" 41 936 1 "*"
C L "MACMemCopyAsync" 41 936 1 "*"
V L "destAddr" 41 960 "int16" `2571 
V L "sourceAddr" 41 960 "int16" `2572 
V L "len" 41 960 "WORD" `2972 
F G "MACMemCopyAsync" 41 961 "void(int16 destAddr,int16 sourceAddr,WORD len)" `2570 
V L "ReadSave" 41 962 "WORD_VAL" `2969 
V L "WriteSave" 41 962 "WORD_VAL" `2970 
V L "UpdateWritePointer" 41 963 "BOOL" `2971 
V L "UpdateReadPointer" 41 964 "BOOL" `2972 
C L "MACMemCopyAsync" 41 936 2 "FUNCTION"
C L "MACMemCopyAsync" 41 936 1 "FUNCTION"
C L "MACMemCopyAsync" 41 936 1 "FUNCTION"
C L "MACMemCopyAsync" 41 936 1 "FUNCTION"
C L "MACIsMemCopyDone" 41 936 20 "FUNCTION"
F G "MACIsMemCopyDone" 41 1063 "int8()" `2574 
C L "MACGet" 41 1067 1 "*"
C L "MACGet" 41 1067 1 "*"
C L "MACGet" 41 1067 1 "*"
C L "MACGet" 41 1067 1 "*"
C L "MACGet" 41 1067 1 "*"
C L "MACGet" 41 1067 1 "*"
C L "MACGet" 41 1067 1 "*"
C L "MACGet" 41 1067 1 "*"
C L "MACGet" 41 1067 1 "*"
C L "MACGet" 41 1067 1 "*"
F G "MACGet" 41 1086 "BYTE()" `2564 
C L "MACGetArray" 41 1067 1 "FUNCTION"
C L "MACGetArray" 41 1096 1 "*"
C L "MACGetArray" 41 1096 1 "*"
C L "MACGetArray" 41 1096 1 "*"
C L "MACGetArray" 41 1096 1 "*"
C L "MACGetArray" 41 1096 1 "*"
C L "MACGetArray" 41 1096 1 "*"
C L "MACGetArray" 41 1096 1 "*"
C L "MACGetArray" 41 1096 1 "*"
C L "MACGetArray" 41 1096 1 "*"
C L "MACGetArray" 41 1096 1 "*"
V L "val" 41 1114 "*BYTE" `2566 
V L "len" 41 1114 "WORD" `2975 
F G "MACGetArray" 41 1115 "WORD(*BYTE val,WORD len)" `2565 
V L "w" 41 1116 "WORD" `2973 
V L "i" 41 1141 "BYTE" `2974 
C L "MACPut" 41 1096 1 "FUNCTION"
C L "MACPut" 41 1151 1 "*"
C L "MACPut" 41 1151 1 "*"
C L "MACPut" 41 1151 1 "*"
C L "MACPut" 41 1151 1 "*"
C L "MACPut" 41 1151 1 "*"
C L "MACPut" 41 1151 1 "*"
C L "MACPut" 41 1151 1 "*"
C L "MACPut" 41 1151 1 "*"
V L "val" 41 1167 "BYTE" `2976 
F G "MACPut" 41 1168 "void(BYTE val)" `2580  "Note:  Due to a PIC18F97J60 bug, you must use the MOVFF instruction to"
C L "MACPut" 41 1151 2 "FUNCTION"
C L "MACPutArray" 41 1151 1 "FUNCTION"
C L "MACPutArray" 41 1182 1 "*"
C L "MACPutArray" 41 1182 1 "*"
C L "MACPutArray" 41 1182 1 "*"
C L "MACPutArray" 41 1182 1 "*"
C L "MACPutArray" 41 1182 1 "*"
C L "MACPutArray" 41 1182 1 "*"
C L "MACPutArray" 41 1182 1 "*"
C L "MACPutArray" 41 1182 1 "*"
C L "MACPutArray" 41 1182 1 "*"
C L "MACPutArray" 41 1182 1 "*"
V L "val" 41 1200 "*BYTE" `2583 
V L "len" 41 1200 "WORD" `2977 
F G "MACPutArray" 41 1201 "void(*BYTE val,WORD len)" `2582 
C L "MACPutArray" 41 1182 3 "FUNCTION"
C L "MACPutROMArray" 41 1182 1 "FUNCTION"
V L "val" 41 1217 "*" `2587 
V L "len" 41 1217 "WORD" `2977 
F G "MACPutROMArray" 41 1218 "void(* val,WORD len)" `2586 
C L "MACPutROMArray" 41 1182 3 "FUNCTION"
C L "ReadPHYReg" 41 1182 1 "FUNCTION"
C L "ReadPHYReg" 41 1235 1 "*"
C L "ReadPHYReg" 41 1235 1 "*"
C L "ReadPHYReg" 41 1235 1 "*"
C L "ReadPHYReg" 41 1235 1 "*"
C L "ReadPHYReg" 41 1235 1 "*"
C L "ReadPHYReg" 41 1235 1 "*"
C L "ReadPHYReg" 41 1235 1 "*"
C L "ReadPHYReg" 41 1235 1 "*"
C L "ReadPHYReg" 41 1235 1 "*"
V L "Register" 41 1252 "BYTE" `2976 
F G "ReadPHYReg" 41 1253 "PHYREG(BYTE Register)" `2545 
V L "Result" 41 1254 "PHYREG" `2975  "Set the right address and start the register read operation"
C L "ReadPHYReg" 41 1235 2 "FUNCTION"
C L "ReadPHYReg" 41 1235 1 "FUNCTION"
C L "ReadPHYReg" 41 1235 1 "FUNCTION"
C L "WritePHYReg" 41 1235 1 "FUNCTION"
C L "WritePHYReg" 41 1276 1 "*"
C L "WritePHYReg" 41 1276 1 "*"
C L "WritePHYReg" 41 1276 1 "*"
C L "WritePHYReg" 41 1276 1 "*"
C L "WritePHYReg" 41 1276 1 "*"
C L "WritePHYReg" 41 1276 1 "*"
C L "WritePHYReg" 41 1276 1 "*"
C L "WritePHYReg" 41 1276 1 "*"
C L "WritePHYReg" 41 1276 1 "*"
C L "WritePHYReg" 41 1276 1 "*"
V L "Register" 41 1294 "BYTE" `2543 
V L "Data" 41 1294 "WORD" `2978 
F G "WritePHYReg" 41 1295 "void(BYTE Register,WORD Data)" `2542 
V L "GIESave" 41 1296 "BYTE" `2976  "Write the register address"
C L "WritePHYReg" 41 1276 9 "FUNCTION"
C L "WritePHYReg" 41 1276 1 "FUNCTION"
C L "WritePHYReg" 41 1276 1 "FUNCTION"
C L "WritePHYReg" 41 1276 3 "FUNCTION"
C L "MACPowerDown" 41 1276 1 "FUNCTION"
C L "MACPowerDown" 41 1338 1 "*"
C L "MACPowerDown" 41 1338 1 "*"
C L "MACPowerDown" 41 1338 1 "*"
C L "MACPowerDown" 41 1338 1 "*"
C L "MACPowerDown" 41 1338 1 "*"
C L "MACPowerDown" 41 1338 1 "*"
C L "MACPowerDown" 41 1338 1 "*"
C L "MACPowerDown" 41 1338 1 "*"
C L "MACPowerDown" 41 1338 1 "*"
C L "MACPowerDown" 41 1338 1 "*"
C L "MACPowerDown" 41 1338 1 "*"
C L "MACPowerDown" 41 1338 1 "*"
C L "MACPowerDown" 41 1338 1 "*"
C L "MACPowerDown" 41 1338 1 "*"
F G "MACPowerDown" 41 1362 "void()" `2539  "Disable packet reception"
C L "MACPowerDown" 41 1338 2 "FUNCTION"
C L "MACPowerDown" 41 1338 1 "FUNCTION"
C L "MACPowerDown" 41 1338 1 "FUNCTION"
C L "MACPowerUp" 41 1338 1 "FUNCTION"
C L "MACPowerUp" 41 1377 1 "*"
C L "MACPowerUp" 41 1377 1 "*"
C L "MACPowerUp" 41 1377 1 "*"
C L "MACPowerUp" 41 1377 1 "*"
C L "MACPowerUp" 41 1377 1 "*"
C L "MACPowerUp" 41 1377 1 "*"
C L "MACPowerUp" 41 1377 1 "*"
C L "MACPowerUp" 41 1377 1 "*"
C L "MACPowerUp" 41 1377 1 "*"
C L "MACPowerUp" 41 1377 1 "*"
C L "MACPowerUp" 41 1377 1 "*"
C L "MACPowerUp" 41 1377 1 "*"
C L "MACPowerUp" 41 1377 1 "*"
F G "MACPowerUp" 41 1399 "void()" `2541  "Power up the Ethernet module"
C L "MACPowerUp" 41 1377 1 "FUNCTION"
C L "MACPowerUp" 41 1377 1 "FUNCTION"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 1 "*"
C G "" 41 1412 2 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
C G "" 42 1 1 "*"
D G "__IP_C" 42 61 ""
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
D G "IPv4" 42 66 " (0x40u)"
D G "IP_VERSION" 42 67 "IPv4"
D G "IP_IHL" 42 72 " (0x05)"
D G "IP_SERVICE_NW_CTRL" 42 74 " (0x07)"
D G "IP_SERVICE_IN_CTRL" 42 75 " (0x06)"
D G "IP_SERVICE_ECP" 42 76 " (0x05)"
D G "IP_SERVICE_OVR" 42 77 " (0x04)"
D G "IP_SERVICE_FLASH" 42 78 " (0x03)"
D G "IP_SERVICE_IMM" 42 79 " (0x02)"
D G "IP_SERVICE_PRIOR" 42 80 " (0x01)"
D G "IP_SERVICE_ROUTINE" 42 81 " (0x00)"
D G "IP_SERVICE_N_DELAY" 42 83 " (0x00)"
D G "IP_SERCICE_L_DELAY" 42 84 " (0x08)"
D G "IP_SERVICE_N_THRPT" 42 85 " (0x00)"
D G "IP_SERVICE_H_THRPT" 42 86 " (0x10)"
D G "IP_SERVICE_N_RELIB" 42 87 " (0x00)"
D G "IP_SERVICE_H_RELIB" 42 88 " (0x20)"
D G "IP_SERVICE" 42 90 " (IP_SERVICE_ROUTINE | IP_SERVICE_N_DELAY)"
D G "MY_IP_TTL" 42 96 " (100)" "Time-To-Live in hops"
V G "_Identifier" 42 101 "WORD" `2977 
V G "IPHeaderLen" 42 102 "BYTE" `2978 
V L "h" 42 105 "*IP_HEADER" `2980 
f G "SwapIPHeader" 42 105 "void(*IP_HEADER h)" `2979  "* Function:        BOOL IPGetHeader( IP_ADDR    *localIP,"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
C L "SwapIPHeader" 42 110 1 "*"
V L "localIP" 42 136 "*DWORD_VAL" `2613 
V L "remote" 42 137 "*NODE_INFO" `2614 
V L "protocol" 42 138 "*BYTE" `2615 
V L "len" 42 139 "*WORD" `2985 
F G "IPGetHeader" 42 140 "int8(*DWORD_VAL localIP,*NODE_INFO remote,*BYTE protocol,*WORD len)" `2612 
V L "CalcChecksum" 42 141 "WORD_VAL" `2981 
V L "header" 42 142 "IP_HEADER" `2982  "Read IP header."
C L "IPGetHeader" 42 110 1 "FUNCTION"
C L "IPGetHeader" 42 110 2 "FUNCTION"
C L "IPGetHeader" 42 110 4 "FUNCTION"
C L "IPGetHeader" 42 110 1 "FUNCTION"
C L "IPGetHeader" 42 110 2 "FUNCTION"
C L "IPGetHeader" 42 110 1 "FUNCTION"
C L "IPGetHeader" 42 110 2 "FUNCTION"
C L "IPPutHeader" 42 234 1 "*"
C L "IPPutHeader" 42 234 1 "*"
C L "IPPutHeader" 42 234 1 "*"
C L "IPPutHeader" 42 234 1 "*"
C L "IPPutHeader" 42 234 1 "*"
C L "IPPutHeader" 42 234 1 "*"
C L "IPPutHeader" 42 234 1 "*"
C L "IPPutHeader" 42 234 1 "*"
C L "IPPutHeader" 42 234 1 "*"
C L "IPPutHeader" 42 234 1 "*"
C L "IPPutHeader" 42 234 1 "*"
V L "remote" 42 252 "*NODE_INFO" `2609 
V L "protocol" 42 253 "BYTE" `2610 
V L "len" 42 254 "WORD" `2986 
F G "IPPutHeader" 42 255 "WORD(*NODE_INFO remote,BYTE protocol,WORD len)" `2608 
V L "header" 42 256 "IP_HEADER" `2983 
C L "IPSetRxBuffer" 42 283 1 "*"
C L "IPSetRxBuffer" 42 283 1 "*"
C L "IPSetRxBuffer" 42 283 1 "*"
C L "IPSetRxBuffer" 42 283 1 "*"
C L "IPSetRxBuffer" 42 283 1 "*"
C L "IPSetRxBuffer" 42 283 1 "*"
C L "IPSetRxBuffer" 42 283 1 "*"
C L "IPSetRxBuffer" 42 283 1 "*"
V L "Offset" 42 299 "WORD" `2985 
F G "IPSetRxBuffer" 42 300 "void(WORD Offset)" `2617 
V L "h" 42 306 "*IP_HEADER" `2985 
F G "SwapIPHeader" 42 307 "void(*IP_HEADER h)" `2979 
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
C G "" 43 1 1 "*"
D G "__ARP_C" 43 63 ""
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
V G "Cache" 43 80 "NODE_INFO" `2984  "Cache for one ARP response"
C L "ARPPut" 43 67 2 "FUNCTION"
V L "packet" 43 109 "*ARP_PACKET" `2986 
f G "ARPPut" 43 109 "int8(*ARP_PACKET packet)" `2985  "Section:"
C L "ARPPut" 43 67 20 "FUNCTION"
V L "SrcIPAddr" 43 277 "DWORD" `2640 
V L "DestIPAddr" 43 277 "DWORD" `2641 
V L "op_req" 43 277 "BYTE" `2990 
F G "ARPSendPkt" 43 278 "int8(DWORD SrcIPAddr,DWORD DestIPAddr,BYTE op_req)" `2639 
V L "packet" 43 279 "ARP_PACKET" `2987 
C L "ARPPut" 43 67 12 "FUNCTION"
V L "packet" 43 336 "*ARP_PACKET" `2989 
F G "ARPPut" 43 337 "int8(*ARP_PACKET packet)" `2985 
C L "ARPPut" 43 67 1 "FUNCTION"
C L "ARPInit" 43 67 16 "FUNCTION"
F G "ARPInit" 43 391 "void()" `2619 
C L "ARPProcess" 43 67 17 "FUNCTION"
F G "ARPProcess" 43 430 "int8()" `2631 
V L "packet" 43 431 "ARP_PACKET" `2988 
V L "Target" 43 432 "NODE_INFO" `2989 
V L "SM_ARP_IDLE" 43 439 "0" `2991 
V L "SM_ARP_REPLY" 43 440 "1" `2992 
V L "smARP" 43 440 "" `2993 
C L "ARPProcess" 43 67 1 "FUNCTION"
C L "ARPProcess" 43 67 1 "FUNCTION"
C L "ARPProcess" 43 67 1 "FUNCTION"
C L "ARPProcess" 43 67 5 "FUNCTION"
C L "ARPProcess" 43 67 1 "FUNCTION"
C L "ARPProcess" 43 67 1 "FUNCTION"
C L "ARPProcess" 43 67 1 "FUNCTION"
C L "ARPProcess" 43 67 1 "FUNCTION"
C L "ARPResolve" 43 67 18 "FUNCTION"
V L "IPAddr" 43 582 "*DWORD_VAL" `2995 
F G "ARPResolve" 43 583 "void(*DWORD_VAL IPAddr)" `2632 
V L "packet" 43 584 "ARP_PACKET" `2994 
C L "ARPResolve" 43 67 1 "FUNCTION"
C L "ARPIsResolved" 43 67 27 "FUNCTION"
V L "IPAddr" 43 666 "*DWORD_VAL" `2635 
V L "MACAddr" 43 666 "*MAC_ADDR" `2997 
F G "ARPIsResolved" 43 667 "int8(*DWORD_VAL IPAddr,*MAC_ADDR MACAddr)" `2634 
C L "SwapARPPacket" 43 67 10 "FUNCTION"
V L "p" 43 696 "*ARP_PACKET" `2996 
F G "SwapARPPacket" 43 697 "void(*ARP_PACKET p)" `2637 
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
C G "" 44 1 1 "*"
D G "__ICMP_C" 44 54 ""
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 9 1 1 "*"
C L "ICMPProcess" 44 114 1 "*"
C L "ICMPProcess" 44 114 1 "*"
C L "ICMPProcess" 44 114 1 "*"
C L "ICMPProcess" 44 114 1 "*"
C L "ICMPProcess" 44 114 1 "*"
C L "ICMPProcess" 44 114 1 "*"
C L "ICMPProcess" 44 114 1 "*"
C L "ICMPProcess" 44 114 1 "*"
C L "ICMPProcess" 44 114 1 "*"
C L "ICMPProcess" 44 114 1 "*"
C L "ICMPProcess" 44 114 1 "*"
C L "ICMPProcess" 44 114 1 "*"
V L "remote" 44 134 "*NODE_INFO" `2838 
V L "len" 44 134 "WORD" `2997 
F G "ICMPProcess" 44 135 "void(*NODE_INFO remote,WORD len)" `2837 
V L "dwVal" 44 136 "DWORD_VAL" `2995  "Obtain the ICMP header Type, Code, and Checksum fields"
C L "ICMPProcess" 44 114 1 "FUNCTION"
C L "ICMPProcess" 44 114 4 "FUNCTION"
C L "ICMPProcess" 44 114 1 "FUNCTION"
C L "ICMPProcess" 44 114 1 "FUNCTION"
C L "ICMPProcess" 44 114 1 "FUNCTION"
C L "ICMPProcess" 44 114 2 "FUNCTION"
C L "ICMPProcess" 44 114 2 "FUNCTION"
C L "ICMPProcess" 44 114 1 "FUNCTION"
C L "ICMPProcess" 44 114 1 "FUNCTION"
C L "ICMPProcess" 44 114 1 "FUNCTION"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
C G "" 45 1 1 "*"
D G "__TCP_C" 45 60 ""
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
C G "" 9 1 1 "*"
D G "LOCAL_PORT_START_NUMBER" 45 72 " (1024u)"
D G "LOCAL_PORT_END_NUMBER" 45 74 " (5000u)"
D G "TCP_OPTIMIZE_FOR_SIZE" 45 88 ""
D G "TCP_MAX_SEG_SIZE_TX" 45 106 " (1460u)"
D G "TCP_MAX_SEG_SIZE_RX" 45 114 " (536u)"
D G "TCP_START_TIMEOUT_VAL" 45 117 " ((DWORD)TICK_SECOND*1)" "Timeout to retransmit unacked data"
D G "TCP_DELAYED_ACK_TIMEOUT" 45 118 " ((DWORD)TICK_SECOND/10)" "Timeout for delayed-acknowledgement algorithm"
D G "TCP_FIN_WAIT_2_TIMEOUT" 45 119 " ((DWORD)TICK_SECOND*5)" "Timeout for FIN WAIT 2 state"
D G "TCP_KEEP_ALIVE_TIMEOUT" 45 120 " ((DWORD)TICK_SECOND*10)" "Timeout for keep-alive messages when no traffic is sent"
D G "TCP_CLOSE_WAIT_TIMEOUT" 45 121 " ((DWORD)TICK_SECOND/5)" "Timeout for the CLOSE_WAIT state"
D G "TCP_MAX_RETRIES" 45 122 " (5u)" "Maximum number of retransmission attempts"
D G "TCP_MAX_UNACKED_KEEP_ALIVES" 45 123 " (6u)" "Maximum number of keep-alive messages that can be sent without receiving a response before automatically closing the connection"
D G "TCP_MAX_SYN_RETRIES" 45 124 " (2u)" "Smaller than all other retries to reduce SYN flood DoS duration"
D G "TCP_AUTO_TRANSMIT_TIMEOUT_VAL" 45 126 " (TICK_SECOND/25ull)" "Timeout before automatically transmitting unflushed data"
D G "TCP_WINDOW_UPDATE_TIMEOUT_VAL" 45 127 " (TICK_SECOND/5ull)" "Timeout before automatically transmitting a window update due to a TCPGet() or TCPGetArray() function call"
D G "TCP_SYN_QUEUE_MAX_ENTRIES" 45 129 " (3u)" "Number of TCP RX SYN packets to save if they cannot be serviced immediately"
D G "TCP_SYN_QUEUE_TIMEOUT" 45 130 " ((DWORD)TICK_SECOND*3)" "Timeout for when SYN queue entries are deleted if unserviceable"
D G "FIN" 45 137 " (0x01)" "FIN Flag as defined in RFC"
D G "SYN" 45 138 " (0x02)" "SYN Flag as defined in RFC"
D G "RST" 45 139 " (0x04)" "Reset Flag as defined in RFC"
D G "PSH" 45 140 " (0x08)" "Push Flag as defined in RFC"
D G "ACK" 45 141 " (0x10)" "Acknowledge Flag as defined in RFC"
D G "URG" 45 142 " (0x20)" "Urgent Flag as defined in RFC"
T G "TCP_HEADER" 45 176 "{WORD SourcePort,WORD DestPort,DWORD SeqNumber,DWORD AckNumber}" `3020 
D G "TCP_OPTIONS_END_OF_LIST" 45 178 " (0x00u)" "End of List TCP Option Flag"
D G "TCP_OPTIONS_NO_OP" 45 179 " (0x01u)" "No Op TCP Option"
D G "TCP_OPTIONS_MAX_SEG_SIZE" 45 180 " (0x02u)" "Maximum segment size TCP flag"
T G "TCP_OPTIONS" 45 186 "{BYTE Kind,BYTE Length,WORD_VAL MaxSegSize}" `3025  "TCP Options data structure"
T G "TCP_SYN_QUEUE" 45 199 "{NODE_INFO niSourceAddress,WORD wSourcePort,DWORD dwSourceSEQ,WORD wDestPort,WORD wTimestamp}" `3032 
V G "NextPort" 45 203 "WORD" `3033  "Tracking variable for next local client port number"
D G "TCP_SOCKET_COUNT" 45 213 "TCP_CONFIGURATION" "ccs changed"
V G "TCBStubs" 45 241 "TCB_STUB[1]" `3034 
V G "MyTCB" 45 247 "TCB" `3035  "Currently loaded TCB"
V G "hCurrentTCP" 45 248 "TCP_SOCKET" `3036 
V G "SYNQueue" 45 253 "TCP_SYN_QUEUE[3]" `3037  "Array of saved incoming SYN requests that need to be serviced later"
C L "TCPRAMCopy" 45 66 2 "FUNCTION"
V L "wDest" 45 264 "int16" `3039 
V L "vDestType" 45 264 "BYTE" `3040 
V L "wSource" 45 264 "int16" `3041 
V L "vSourceType" 45 264 "BYTE" `3042 
V L "wLength" 45 264 "WORD" `3043 
f G "TCPRAMCopy" 45 264 "void(int16 wDest,BYTE vDestType,int16 wSource,BYTE vSourceType,WORD wLength)" `3038 
V L "wDest" 45 267 "int16" `3045 
V L "wDestType" 45 267 "BYTE" `3046 
V L "wSource" 45 267 "*" `3047 
V L "wLength" 45 267 "WORD" `3048 
f G "TCPRAMCopyROM" 45 267 "void(int16 wDest,BYTE wDestType,* wSource,WORD wLength)" `3044 
V L "vTCPFlags" 45 272 "BYTE" `3050 
V L "vSendFlags" 45 272 "BYTE" `3051 
f G "SendTCP" 45 272 "void(BYTE vTCPFlags,BYTE vSendFlags)" `3049 
V L "h" 45 273 "*TCP_HEADER" `3053 
V L "len" 45 273 "WORD" `3054 
f G "HandleTCPSeg" 45 273 "void(*TCP_HEADER h,WORD len)" `3052 
V L "h" 45 274 "*TCP_HEADER" `3056 
V L "remote" 45 274 "*NODE_INFO" `3057 
f G "FindMatchingTCPSocket" 45 274 "int8(*TCP_HEADER h,*NODE_INFO remote)" `3055 
V L "header" 45 275 "*TCP_HEADER" `3059 
f G "SwapTCPHeader" 45 275 "void(*TCP_HEADER header)" `3058 
f G "CloseSocket" 45 276 "void()" `3060 
f G "SyncTCB" 45 277 "void()" `3061  "Indicates if this packet is a retransmission (no reset) or a new packet (reset required)"
D G "SENDTCP_RESET_TIMERS" 45 284 "0x01"
D G "SENDTCP_KEEP_ALIVE" 45 286 "0x02"
C L "SyncTCB" 45 66 2 "FUNCTION"
V G "MyTCBStub" 45 295 "TCB_STUB" `3062  "Flushes MyTCBStub cache and loads up the specified TCB_STUB."
C L "SyncTCB" 45 66 1 "FUNCTION"
V L "hTCP" 45 299 "TCP_SOCKET" `3064 
F G "SyncTCBStub" 45 300 "void(TCP_SOCKET hTCP)" `3063 
C L "SyncTCBStub" 45 66 1 "FUNCTION"
C L "SyncTCBStub" 45 66 1 "FUNCTION"
C L "SyncTCB" 45 66 2 "FUNCTION"
F G "SyncTCB" 45 331 "void()" `3061 
V L "hLastTCB" 45 332 "TCP_SOCKET" `3065 
C L "SyncTCB" 45 66 1 "FUNCTION"
C L "SyncTCB" 45 66 1 "FUNCTION"
C L "TCPInit" 45 66 17 "FUNCTION"
F G "TCPInit" 45 375 "void()" `2747 
V L "i" 45 376 "BYTE" `3066 
V L "vSocketsAllocated" 45 377 "BYTE" `3067 
V L "wTXSize" 45 378 "WORD" `3068 
V L "wRXSize" 45 378 "WORD" `3069 
V L "ptrBaseAddress" 45 379 "int16" `3070 
V L "vMedium" 45 380 "BYTE" `3071 
V L "wCurrentETHAddress" 45 382 "WORD" `3072 
C L "TCPInit" 45 66 5 "FUNCTION"
C L "TCPInit" 45 66 1 "FUNCTION"
C L "TCPInit" 45 66 1 "FUNCTION"
C L "TCPInit" 45 66 1 "FUNCTION"
C L "TCPInit" 45 66 2 "FUNCTION"
C L "TCPInit" 45 66 1 "FUNCTION"
C L "TCPOpen" 45 66 43 "FUNCTION"
C L "TCPOpen" 45 480 2 "*"
C L "TCPOpen" 45 480 5 "*"
C L "TCPOpen" 45 480 5 "*"
C L "TCPOpen" 45 480 4 "*"
C L "TCPOpen" 45 480 11 "*"
C L "TCPOpen" 45 480 4 "*"
C L "TCPOpen" 45 480 29 "*"
V L "dwRemoteHost" 45 595 "DWORD" `2812 
V L "vRemoteHostType" 45 595 "BYTE" `2813 
V L "wPort" 45 595 "WORD" `2814 
V L "vSocketPurpose" 45 595 "BYTE" `3081 
F G "TCPOpen" 45 596 "TCP_SOCKET(DWORD dwRemoteHost,BYTE vRemoteHostType,WORD wPort,BYTE vSocketPurpose)" `2811 
V L "hTCP" 45 597 "TCP_SOCKET" `3077  "Find an available socket that matches the specified socket type"
C L "TCPOpen" 45 480 1 "FUNCTION"
C L "TCPOpen" 45 480 1 "FUNCTION"
C L "TCPOpen" 45 480 2 "FUNCTION"
C L "TCPOpen" 45 480 1 "FUNCTION"
C L "TCPOpen" 45 480 1 "FUNCTION"
C L "TCPOpen" 45 480 2 "FUNCTION"
C L "TCPOpen" 45 480 1 "FUNCTION"
C L "TCPOpen" 45 480 1 "FUNCTION"
C L "TCPOpen" 45 480 3 "FUNCTION"
C L "TCPOpen" 45 480 1 "FUNCTION"
C L "TCPWasReset" 45 480 28 "FUNCTION"
V L "hTCP" 45 728 "TCP_SOCKET" `3079 
F G "TCPWasReset" 45 729 "int8(TCP_SOCKET hTCP)" `2750 
C L "TCPIsConnected" 45 480 20 "FUNCTION"
V L "hTCP" 45 775 "TCP_SOCKET" `3079 
F G "TCPIsConnected" 45 776 "int8(TCP_SOCKET hTCP)" `2752 
C L "TCPDisconnect" 45 480 32 "FUNCTION"
V L "hTCP" 45 830 "TCP_SOCKET" `3079 
F G "TCPDisconnect" 45 831 "void(TCP_SOCKET hTCP)" `2754 
C L "TCPDisconnect" 45 480 7 "FUNCTION"
C L "TCPDisconnect" 45 480 5 "FUNCTION"
C L "TCPDisconnect" 45 480 5 "FUNCTION"
C L "TCPDisconnect" 45 480 6 "FUNCTION"
C L "TCPDisconnect" 45 480 9 "FUNCTION"
C L "TCPClose" 45 480 16 "FUNCTION"
V L "hTCP" 45 961 "TCP_SOCKET" `3079 
F G "TCPClose" 45 962 "void(TCP_SOCKET hTCP)" `2756 
C L "TCPGetRemoteInfo" 45 480 16 "FUNCTION"
V L "hTCP" 45 997 "TCP_SOCKET" `3079 
F G "TCPGetRemoteInfo" 45 998 "*SOCKET_INFO(TCP_SOCKET hTCP)" `2748 
V L "RemoteInfo" 45 999 "SOCKET_INFO" `3078 
C L "TCPFlush" 45 480 20 "FUNCTION"
V L "hTCP" 45 1047 "TCP_SOCKET" `3080 
F G "TCPFlush" 45 1048 "void(TCP_SOCKET hTCP)" `2809 
C L "TCPFlush" 45 480 1 "FUNCTION"
C L "TCPFlush" 45 480 1 "FUNCTION"
C L "TCPIsPutReady" 45 480 15 "FUNCTION"
V L "hTCP" 45 1089 "TCP_SOCKET" `3080 
F G "TCPIsPutReady" 45 1090 "WORD(TCP_SOCKET hTCP)" `2758 
V L "i" 45 1091 "BYTE" `3079 
C L "TCPIsPutReady" 45 480 1 "FUNCTION"
C L "TCPIsPutReady" 45 480 1 "FUNCTION"
C L "TCPPut" 45 480 12 "FUNCTION"
V L "hTCP" 45 1151 "TCP_SOCKET" `2761 
V L "byte" 45 1151 "BYTE" `3082 
F G "TCPPut" 45 1152 "int8(TCP_SOCKET hTCP,BYTE byte)" `2760 
V L "wFreeTXSpace" 45 1153 "WORD" `3080 
C L "TCPPut" 45 480 1 "FUNCTION"
C L "TCPPut" 45 480 3 "FUNCTION"
C L "TCPPut" 45 480 1 "FUNCTION"
C L "TCPPut" 45 480 3 "FUNCTION"
C L "TCPPutArray" 45 480 13 "FUNCTION"
V L "hTCP" 45 1233 "TCP_SOCKET" `2764 
V L "data" 45 1233 "*BYTE" `2765 
V L "len" 45 1233 "WORD" `3084 
F G "TCPPutArray" 45 1234 "WORD(TCP_SOCKET hTCP,*BYTE data,WORD len)" `2763 
V L "wActualLen" 45 1235 "WORD" `3081 
V L "wFreeTXSpace" 45 1236 "WORD" `3082 
V L "wRightLen" 45 1237 "WORD" `3083 
C L "TCPPutArray" 45 480 3 "FUNCTION"
C L "TCPPutArray" 45 480 1 "FUNCTION"
C L "TCPPutArray" 45 480 1 "FUNCTION"
C L "TCPPutArray" 45 480 3 "FUNCTION"
C L "TCPPutROMArray" 45 480 15 "FUNCTION"
V L "hTCP" 45 1352 "TCP_SOCKET" `2824 
V L "data" 45 1352 "*" `2825 
V L "len" 45 1352 "WORD" `3087 
F G "TCPPutROMArray" 45 1353 "WORD(TCP_SOCKET hTCP,* data,WORD len)" `2823 
V L "wActualLen" 45 1354 "WORD" `3084 
V L "wFreeTXSpace" 45 1355 "WORD" `3085 
V L "wRightLen" 45 1356 "WORD" `3086 
C L "TCPPutROMArray" 45 480 3 "FUNCTION"
C L "TCPPutROMArray" 45 480 1 "FUNCTION"
C L "TCPPutROMArray" 45 480 1 "FUNCTION"
C L "TCPPutROMArray" 45 480 3 "FUNCTION"
C L "TCPPutString" 45 480 20 "FUNCTION"
V L "hTCP" 45 1476 "TCP_SOCKET" `2768 
V L "data" 45 1476 "*BYTE" `3089 
F G "TCPPutString" 45 1477 "*BYTE(TCP_SOCKET hTCP,*BYTE data)" `2767 
V L "hTCP" 45 1511 "TCP_SOCKET" `2828 
V L "data" 45 1511 "*" `3089 
F G "TCPPutROMString" 45 1512 "*BYTE(TCP_SOCKET hTCP,* data)" `2827 
C L "TCPGetTxFIFOFull" 45 480 10 "FUNCTION"
V L "hTCP" 45 1533 "TCP_SOCKET" `3088 
F G "TCPGetTxFIFOFull" 45 1534 "WORD(TCP_SOCKET hTCP)" `2830 
V L "wDataLen" 45 1535 "WORD" `3087 
V L "wFIFOSize" 45 1536 "WORD" `3088 
C L "TCPGetTxFIFOFull" 45 480 1 "FUNCTION"
C L "TCPGetTxFIFOFull" 45 480 1 "FUNCTION"
C L "TCPDiscard" 45 480 12 "FUNCTION"
V L "hTCP" 45 1577 "TCP_SOCKET" `3090 
F G "TCPDiscard" 45 1578 "void(TCP_SOCKET hTCP)" `2802 
C L "TCPDiscard" 45 480 1 "FUNCTION"
C L "TCPDiscard" 45 480 1 "FUNCTION"
C L "TCPIsGetReady" 45 480 15 "FUNCTION"
V L "hTCP" 45 1614 "TCP_SOCKET" `3090 
F G "TCPIsGetReady" 45 1615 "WORD(TCP_SOCKET hTCP)" `2770 
C L "TCPGet" 45 480 12 "FUNCTION"
V L "hTCP" 45 1648 "TCP_SOCKET" `2775 
V L "byte" 45 1648 "*BYTE" `3091 
F G "TCPGet" 45 1649 "int8(TCP_SOCKET hTCP,*BYTE byte)" `2774 
V L "wGetReadyCount" 45 1650 "WORD" `3089  "See if there is any data which can be read"
C L "TCPGet" 45 480 1 "FUNCTION"
C L "TCPGet" 45 480 2 "FUNCTION"
C L "TCPGetArray" 45 480 14 "FUNCTION"
V L "hTCP" 45 1702 "TCP_SOCKET" `2778 
V L "buffer" 45 1702 "*BYTE" `2779 
V L "len" 45 1702 "WORD" `3093 
F G "TCPGetArray" 45 1703 "WORD(TCP_SOCKET hTCP,*BYTE buffer,WORD len)" `2777 
V L "wGetReadyCount" 45 1704 "WORD" `3090 
V L "RightLen" 45 1705 "WORD" `3091 
C L "TCPGetArray" 45 480 1 "FUNCTION"
C L "TCPGetArray" 45 480 1 "FUNCTION"
C L "TCPGetArray" 45 480 1 "FUNCTION"
C L "TCPGetArray" 45 480 1 "FUNCTION"
C L "TCPGetArray" 45 480 2 "FUNCTION"
C L "TCPGetRxFIFOFree" 45 480 12 "FUNCTION"
V L "hTCP" 45 1771 "TCP_SOCKET" `3093 
F G "TCPGetRxFIFOFree" 45 1772 "WORD(TCP_SOCKET hTCP)" `2772 
V L "wDataLen" 45 1773 "WORD" `3092 
V L "wFIFOSize" 45 1774 "WORD" `3093 
C L "TCPGetRxFIFOFree" 45 480 1 "FUNCTION"
C L "TCPGetRxFIFOFree" 45 480 1 "FUNCTION"
C L "TCPGetRxFIFOFree" 45 480 1 "FUNCTION"
C L "TCPPeekArray" 45 480 23 "FUNCTION"
V L "hTCP" 45 1842 "TCP_SOCKET" `2785 
V L "vBuffer" 45 1842 "*BYTE" `2786 
V L "wLen" 45 1842 "WORD" `2787 
V L "wStart" 45 1842 "WORD" `3098 
F G "TCPPeekArray" 45 1843 "WORD(TCP_SOCKET hTCP,*BYTE vBuffer,WORD wLen,WORD wStart)" `2784 
V L "ptrRead" 45 1844 "int16" `3094 
V L "w" 45 1845 "WORD" `3095 
V L "wBytesUntilWrap" 45 1846 "WORD" `3096 
C L "TCPPeekArray" 45 480 2 "FUNCTION"
C L "TCPPeekArray" 45 480 1 "FUNCTION"
C L "TCPPeekArray" 45 480 1 "FUNCTION"
C L "TCPPeekArray" 45 480 1 "FUNCTION"
C L "TCPPeekArray" 45 480 2 "FUNCTION"
C L "TCPPeek" 45 480 20 "FUNCTION"
V L "hTCP" 45 1912 "TCP_SOCKET" `2782 
V L "wStart" 45 1912 "WORD" `3099 
F G "TCPPeek" 45 1913 "BYTE(TCP_SOCKET hTCP,WORD wStart)" `2781 
V L "i" 45 1914 "BYTE" `3097 
C L "TCPFindArrayEx" 45 480 38 "FUNCTION"
V L "hTCP" 45 1971 "TCP_SOCKET" `2796 
V L "cFindArray" 45 1971 "*BYTE" `2797 
V L "wLen" 45 1971 "WORD" `2798 
V L "wStart" 45 1971 "WORD" `2799 
V L "wSearchLen" 45 1971 "WORD" `2800 
V L "bTextCompare" 45 1971 "int8" `3104 
F G "TCPFindArrayEx" 45 1972 "WORD(TCP_SOCKET hTCP,*BYTE cFindArray,WORD wLen,WORD wStart,WORD wSearchLen,int8 bTextCompare)" `2795 
V L "ptrRead" 45 1973 "int16" `3098 
V L "wDataLen" 45 1974 "WORD" `3099 
V L "wBytesUntilWrap" 45 1975 "WORD" `3100 
V L "ptrLocation" 45 1976 "int16" `3101 
V L "wLenStart" 45 1977 "WORD" `3102 
V L "cFindArrayStart" 45 1978 "*BYTE" `3103 
V L "i" 45 1979 "BYTE" `3104 
V L "j" 45 1979 "BYTE" `3105 
V L "k" 45 1979 "BYTE" `3106 
V L "isFinding" 45 1980 "BOOL" `3107 
V L "buffer" 45 1981 "BYTE[32]" `3108 
C L "TCPFindArrayEx" 45 480 2 "FUNCTION"
C L "TCPFindArrayEx" 45 480 1 "FUNCTION"
C L "TCPFindArrayEx" 45 480 1 "FUNCTION"
C L "TCPFindArrayEx" 45 480 1 "FUNCTION"
C L "TCPFindArrayEx" 45 480 1 "FUNCTION"
C L "TCPFindArrayEx" 45 480 1 "FUNCTION"
C L "TCPFindArrayEx" 45 480 1 "FUNCTION"
C L "TCPFindROMArrayEx" 45 480 37 "FUNCTION"
V L "hTCP" 45 2147 "TCP_SOCKET" `2817 
V L "cFindArray" 45 2147 "*" `2818 
V L "wLen" 45 2147 "WORD" `2819 
V L "wStart" 45 2147 "WORD" `2820 
V L "wSearchLen" 45 2147 "WORD" `2821 
V L "bTextCompare" 45 2147 "int8" `3115 
F G "TCPFindROMArrayEx" 45 2148 "WORD(TCP_SOCKET hTCP,* cFindArray,WORD wLen,WORD wStart,WORD wSearchLen,int8 bTextCompare)" `2816 
V L "ptrRead" 45 2149 "int16" `3109 
V L "wDataLen" 45 2150 "WORD" `3110 
V L "wBytesUntilWrap" 45 2151 "WORD" `3111 
V L "ptrLocation" 45 2152 "int16" `3112 
V L "wLenStart" 45 2153 "WORD" `3113 
V L "cFindArrayStart" 45 2154 "*" `3114 
V L "i" 45 2155 "BYTE" `3115 
V L "j" 45 2155 "BYTE" `3116 
V L "k" 45 2155 "BYTE" `3117 
V L "isFinding" 45 2156 "BOOL" `3118 
V L "buffer" 45 2157 "BYTE[32]" `3119 
C L "TCPFindROMArrayEx" 45 480 2 "FUNCTION"
C L "TCPFindROMArrayEx" 45 480 1 "FUNCTION"
C L "TCPFindROMArrayEx" 45 480 1 "FUNCTION"
C L "TCPFindROMArrayEx" 45 480 1 "FUNCTION"
C L "TCPFindROMArrayEx" 45 480 1 "FUNCTION"
C L "TCPFindROMArrayEx" 45 480 1 "FUNCTION"
C L "TCPFindROMArrayEx" 45 480 1 "FUNCTION"
C L "TCPFindEx" 45 480 35 "FUNCTION"
V L "hTCP" 45 2321 "TCP_SOCKET" `2790 
V L "cFind" 45 2321 "BYTE" `2791 
V L "wStart" 45 2321 "WORD" `2792 
V L "wSearchLen" 45 2321 "WORD" `2793 
V L "bTextCompare" 45 2321 "int8" `3125 
F G "TCPFindEx" 45 2322 "WORD(TCP_SOCKET hTCP,BYTE cFind,WORD wStart,WORD wSearchLen,int8 bTextCompare)" `2789 
C L "TCPTick" 45 480 16 "FUNCTION"
F G "TCPTick" 45 2355 "void()" `2808 
V L "hTCP" 45 2356 "TCP_SOCKET" `3120 
V L "bRetransmit" 45 2357 "BOOL" `3121 
V L "bCloseSocket" 45 2358 "BOOL" `3122 
V L "vFlags" 45 2359 "BYTE" `3123 
V L "w" 45 2360 "WORD" `3124  "Periodically all "not closed" sockets must perform timed operations"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 2 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 2 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 4 "FUNCTION"
C L "TCPTick" 45 480 3 "FUNCTION"
C L "TCPTick" 45 480 3 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 2 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 4 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 3 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 3 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 3 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 3 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 2 "FUNCTION"
C L "TCPTick" 45 480 2 "FUNCTION"
C L "TCPTick" 45 480 3 "FUNCTION"
C L "TCPTick" 45 480 2 "FUNCTION"
C L "TCPTick" 45 480 4 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 3 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 1 "FUNCTION"
C L "TCPTick" 45 480 2 "FUNCTION"
C L "TCPProcess" 45 480 17 "FUNCTION"
V L "remote" 45 2812 "*NODE_INFO" `2805 
V L "localIP" 45 2812 "*DWORD_VAL" `2806 
V L "len" 45 2812 "WORD" `3128 
F G "TCPProcess" 45 2813 "int8(*NODE_INFO remote,*DWORD_VAL localIP,WORD len)" `2804 
V L "TCPHeader" 45 2814 "TCP_HEADER" `3125 
V L "pseudoHeader" 45 2815 "PSEUDO_HEADER" `3126 
V L "checksum1" 45 2816 "WORD_VAL" `3127 
V L "checksum2" 45 2817 "WORD_VAL" `3128 
V L "optionsSize" 45 2818 "BYTE" `3129  "Calculate IP pseudoheader checksum."
C L "TCPProcess" 45 480 2 "FUNCTION"
C L "TCPProcess" 45 480 1 "FUNCTION"
C L "TCPProcess" 45 480 1 "FUNCTION"
C L "TCPProcess" 45 480 1 "FUNCTION"
C L "TCPProcess" 45 480 1 "FUNCTION"
C L "TCPProcess" 45 480 9 "FUNCTION"
C L "SendTCP" 45 480 16 "FUNCTION"
V L "vTCPFlags" 45 2929 "BYTE" `3050 
V L "vSendFlags" 45 2929 "BYTE" `3132 
F G "SendTCP" 45 2930 "void(BYTE vTCPFlags,BYTE vSendFlags)" `3049 
V L "wVal" 45 2931 "WORD_VAL" `3130 
V L "header" 45 2932 "TCP_HEADER" `3131 
V L "options" 45 2933 "TCP_OPTIONS" `3132 
V L "pseudoHeader" 45 2934 "PSEUDO_HEADER" `3133 
V L "len" 45 2935 "WORD" `3134 
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 2 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 3 "FUNCTION"
C L "SendTCP" 45 480 2 "FUNCTION"
C L "SendTCP" 45 480 2 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 4 "FUNCTION"
C L "SendTCP" 45 480 2 "FUNCTION"
C L "SendTCP" 45 480 2 "FUNCTION"
C L "SendTCP" 45 480 3 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "SendTCP" 45 480 1 "FUNCTION"
C L "FindMatchingTCPSocket" 45 480 17 "FUNCTION"
V L "h" 45 3218 "*TCP_HEADER" `3056 
V L "remote" 45 3218 "*NODE_INFO" `3137 
F G "FindMatchingTCPSocket" 45 3219 "int8(*TCP_HEADER h,*NODE_INFO remote)" `3055 
V L "hTCP" 45 3220 "TCP_SOCKET" `3135 
V L "partialMatch" 45 3221 "TCP_SOCKET" `3136 
V L "hash" 45 3222 "WORD" `3137  "Prevent connections on invalid port 0"
C L "FindMatchingTCPSocket" 45 480 2 "FUNCTION"
C L "FindMatchingTCPSocket" 45 480 1 "FUNCTION"
C L "FindMatchingTCPSocket" 45 480 1 "FUNCTION"
C L "FindMatchingTCPSocket" 45 480 4 "FUNCTION"
C L "FindMatchingTCPSocket" 45 480 4 "FUNCTION"
C L "FindMatchingTCPSocket" 45 480 1 "FUNCTION"
C L "FindMatchingTCPSocket" 45 480 4 "FUNCTION"
V L "wQueueInsertPos" 45 3313 "WORD" `3138  "See if this is a SYN packet"
C L "FindMatchingTCPSocket" 45 480 1 "FUNCTION"
C L "FindMatchingTCPSocket" 45 480 3 "FUNCTION"
C L "FindMatchingTCPSocket" 45 480 1 "FUNCTION"
C L "FindMatchingTCPSocket" 45 480 1 "FUNCTION"
C L "FindMatchingTCPSocket" 45 480 1 "FUNCTION"
C L "FindMatchingTCPSocket" 45 480 3 "FUNCTION"
C L "FindMatchingTCPSocket" 45 480 1 "FUNCTION"
C L "SwapTCPHeader" 45 480 12 "FUNCTION"
V L "header" 45 3399 "*TCP_HEADER" `3140 
F G "SwapTCPHeader" 45 3400 "void(*TCP_HEADER header)" `3058 
C L "CloseSocket" 45 480 14 "FUNCTION"
F G "CloseSocket" 45 3434 "void()" `3060 
C L "GetMaxSegSizeOption" 45 480 19 "FUNCTION"
F G "GetMaxSegSizeOption" 45 3516 "WORD(*TCP_HEADER header,*sint8 NetBIOSName,* ip)" `3139 
V L "vOptionsBytes" 45 3517 "BYTE" `3140 
V L "vOption" 45 3518 "BYTE" `3141 
V L "wMSS" 45 3519 "WORD" `3142  "Find out how many options bytes are in this packet."
C L "GetMaxSegSizeOption" 45 480 1 "FUNCTION"
C L "GetMaxSegSizeOption" 45 480 2 "FUNCTION"
C L "GetMaxSegSizeOption" 45 480 1 "FUNCTION"
C L "GetMaxSegSizeOption" 45 480 1 "FUNCTION"
C L "GetMaxSegSizeOption" 45 480 1 "FUNCTION"
C L "GetMaxSegSizeOption" 45 480 1 "FUNCTION"
C L "GetMaxSegSizeOption" 45 480 1 "FUNCTION"
C L "GetMaxSegSizeOption" 45 480 1 "FUNCTION"
C L "GetMaxSegSizeOption" 45 480 1 "FUNCTION"
C L "GetMaxSegSizeOption" 45 480 1 "FUNCTION"
C L "GetMaxSegSizeOption" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 17 "FUNCTION"
V L "h" 45 3608 "*TCP_HEADER" `3053 
V L "len" 45 3608 "WORD" `3145 
F G "HandleTCPSeg" 45 3609 "void(*TCP_HEADER h,WORD len)" `3052 
V L "dwTemp" 45 3610 "DWORD" `3143 
V L "wTemp" 45 3611 "int16" `3144 
V L "lMissingBytes" 45 3612 "LONG" `3145 
V L "wMissingBytes" 45 3613 "WORD" `3146 
V L "wFreeSpace" 45 3614 "WORD" `3147 
V L "localHeaderFlags" 45 3615 "BYTE" `3148 
V L "localAckNumber" 45 3616 "DWORD" `3149 
V L "localSeqNumber" 45 3617 "DWORD" `3150 
V L "wSegmentLength" 45 3618 "WORD" `3151 
V L "bSegmentAcceptable" 45 3619 "BOOL" `3152 
V L "wNewWindow" 45 3620 "WORD" `3153  "Cache a few variables in local RAM."
C L "HandleTCPSeg" 45 480 2 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 4 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 3 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 2 "FUNCTION"
C L "HandleTCPSeg" 45 480 5 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 2 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 3 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 2 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 4 "FUNCTION"
C L "HandleTCPSeg" 45 480 3 "FUNCTION"
C L "HandleTCPSeg" 45 480 2 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 2 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 2 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 3 "FUNCTION"
C L "HandleTCPSeg" 45 480 3 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 2 "FUNCTION"
C L "HandleTCPSeg" 45 480 8 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 9 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 4 "FUNCTION"
C L "HandleTCPSeg" 45 480 3 "FUNCTION"
C L "HandleTCPSeg" 45 480 2 "FUNCTION"
C L "HandleTCPSeg" 45 480 3 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 2 "FUNCTION"
C L "HandleTCPSeg" 45 480 2 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 2 "FUNCTION"
C L "HandleTCPSeg" 45 480 2 "FUNCTION"
C L "HandleTCPSeg" 45 480 5 "FUNCTION"
C L "HandleTCPSeg" 45 480 10 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 3 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 3 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 5 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "HandleTCPSeg" 45 480 5 "FUNCTION"
C L "HandleTCPSeg" 45 480 9 "FUNCTION"
C L "HandleTCPSeg" 45 480 9 "FUNCTION"
C L "HandleTCPSeg" 45 480 1 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 41 "FUNCTION"
V L "hTCP" 45 4357 "TCP_SOCKET" `2833 
V L "wMinRXSize" 45 4357 "WORD" `2834 
V L "wMinTXSize" 45 4357 "WORD" `2835 
V L "vFlags" 45 4357 "BYTE" `3158 
F G "TCPAdjustFIFOSize" 45 4358 "int8(TCP_SOCKET hTCP,WORD wMinRXSize,WORD wMinTXSize,BYTE vFlags)" `2832 
V L "ptrTemp" 45 4359 "int16" `3154 
V L "ptrHead" 45 4359 "int16" `3155 
V L "wTXAllocation" 45 4360 "WORD" `3156 
C L "TCPAdjustFIFOSize" 45 480 1 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 2 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 3 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 1 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 1 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 1 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 1 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 1 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 1 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 1 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 1 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 2 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 1 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 1 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 1 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 1 "FUNCTION"
C L "TCPAdjustFIFOSize" 45 480 1 "FUNCTION"
C L "TCPRAMCopy" 45 480 24 "FUNCTION"
V L "ptrDest" 45 4548 "int16" `3039 
V L "vDestType" 45 4548 "BYTE" `3040 
V L "ptrSource" 45 4548 "int16" `3041 
V L "vSourceType" 45 4548 "BYTE" `3042 
V L "wLength" 45 4548 "WORD" `3162 
F G "TCPRAMCopy" 45 4549 "void(int16 ptrDest,BYTE vDestType,int16 ptrSource,BYTE vSourceType,WORD wLength)" `3038 
V L "wDest" 45 4692 "int16" `3045 
V L "wDestType" 45 4692 "BYTE" `3046 
V L "wSource" 45 4692 "*" `3047 
V L "wLength" 45 4692 "WORD" `3161 
F G "TCPRAMCopyROM" 45 4693 "void(int16 wDest,BYTE wDestType,* wSource,WORD wLength)" `3044 
V L "vBuffer" 45 4694 "BYTE[16]" `3157 
V L "w" 45 4695 "WORD" `3158 
C L "TCPRAMCopyROM" 45 480 1 "FUNCTION"
C L "TCPTouch" 45 480 236 "FUNCTION"
V L "s" 35 120 "TCP_SOCKET" `3160 
F G "TCPTouch" 35 121 "void(TCP_SOCKET s,WORD wLength,WORD wLength)" `3159 
D G "__P18CXXXX_C__" 46 4 ""
C L "memcpypgm2ram" 3 1 1 "FUNCTION"
C L "memcpypgm2ram" 46 7 14 "FUNCTION"
V L "d" 46 40 "*int8" `1636 
V L "s" 46 40 "int32" `1637 
V L "n" 46 40 "int16" `3164 
F G "memcpypgm2ram" 46 41 "void(*int8 d,int32 s,int16 n)" `1635  "printf("ROM_0x%LX-to-0x%LX ", d, s);"
V L "d" 46 50 "*sint8" `1640 
V L "s" 46 50 "int32" `3163 
F G "strcpypgm2ram" 46 51 "void(*sint8 d,int32 s)" `1639 
V L "c" 46 52 "sint8" `3161 
C L "DHCPBoundOrDisabled" 46 7 1 "FUNCTION"
F G "DHCPBoundOrDisabled" 35 200 "int8()" `2849 
F G "IsLinked" 35 209 "int8()" `2850 
D G "debug_array" 35 670 "(str, p, n)"
C L "TickGetSafe" 35 648 3 "FUNCTION"
F G "TickGetSafe" 35 678 "TICK()" `2851 
V L "myTickReading" 35 679 "BYTE[6]" `3162 
C L "GenerateRandomByteFromTimers" 35 648 1 "FUNCTION"
F G "GenerateRandomByteFromTimers" 35 698 "BYTE()" `2852 
V L "rand" 35 699 "BYTE" `3163 
C L "MACAddrInit" 1 773 4 "FUNCTION"
F G "MACAddrInit" 1 780 "void()" `3164 
F G "IPAddrInit" 1 792 "void()" `3165  "IP address of this unit"
C L "IPAddrInit" 1 773 1 "FUNCTION"
C L "IPAddrInit" 1 773 1 "FUNCTION"
V G "ExampleIPDatagram" 1 819 "sint8[1]" `3166 
V G "ExampleUDPPacket" 1 825 "sint8[1]" `3167 
V L "str" 1 830 "*sint8" `3169 
V L "mac" 1 830 "*MAC_ADDR" `3170 
F G "MACToString" 1 831 "void(*sint8 str,*MAC_ADDR mac)" `3168 
V L "str" 1 835 "*sint8" `3179 
V L "ip" 1 835 "*DWORD_VAL" `3180 
F G "IPToString" 1 836 "void(*sint8 str,*DWORD_VAL ip)" `3178 
C L "Init" 1 840 2 "*"
F G "Init" 1 910 "void()" `3188 
C L "Init" 1 840 1 "FUNCTION"
C L "Init" 1 840 1 "FUNCTION"
C L "Init" 1 840 1 "FUNCTION"
V G "TCPSocketInitializer" 0 28 "TCPSocketInitializer_t[1]" `2290 
D G "MY_HTTP_SOCKET" 0 33 "80"
V G "HTTPSocket" 0 35 "int8" `3189 
C L "HTTPPut" 0 27 63 "FUNCTION"
V L "c" 0 131 "sint8" `3191 
F G "HTTPPut" 0 131 "void(sint8 c)" `3190 
F G "HTTPTask" 0 135 "void()" `3192 
V L "HTTP_ST_CONNECT" 0 136 "0" `3194 
V L "HTTP_ST_WAIT_CONNECT" 0 136 "1" `3195 
V L "HTTP_ST_GET" 0 137 "2" `3196 
V L "HTTP_ST_PUT" 0 137 "3" `3197 
V L "HTTP_ST_DISCONNECT" 0 137 "4" `3198 
V L "state" 0 137 "" `3199 
V L "timeout_counter" 0 138 "TICK" `3200 
V L "lc" 0 139 "sint8" `3201 
V L "lc2" 0 139 "sint8" `3202 
V L "c" 0 140 "sint8" `3203 
V L "content" 0 141 "sint8[250]" `3204 
V L "a0" 0 142 "int8" `3205 
F G "main" 0 224 "void()" `3234 
C L "main" 0 27 2 "FUNCTION"
C L "main" 0 27 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "scanf" 1 255
F B "fscanf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "profileout" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "interrupt_enabled" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "output_f" 1 0
F B "output_g" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "input_f" 0 0
F B "input_g" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "set_tris_f" 1 0
F B "set_tris_g" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "get_tris_f" 0 0
F B "get_tris_g" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "input_change_f" 0 0
F B "input_change_g" 0 0
F B "port_b_pullups" 1 0
F B "port_d_pullups" 1 0
F B "port_e_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "get_adc_ports" 0 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_timer_4" 3 0
F B "get_timer4" 0 0
F B "set_timer4" 1 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 2
F B "set_pwm2_duty" 1 0
F B "setup_ccp3" 1 2
F B "set_pwm3_duty" 1 0
F B "setup_ccp4" 1 0
F B "set_pwm4_duty" 1 0
F B "setup_ccp5" 1 0
F B "set_pwm5_duty" 1 0
F B "setup_oscillator" 0 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 2
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
